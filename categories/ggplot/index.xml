<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ggplot on Statistically Significant</title>
    <link>/categories/ggplot/</link>
    <description>Recent content in ggplot on Statistically Significant</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 27 Dec 2013 00:00:00 +0000</lastBuildDate>
    
	    <atom:link href="/categories/ggplot/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Top Songs by Artist on CD102.5 in 2013</title>
      <link>/2013/12/27/top-songs-by-artist-on-cd102.5-in-2013/</link>
      <pubDate>Fri, 27 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/12/27/top-songs-by-artist-on-cd102.5-in-2013/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
In a &lt;a href=&#34;http://alandgraf.blogspot.com/2013/08/downloading-and-analyzing-cd1025s.html&#34;&gt;previous post&lt;/a&gt;, I showed you how to scrape playlist data from Columbus, OH alternative rock station &lt;a href=&#34;http://cd1025.com/&#34;&gt;CD102.5&lt;/a&gt;. Since it&#39;s the end of the year and best-of lists are all the fad, I thought I would share the most popular songs and artists of the year, according to this data. In addition to this, I am going to make an interactive graph using &lt;a href=&#34;http://www.rstudio.com/shiny/&#34;&gt;Shiny&lt;/a&gt;, where the user can select an artist and it will graph the &lt;a href=&#34;https://andland.shinyapps.io/CD1025Playlist/&#34;&gt;most popular songs&lt;/a&gt; from that artist.&lt;br /&gt;&lt;br /&gt;First off, I am assuming that you have scraped the appropriate data using the code from the previous post.&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;library(lubridate)&lt;br /&gt;library(sqldf)&lt;br /&gt;&lt;br /&gt;playlist=read.csv(&#34;CD101Playlist.csv&#34;,stringsAsFactors=FALSE)&lt;br /&gt;dates=mdy(substring(playlist[,3],nchar(playlist[,3])-9,nchar(playlist[,3])))&lt;br /&gt;times=hm(substring(playlist[,3],1,nchar(playlist[,3])-10))&lt;br /&gt;playlist$Month=ymd(paste(year(dates),month(dates),&#34;1&#34;,sep=&#34;-&#34;))&lt;br /&gt;playlist$Day=dates&lt;br /&gt;playlist$Time=times&lt;br /&gt;playlist=playlist[order(playlist$Day,playlist$Time),]&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;Next, I will select just the data from 2013 and find the songs that were played most often. &lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;playlist=subset(playlist,Day&amp;gt;=mdy(&#34;1/1/13&#34;))&lt;br /&gt;playlist$ArtistSong=paste(playlist$Artist,playlist$Song,sep=&#34;-&#34;)&lt;br /&gt;top.songs=sqldf(&#34;Select ArtistSong, Count(ArtistSong) as Num&lt;br /&gt;      From playlist&lt;br /&gt;      Group By ArtistSong&lt;br /&gt;      Order by Num DESC&lt;br /&gt;      Limit 10&#34;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;The top 10 songs are the following:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;                              Artist-Song Number Plays&lt;br /&gt;1  FITZ AND THE TANTRUMS-OUT OF MY LEAGUE 809&lt;br /&gt;2                      ALT J-BREEZEBLOCKS 764&lt;br /&gt;3              COLD WAR KIDS-MIRACLE MILE 759&lt;br /&gt;4                      ATLAS GENIUS-IF SO 750&lt;br /&gt;5                         FOALS-MY NUMBER 687&lt;br /&gt;6                         MS MR-HURRICANE 679&lt;br /&gt;7       THE NEIGHBOURHOOD-SWEATER WEATHER 657&lt;br /&gt;8           CAPITAL CITIES-SAFE AND SOUND 646&lt;br /&gt;9             VAMPIRE WEEKEND-DIANE YOUNG 639&lt;br /&gt;10             THE FEATURES-THIS DISORDER 632&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;I will make a plot similar to the plots made in &lt;a href=&#34;http://alandgraf.blogspot.com/2013/08/when-did-cd1025-book-summerfest-artists.html&#34;&gt;the last post&lt;/a&gt; to show when the top 5 songs were played throughout the year.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;    &lt;br /&gt;plays.per.day=sqldf(&#34;Select Day, Count(Artist) as Num&lt;br /&gt;      From playlist&lt;br /&gt;      Group By Day&lt;br /&gt;      Order by Day&#34;)&lt;br /&gt;&lt;br /&gt;playlist.top.songs=subset(playlist,ArtistSong %in% top.songs$ArtistSong[1:5])&lt;br /&gt;&lt;br /&gt;song.per.day=sqldf(paste0(&#34;Select Day, ArtistSong, Count(ArtistSong) as Num&lt;br /&gt;                          From [playlist.top.songs]&lt;br /&gt;                          Group By Day, ArtistSong&lt;br /&gt;                          Order by Day, ArtistSong&#34;))&lt;br /&gt;dspd=dcast(song.per.day,Day~ArtistSong,sum,value.var=&#34;Num&#34;)&lt;br /&gt;&lt;br /&gt;song.per.day=merge(plays.per.day[,1,drop=FALSE],dspd,all.x=TRUE)&lt;br /&gt;song.per.day[is.na(song.per.day)]=0&lt;br /&gt;&lt;br /&gt;song.per.day=melt(song.per.day,1,variable.name=&#34;ArtistSong&#34;,value.name=&#34;Num&#34;)&lt;br /&gt;song.per.day$Alpha=ifelse(song.per.day$Num&amp;gt;0,1,0)&lt;br /&gt;&lt;br /&gt;library(ggplot2)&lt;br /&gt;ggplot(song.per.day,aes(Day,Num,colour=ArtistSong))+geom_point(aes(alpha=Alpha))+&lt;br /&gt;  geom_smooth(method=&#34;gam&#34;,family=poisson,formula=y~s(x),se=F,size=1)+&lt;br /&gt;  labs(x=&#34;Date&#34;,y=&#34;Plays Per Day&#34;,title=&#34;Top Songs&#34;,colour=NULL)+&lt;br /&gt;  scale_alpha_continuous(guide=FALSE,range=c(0,.5))+theme_bw()&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-JWP3RQkgQeo/Ur4-RG1px7I/AAAAAAAAH-U/JH6gP0Jk6Tc/s1600/TopSongs.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://4.bp.blogspot.com/-JWP3RQkgQeo/Ur4-RG1px7I/AAAAAAAAH-U/JH6gP0Jk6Tc/s1600/TopSongs.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;Alt-J was more popular in the beginning of the year and the Foals have been more popular recently.&lt;br /&gt;&lt;br /&gt;I can similarly summarize by artist as well.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;top.artists=sqldf(&#34;Select Artist, Count(Artist) as Num&lt;br /&gt;                From playlist&lt;br /&gt;                Group By Artist&lt;br /&gt;                Order by Num DESC&lt;br /&gt;                Limit 10&#34;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;                    Artist  Num&lt;br /&gt;1                     MUSE 1683&lt;br /&gt;2          VAMPIRE WEEKEND 1504&lt;br /&gt;3        SILVERSUN PICKUPS 1442&lt;br /&gt;4                    FOALS 1439&lt;br /&gt;5                  PHOENIX 1434&lt;br /&gt;6            COLD WAR KIDS 1425&lt;br /&gt;7                JAKE BUGG 1316&lt;br /&gt;8  QUEENS OF THE STONE AGE 1296&lt;br /&gt;9                    ALT J 1233&lt;br /&gt;10     OF MONSTERS AND MEN 1150&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;playlist.top.artists=subset(playlist,Artist %in% top.artists$Artist[1:5])&lt;br /&gt;&lt;br /&gt;artists.per.day=sqldf(paste0(&#34;Select Day, Artist, Count(Artist) as Num&lt;br /&gt;                          From [playlist.top.artists]&lt;br /&gt;                          Group By Day, Artist&lt;br /&gt;                          Order by Day, Artist&#34;))&lt;br /&gt;dspd=dcast(artists.per.day,Day~Artist,sum,value.var=&#34;Num&#34;)&lt;br /&gt;&lt;br /&gt;artists.per.day=merge(plays.per.day[,1,drop=FALSE],dspd,all.x=TRUE)&lt;br /&gt;artists.per.day[is.na(artists.per.day)]=0&lt;br /&gt;&lt;br /&gt;artists.per.day=melt(artists.per.day,1,variable.name=&#34;Artist&#34;,value.name=&#34;Num&#34;)&lt;br /&gt;artists.per.day$Alpha=ifelse(artists.per.day$Num&amp;gt;0,1,0)&lt;br /&gt;&lt;br /&gt;ggplot(artists.per.day,aes(Day,Num,colour=Artist))+geom_point(aes(alpha=Alpha))+&lt;br /&gt;  geom_smooth(method=&#34;gam&#34;,family=poisson,formula=y~s(x),se=F,size=1)+&lt;br /&gt;  labs(x=&#34;Date&#34;,y=&#34;Plays Per Day&#34;,title=&#34;Top Artists&#34;,colour=NULL)+&lt;br /&gt;  scale_alpha_continuous(guide=FALSE,range=c(0,.5))+theme_bw()&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-57hZwciuIug/Ur5AO9l7NWI/AAAAAAAAH-g/Xi2_4e-FwZw/s1600/TopArtist.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-57hZwciuIug/Ur5AO9l7NWI/AAAAAAAAH-g/Xi2_4e-FwZw/s1600/TopArtist.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;The pattern for the artists are not as clear as it is for the songs.&lt;br /&gt;&lt;br /&gt;Finally, I wrote &lt;a href=&#34;https://andland.shinyapps.io/CD1025Playlist/&#34;&gt;a Shiny interactive app&lt;/a&gt;. They are surprisingly easy to create and if you are thinking about experimenting with it, I suggest you try it. I will leave the code for the app in &lt;a href=&#34;https://gist.github.com/andland/8155783&#34;&gt;a gist&lt;/a&gt;. In &lt;a href=&#34;https://andland.shinyapps.io/CD1025Playlist/&#34;&gt;the app&lt;/a&gt;, you can enter any artist you want, and it will show you the most popular songs on CD102.5 for that artist. You can also select the number of songs that it plots with the slider.&lt;br /&gt;&lt;br /&gt;For example, even though Muse did not have one of the most popular songs of the year, they were still the band that was played the most. By typing in &#34;MUSE&#34; in the Artist text input, you will get the &lt;a href=&#34;https://andland.shinyapps.io/CD1025Playlist/&#34;&gt;following output&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-EuKnItqFzCo/Ur5CQELkw0I/AAAAAAAAH-s/Pv4dJwueLQM/s1600/Muse.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://1.bp.blogspot.com/-EuKnItqFzCo/Ur5CQELkw0I/AAAAAAAAH-s/Pv4dJwueLQM/s1600/Muse.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;They had two songs that were very popular this year and a few others that were decently popular as well.&lt;br /&gt;&lt;br /&gt;&lt;a href=&#34;https://andland.shinyapps.io/CD1025Playlist/&#34;&gt;Play around&lt;/a&gt; with it and let me know what you think.&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>When Did CD102.5 Book the Summerfest Artists?</title>
      <link>/2013/08/27/when-did-cd102.5-book-the-summerfest-artists/</link>
      <pubDate>Tue, 27 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/08/27/when-did-cd102.5-book-the-summerfest-artists/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
&lt;iframe frameborder=&#34;0&#34; height=&#34;4775&#34; scrolling=&#34;no&#34; src=&#34;https://www.dropbox.com/s/atit9fmf0hrla1q/CD101summerfest.html&#34; width=&#34;100%&#34;&gt;&amp;amp;lt;p&amp;amp;gt;Loading ...&amp;amp;lt;/p&amp;amp;gt;&lt;/iframe&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Downloading and Analyzing CD1025&#39;s Playlist</title>
      <link>/2013/08/20/downloading-and-analyzing-cd1025s-playlist/</link>
      <pubDate>Tue, 20 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/08/20/downloading-and-analyzing-cd1025s-playlist/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
&lt;a href=&#34;http://www.cd101.com/&#34;&gt;CD1025&lt;/a&gt; is an “alternative” radio station here in Columbus. They are one of the few remaining radio stations that are independently owned and they take great pride in it. For data nerds like me, they also put a real time list of recently played songs on &lt;a href=&#34;http://cd1025.com/about/playlists/now-playing&#34;&gt;their website&lt;/a&gt;. The page has the most recent 50 songs played, but you can also click on “Older Tracks” to go back in time. When you do this, the URL ends “now-playing/?start=50”. If you got back again, it says “now-playing/?start=100”.&lt;br /&gt;&lt;br /&gt;Using this structure, I decided to see if I could download all of their historical data and see how far it goes back. In the code below, I use the XML package to go to the website and download the 50 songs and then increment the number by 50 to find the previous 50 songs. I am telling the code to keep doing this until I get to January 1, 2012.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;library(ggplot2)&lt;br /&gt;theme_set(theme_bw())&lt;br /&gt;library(XML)&lt;br /&gt;library(lubridate)&lt;br /&gt;library(sqldf)&lt;br /&gt;startNum = 0&lt;br /&gt;while (TRUE) {&lt;br /&gt;    theurl &amp;lt;- paste0(&#34;http://cd1025.com/about/playlists/now-playing/?start=&#34;, &lt;br /&gt;        startNum)&lt;br /&gt;    table &amp;lt;- readHTMLTable(theurl, stringsAsFactors = FALSE)[[1]]&lt;br /&gt;    if (startNum == 0) {&lt;br /&gt;        playlist = table[, -1]&lt;br /&gt;    } else {&lt;br /&gt;        playlist = rbind(playlist, table[, -1])&lt;br /&gt;    }&lt;br /&gt;    dt = mdy(substring(table[1, 4], nchar(table[1, 4]) - 9, nchar(table[1, 4])))&lt;br /&gt;    print(dt)&lt;br /&gt;    if (dt &amp;lt; mdy(&#34;1/1/12&#34;)) {&lt;br /&gt;        break&lt;br /&gt;    }&lt;br /&gt;    startNum = startNum + 50&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;playlist = unique(playlist)  # Remove Dupes&lt;br /&gt;&lt;br /&gt;write.csv(playlist, &#34;CD101Playlist.csv&#34;, row.names = FALSE)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;This takes a while and is fairly large. My file has over 150,000 songs. If you want just a little data, change the date to last week or so. The first thing I will do is parse the dates and times of the songs, order them, and look at the first few songs. You can see that data only goes back to March of 2012.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;dates = mdy(substring(playlist[, 3], nchar(playlist[, 3]) - 9, nchar(playlist[, &lt;br /&gt;    3])))&lt;br /&gt;times = hm(substring(playlist[, 3], 1, nchar(playlist[, 3]) - 10))&lt;br /&gt;playlist$Month = ymd(paste(year(dates), month(dates), &#34;1&#34;, sep = &#34;-&#34;))&lt;br /&gt;playlist$Day = dates&lt;br /&gt;playlist$Time = times&lt;br /&gt;playlist = playlist[order(playlist$Day, playlist$Time), ]&lt;br /&gt;head(playlist)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;##                     Artist                Song       Last.Played&lt;br /&gt;## 151638 DEATH CAB FOR CUTIE   YOU ARE A TOURIST 12:34am03/01/2012&lt;br /&gt;## 151637       SLEEPER AGENT          GET BURNED 12:38am03/01/2012&lt;br /&gt;## 151636          WASHED OUT           AMOR FATI 12:41am03/01/2012&lt;br /&gt;## 151635            COLDPLAY       CHARLIE BROWN 12:45am03/01/2012&lt;br /&gt;## 151634           GROUPLOVE         TONGUE TIED 12:49am03/01/2012&lt;br /&gt;## 151633               SUGAR YOUR FAVORITE THING 12:52am03/01/2012&lt;br /&gt;##             Month        Day   Time&lt;br /&gt;## 151638 2012-03-01 2012-03-01 34M 0S&lt;br /&gt;## 151637 2012-03-01 2012-03-01 38M 0S&lt;br /&gt;## 151636 2012-03-01 2012-03-01 41M 0S&lt;br /&gt;## 151635 2012-03-01 2012-03-01 45M 0S&lt;br /&gt;## 151634 2012-03-01 2012-03-01 49M 0S&lt;br /&gt;## 151633 2012-03-01 2012-03-01 52M 0S&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Using the sqldf package, I can easily see what the most played artists and songs are from the data I scraped.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;sqldf(&#34;Select Artist, Count(Artist) as PlayCount&lt;br /&gt;       From playlist&lt;br /&gt;       Group By Artist&lt;br /&gt;       Order by PlayCount DESC&lt;br /&gt;       Limit 10&#34;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;##                   Artist PlayCount&lt;br /&gt;## 1      SILVERSUN PICKUPS      2340&lt;br /&gt;## 2         THE BLACK KEYS      2203&lt;br /&gt;## 3                   MUSE      1988&lt;br /&gt;## 4              THE SHINS      1885&lt;br /&gt;## 5    OF MONSTERS AND MEN      1753&lt;br /&gt;## 6            PASSION PIT      1552&lt;br /&gt;## 7              GROUPLOVE      1544&lt;br /&gt;## 8  RED HOT CHILI PEPPERS      1514&lt;br /&gt;## 9                 METRIC      1495&lt;br /&gt;## 10          ATLAS GENIUS      1494&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;&lt;br /&gt;sqldf(&#34;Select Artist, Song, Count(Song) as PlayCount&lt;br /&gt;      From playlist&lt;br /&gt;      Group By Artist, Song&lt;br /&gt;      Order by PlayCount DESC&lt;br /&gt;      Limit 10&#34;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;##                 Artist                    Song PlayCount&lt;br /&gt;## 1          PASSION PIT             TAKE A WALK       828&lt;br /&gt;## 2    SILVERSUN PICKUPS                PIT, THE       825&lt;br /&gt;## 3         ATLAS GENIUS                 TROJANS       819&lt;br /&gt;## 4        WALK THE MOON                ANNA SUN       742&lt;br /&gt;## 5       THE BLACK KEYS LITTLE BLACK SUBMARINES       736&lt;br /&gt;## 6          DIVINE FITS  WOULD THAT NOT BE NICE       731&lt;br /&gt;## 7        THE LUMINEERS                  HO HEY       722&lt;br /&gt;## 8       CAPITAL CITIES          SAFE AND SOUND       712&lt;br /&gt;## 9  OF MONSTERS AND MEN          MOUNTAIN SOUND       711&lt;br /&gt;## 10               ALT J            BREEZEBLOCKS       691&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;I am a little surprised that Silversun Pickups are the number one band, but everyone on the list makes sense. Looking at how the plays of the top artists have varied from month to month, you can see a few patterns. Muse has been more popular recently and The Shins and Grouplove have lost some steam.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;artist.month=sqldf(&#34;Select Month, Artist, Count(Song) as Num&lt;br /&gt;      From playlist&lt;br /&gt;      Group By Month, Artist&lt;br /&gt;      Order by Month, Artist&#34;)&lt;br /&gt;artist=sqldf(&#34;Select Artist, Count(Artist) as Num&lt;br /&gt;      From playlist&lt;br /&gt;      Group By Artist&lt;br /&gt;      Order by Num DESC&#34;)&lt;br /&gt;p=ggplot(subset(artist.month,Artist %in% head(artist$Artist,8)),aes(Month,Num))&lt;br /&gt;p+geom_bar(stat=&#34;identity&#34;,aes(fill=Artist),position=&#39;fill&#39;,colour=&#34;grey&#34;)+&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt; labs(y=&#34;Percentage of Plays&#34;)&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-ZbWCMOMUX8E/UhPvnh1UoqI/AAAAAAAAH8I/EIAlTwFKjxg/s1600/PlayProportionByMonth.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://3.bp.blogspot.com/-ZbWCMOMUX8E/UhPvnh1UoqI/AAAAAAAAH8I/EIAlTwFKjxg/s1600/PlayProportionByMonth.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;For the play count of the top artists, I see some odd numbers in June and July of 2012. The number of plays went way down.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;p + geom_area(aes(fill = Artist), position = &#34;stack&#34;, colour = 1) + labs(y = &#34;Number of Plays&#34;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/--0tLMWDJuAI/UhPvnsQAl2I/AAAAAAAAH8M/tl2RtleoH2k/s1600/PlayCountByMonth.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://1.bp.blogspot.com/--0tLMWDJuAI/UhPvnsQAl2I/AAAAAAAAH8M/tl2RtleoH2k/s1600/PlayCountByMonth.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Looking into this further, I plotted the date and time that the song was played by the cumulative number of songs played since the beginning of the list. The plot should be a line with a constant slope, meaning that the plays per day are relatively constant. You can see in June and July of 2012 there are flat spots where there is no playlist history. &lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;qplot(playlist$Day + playlist$Time, 1:length(dates), geom = &#34;path&#34;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-jzAKuFMa_ak/UhPvnqrS-_I/AAAAAAAAH8E/DgJDVUUNyD8/s1600/PlaysByTime.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://4.bp.blogspot.com/-jzAKuFMa_ak/UhPvnqrS-_I/AAAAAAAAH8E/DgJDVUUNyD8/s1600/PlaysByTime.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;There are also smaller flat spots in September and December, but I am going to decide that those are small enough not to affect any further analyses. From this, I am going to use data only from August 2012 to present.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;playlist = subset(playlist, Day &amp;gt;= mdy(&#34;8/1/12&#34;))&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Next up, I am going to use this data to analyze the plays of artists from &lt;a href=&#34;http://cd1025.com/summerfest&#34;&gt;Summerfest&lt;/a&gt;, and try to infer if the play counts varied once they were added to the bill.&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>What Is the Probability of a 16 Seed Beating a 1 Seed?</title>
      <link>/2013/04/21/what-is-the-probability-of-a-16-seed-beating-a-1-seed/</link>
      <pubDate>Sun, 21 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/04/21/what-is-the-probability-of-a-16-seed-beating-a-1-seed/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
&lt;i&gt;&lt;span id=&#34;goog_1885060128&#34;&gt;&lt;/span&gt;&lt;span id=&#34;goog_1885060129&#34;&gt;&lt;/span&gt;Note: I started this post way back when the NCAA men&#39;s basketball tournament was going on, but didn&#39;t finish it until now. &lt;/i&gt;&lt;br /&gt;&lt;br /&gt;Since the NCAA Men&#39;s Basketball Tournament has moved to 64 teams, a 16 seed as never upset a 1 seed. You might be tempted to say that the probability of such an event must be 0 then. But we know better than that.&lt;br /&gt;&lt;br /&gt;In this post, I am interested in looking at different ways of estimating how the odds of winning a game change as the difference between seeds increases. I was able to download tournament data going back to the 1930s until 2012 from &lt;a href=&#34;http://hoopstournament.net/Database.html&#34;&gt;hoopstournament.net/Database.html&lt;/a&gt;. The tournament expanded to 64 teams in 1985, which is what I used for this post. I only used match ups in which one of the seeds was higher than the other because this was the easiest way to remove duplicates. (The database has each game listed twice, once with the winner as the first team and once with the loser as the first team. The vast majority (98.9%) of games had one team as a higher seed because an equal seed can only happen at the Final Four or later.)&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/library&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;library&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot2&#34;&gt;ggplot2&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; theme_set&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;theme_bw&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;brackets=&lt;a href=&#34;http://inside-r.org/r-doc/utils/read.csv&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;read.csv&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;NCAAHistory.csv&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;# use only data from 1985 on in which the first team has the higher seed&lt;/span&gt;&lt;br /&gt;brackets=&lt;a href=&#34;http://inside-r.org/r-doc/base/subset&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;subset&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;brackets&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;Seed&amp;lt;Opponent.Seed &amp;amp; Year&amp;gt;=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1985&lt;/span&gt; &amp;amp; &lt;a href=&#34;http://inside-r.org/r-doc/base/Round&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;Round&lt;/span&gt;&lt;/a&gt;!=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Opening Round&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;brackets$SeedDiff=&lt;a href=&#34;http://inside-r.org/r-doc/base/abs&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;abs&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;brackets$Opponent.Seed-brackets$Seed&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;brackets$HigherSeedWon=&lt;a href=&#34;http://inside-r.org/r-doc/base/ifelse&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;ifelse&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;brackets$Opponent.Seed&amp;gt;brackets$Seed&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;brackets$Wins&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;brackets$Losses&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;brackets$HigherSeedScoreDiff=&lt;a href=&#34;http://inside-r.org/r-doc/base/ifelse&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;ifelse&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;brackets$Opponent.Seed&amp;gt;brackets$Seed&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;-&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;*&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;brackets$Score-brackets$Opponent.Score&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;h3&gt;Use Frequencies&lt;/h3&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;The first way is the most simple: look at the historical records when a 16 seed is playing a 1 seed (where the seed difference is 15). As you can see from the plot below, when the seed difference is 15, the higher seeded team has won every time. This is also true when the seed difference is 12, although there have only been 4 games in this scenario. Another oddity is that when the seed difference is 10, the higher seed only has only won 50% of the time. Again, this is largely due to the fact that there have only been 6 games with this seed difference.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;seed.diffs=&lt;a href=&#34;http://inside-r.org/r-doc/base/sort&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sort&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/unique&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;unique&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;brackets$SeedDiff&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;win.pct=&lt;a href=&#34;http://inside-r.org/r-doc/base/sapply&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sapply&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;seed.diffs&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;a href=&#34;http://inside-r.org/r-doc/base/mean&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;mean&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;brackets$HigherSeedWon&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;brackets$SeedDiff==x&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot&#34;&gt;ggplot&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/utils/data&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data&lt;/span&gt;&lt;/a&gt;=&lt;a href=&#34;http://inside-r.org/r-doc/base/data.frame&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data.frame&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;seed.diffs&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;win.pct&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;seed.diffs&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;win.pct&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_point&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_hline&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;yintercept=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0.5&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;linetype=&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_line&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+labs&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Seed Difference&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;y=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Proportion of Games Won by Higher Seed&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-4FoTKgiyX10/UXLrF8YV2tI/AAAAAAAAHtU/jgQ3FfibzQg/s1600/Frequencies.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://4.bp.blogspot.com/-4FoTKgiyX10/UXLrF8YV2tI/AAAAAAAAHtU/jgQ3FfibzQg/s1600/Frequencies.jpeg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;h3&gt;Use Score Difference&lt;/h3&gt;In many applications, it has been shown that using margin of victory is much more reliable than just wins and losses. For example, in the computer ranking of College Football teams, using score differences is more accurate, but outlawed for fear that teams would run up the score on weaker opponents. So the computer rankings are not as strong as they could be.&lt;br /&gt;&lt;br /&gt;We have no such conflict of interest, so we should try to make use of any information available. A simple way to do that is to look at the mean and standard deviation of the margin of victory when the 16 seed is playing the 1 seed. Below is a plot of the mean score difference with a ribbon for the +/- 2 standard deviations.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;seed.diffs=&lt;a href=&#34;http://inside-r.org/r-doc/base/sort&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sort&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/unique&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;unique&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;brackets$SeedDiff&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;means=&lt;a href=&#34;http://inside-r.org/r-doc/base/sapply&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sapply&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;seed.diffs&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;a href=&#34;http://inside-r.org/r-doc/base/mean&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;mean&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;brackets$HigherSeedScoreDiff&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;brackets$SeedDiff==x&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;sds=&lt;a href=&#34;http://inside-r.org/r-doc/base/sapply&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sapply&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;seed.diffs&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;a href=&#34;http://inside-r.org/r-doc/stats/sd&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sd&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;brackets$HigherSeedScoreDiff&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;brackets$SeedDiff==x&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot&#34;&gt;ggplot&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/utils/data&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data&lt;/span&gt;&lt;/a&gt;=&lt;a href=&#34;http://inside-r.org/r-doc/base/data.frame&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data.frame&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;seed.diffs&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;means&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;sds&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;seed.diffs&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;means&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_ribbon&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;ymin=means-&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;*sds&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;ymax=means+&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;*sds&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;alpha=&lt;span style=&#34;color: #cc66cc;&#34;&gt;.5&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_point&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_line&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_hline&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;yintercept=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;linetype=&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  labs&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Seed Difference&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;y=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Margin of Victory by Higher Seed&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-4VaSHpRws2A/UXLrGMODjhI/AAAAAAAAHtQ/7JrGAbDYY4A/s1600/MarginOfVictory.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://3.bp.blogspot.com/-4VaSHpRws2A/UXLrGMODjhI/AAAAAAAAHtQ/7JrGAbDYY4A/s1600/MarginOfVictory.jpeg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;You can see that the ribbon includes zero for all seed differences except 15. If we assume that the score differences are roughly normal, we can calculate the probability that the score difference will be greater than 0. The results are largely the same as before, but we see now that there are no 100% estimates. Also, the 50% win percentage for a seed difference of 10 now looks a little more reasonable, albeit still out of line with the rest.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot&#34;&gt;ggplot&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/utils/data&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data&lt;/span&gt;&lt;/a&gt;=&lt;a href=&#34;http://inside-r.org/r-doc/base/data.frame&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data.frame&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;seed.diffs&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;means&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;sds&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;seed.diffs&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;-&lt;a href=&#34;http://inside-r.org/r-doc/stats/pnorm&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;pnorm&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;means&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;sds&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_point&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_line&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_hline&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;yintercept=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0.5&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;linetype=&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  labs&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Seed Difference&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;y=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Probability of Higher Seed Winning Based on Margin of Victory&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-0IRgSQFoL9M/UXLrF7iNsYI/AAAAAAAAHtM/G-7h8k1yLAA/s1600/ProbMarginOfVictory.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://4.bp.blogspot.com/-0IRgSQFoL9M/UXLrF7iNsYI/AAAAAAAAHtM/G-7h8k1yLAA/s1600/ProbMarginOfVictory.jpeg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;h3&gt;Model Win Percentage as a Function of&amp;nbsp; Seed Difference&lt;/h3&gt;It is always good to incorporate as much knowledge as possible into an analysis. In this case, we have information on other games besides the 16 versus 1 seed game which help us estimate the 16 versus 1 game. For example, it is reasonable to assume that the larger the difference in seed is, the more likely the higher seed will win. We can build a logistic regression model which looks at all of the outcomes of all of the games and predicts the probability of winning based on the difference in seed. When the two teams have the same seed, I enforced the probability of the higher seed winning to be 0.5 by making the intercept 0.&lt;br /&gt;&lt;br /&gt;In the plot below, you can see that the logistic model predicts that the probability of winning increases throughout until reaching about 90% for the 16 versus 1. I also included a non-linear generalized additive model (GAM) model for comparison. The GAM believes that being a big favorite (16 vs 1 or 15 vs 2) gives an little boost in win probability. An advantage of modeling is that we can make predictions for match-ups that have never occurred (like a seed difference of 14). &lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot&#34;&gt;ggplot&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/utils/data&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data&lt;/span&gt;&lt;/a&gt;=brackets&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;SeedDiff&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;HigherSeedWon&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  stat_smooth&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;method=&lt;span style=&#34;color: blue;&#34;&gt;&#34;gam&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/family&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;family&lt;/span&gt;&lt;/a&gt;=&lt;span style=&#34;color: blue;&#34;&gt;&#34;binomial&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;se=F&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/formula&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;formula&lt;/span&gt;&lt;/a&gt;=y~&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;+x&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Logistic&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  stat_smooth&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;method=&lt;span style=&#34;color: blue;&#34;&gt;&#34;gam&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/family&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;family&lt;/span&gt;&lt;/a&gt;=&lt;span style=&#34;color: blue;&#34;&gt;&#34;binomial&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;se=F&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/formula&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;formula&lt;/span&gt;&lt;/a&gt;=y~&lt;a href=&#34;http://inside-r.org/r-doc/mgcv/s&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;s&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;GAM&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_jitter&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;alpha=&lt;span style=&#34;color: #cc66cc;&#34;&gt;.15&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;position = position_jitter&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;height = &lt;span style=&#34;color: #cc66cc;&#34;&gt;.025&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;width=&lt;span style=&#34;color: #cc66cc;&#34;&gt;.25&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  labs&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Seed Difference&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;y=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Game Won by Higher Seed&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Model&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-QYWl4914Phc/UXLwH3ls3mI/AAAAAAAAHtY/7CMeKo0ZH5M/s1600/Model01.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://3.bp.blogspot.com/-QYWl4914Phc/UXLwH3ls3mI/AAAAAAAAHtY/7CMeKo0ZH5M/s1600/Model01.jpeg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;h3&gt;Model Score Difference as a Function of&amp;nbsp; Seed Difference&lt;/h3&gt;We can also do the same thing with margin of victory. Here, I constrain the linear model to have an intercept of 0, meaning that two teams with the same seed should be evenly matched. Again, I included the GAM fit for comparison. The interpretations are similar to before, in that it seems that there is an increase in margin of victory for the heavily favored teams.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot&#34;&gt;ggplot&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/utils/data&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data&lt;/span&gt;&lt;/a&gt;=brackets&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;SeedDiff&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;HigherSeedScoreDiff&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  stat_smooth&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;method=&lt;span style=&#34;color: blue;&#34;&gt;&#34;lm&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;se=F&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/formula&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;formula&lt;/span&gt;&lt;/a&gt;=y~&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;+x&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Linear&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  stat_smooth&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;method=&lt;span style=&#34;color: blue;&#34;&gt;&#34;gam&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;se=F&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/formula&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;formula&lt;/span&gt;&lt;/a&gt;=y~&lt;a href=&#34;http://inside-r.org/r-doc/mgcv/s&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;s&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;GAM&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_jitter&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;alpha=&lt;span style=&#34;color: #cc66cc;&#34;&gt;.25&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;position = position_jitter&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;height = &lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;width=&lt;span style=&#34;color: #cc66cc;&#34;&gt;.25&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  labs&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Seed Difference&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;y=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Margin of Victory by Higher Seed&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Model&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-ncQ9W4oFjU8/UXLyGTZLNuI/AAAAAAAAHtg/5MqlA6ZbX8c/s1600/ModelDiff.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://3.bp.blogspot.com/-ncQ9W4oFjU8/UXLyGTZLNuI/AAAAAAAAHtg/5MqlA6ZbX8c/s1600/ModelDiff.jpeg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;From these models of margin of victory we can infer the probability of the higher seed winning (again, assuming normality).&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/library&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;library&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/mgcv/gam&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;gam&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;lm.seed=&lt;a href=&#34;http://inside-r.org/r-doc/stats/lm&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;lm&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;HigherSeedScoreDiff~&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;+SeedDiff&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/utils/data&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data&lt;/span&gt;&lt;/a&gt;=brackets&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;gam.seed=&lt;a href=&#34;http://inside-r.org/r-doc/mgcv/gam&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;gam&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;HigherSeedScoreDiff~&lt;a href=&#34;http://inside-r.org/r-doc/mgcv/s&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;s&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;SeedDiff&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/utils/data&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data&lt;/span&gt;&lt;/a&gt;=brackets&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;pred.lm.seed=&lt;a href=&#34;http://inside-r.org/r-doc/stats/predict&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;predict&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;lm.seed&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/data.frame&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data.frame&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;SeedDiff=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color: #cc66cc;&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;se.fit=&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;TRUE&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;pred.gam.seed=&lt;a href=&#34;http://inside-r.org/r-doc/stats/predict&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;predict&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;gam.seed&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/data.frame&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data.frame&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;SeedDiff=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color: #cc66cc;&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;se.fit=&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;TRUE&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;se.lm=&lt;a href=&#34;http://inside-r.org/r-doc/base/sqrt&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sqrt&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/mean&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;mean&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;lm.seed$residuals^&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;se.gam=&lt;a href=&#34;http://inside-r.org/r-doc/base/sqrt&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sqrt&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/mean&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;mean&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;gam.seed$residuals^&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;df1=&lt;a href=&#34;http://inside-r.org/r-doc/base/data.frame&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data.frame&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;SeedDiff=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color: #cc66cc;&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;ProbLM=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;-&lt;a href=&#34;http://inside-r.org/r-doc/stats/pnorm&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;pnorm&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;pred.lm.seed$fit&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/sqrt&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sqrt&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;se.lm^&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;+pred.lm.seed$se.fit^&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;br /&gt;               ProbGAM=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;-&lt;a href=&#34;http://inside-r.org/r-doc/stats/pnorm&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;pnorm&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;pred.gam.seed$fit&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/sqrt&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sqrt&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;se.gam^&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;+pred.gam.seed$se.fit^&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot&#34;&gt;ggplot&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;df1&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_hline&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;yintercept=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0.5&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;linetype=&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_line&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;SeedDiff&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;ProbLM&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Linear&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_line&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;SeedDiff&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;ProbGAM&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;GAM&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  labs&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Seed Difference&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;y=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Probability of Higher Seed Winning&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Model&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-ZI7n4agC0J8/UXL4fH2dTzI/AAAAAAAAHts/6ia23BR7e7w/s1600/ModelDiffProbs.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-ZI7n4agC0J8/UXL4fH2dTzI/AAAAAAAAHts/6ia23BR7e7w/s1600/ModelDiffProbs.jpeg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;h3&gt;Summary&lt;/h3&gt;Putting all of the estimates together, you can easily spot the differences between the models. The two assumptions that just used the data between specific seeds look pretty similar. It looks like using score differential is a little more reasonable of the two. The two GAMs have a similar trend and so did the&amp;nbsp; linear and logistic models. If someone asks you what the probability that a 16 seed beats a 1 seed, you have at least 6 different answers.&lt;br /&gt;&lt;br /&gt;This post highlights the many different ways someone can analyze the same data. Simply statistics talked a bit about this in a &lt;a href=&#34;http://simplystatistics.org/2013/04/19/podcast-7-reinhart-rogoff-reproducibility/&#34;&gt;recent podcast&lt;/a&gt;. In this case, the differences are not huge, but there are noticeable changes. So the next time you read about an analysis that someone did, keep in mind all the decisions that they had to make and what type a sensitivity they would have on the results.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;logit.seed=&lt;a href=&#34;http://inside-r.org/r-doc/stats/glm&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;glm&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;HigherSeedWon~&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;+SeedDiff&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/utils/data&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data&lt;/span&gt;&lt;/a&gt;=brackets&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/family&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;family&lt;/span&gt;&lt;/a&gt;=&lt;a href=&#34;http://inside-r.org/r-doc/stats/binomial&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;binomial&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/boot/logit&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;logit&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;logit.seed.gam=&lt;a href=&#34;http://inside-r.org/r-doc/mgcv/gam&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;gam&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;HigherSeedWon~&lt;a href=&#34;http://inside-r.org/r-doc/mgcv/s&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;s&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;SeedDiff&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/utils/data&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data&lt;/span&gt;&lt;/a&gt;=brackets&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/family&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;family&lt;/span&gt;&lt;/a&gt;=&lt;a href=&#34;http://inside-r.org/r-doc/stats/binomial&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;binomial&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/boot/logit&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;logit&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;df2=&lt;a href=&#34;http://inside-r.org/r-doc/base/data.frame&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data.frame&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;SeedDiff=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color: #cc66cc;&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;br /&gt;               ProbLM=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;-&lt;a href=&#34;http://inside-r.org/r-doc/stats/pnorm&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;pnorm&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;pred.lm.seed$fit&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/sqrt&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sqrt&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;se.lm^&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;+pred.lm.seed$se.fit^&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;br /&gt;               ProbGAM=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;-&lt;a href=&#34;http://inside-r.org/r-doc/stats/pnorm&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;pnorm&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;pred.gam.seed$fit&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/sqrt&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sqrt&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;se.gam^&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;+pred.gam.seed$se.fit^&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;br /&gt;               ProbLogit=&lt;a href=&#34;http://inside-r.org/r-doc/stats/predict&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;predict&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;logit.seed&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/data.frame&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data.frame&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;SeedDiff=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color: #cc66cc;&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;type=&lt;span style=&#34;color: blue;&#34;&gt;&#34;response&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;br /&gt;               ProbLogitGAM=&lt;a href=&#34;http://inside-r.org/r-doc/stats/predict&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;predict&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;logit.seed.gam&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/data.frame&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data.frame&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;SeedDiff=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color: #cc66cc;&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;type=&lt;span style=&#34;color: blue;&#34;&gt;&#34;response&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;df2=&lt;a href=&#34;http://inside-r.org/r-doc/base/merge&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;merge&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;df2&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/data.frame&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data.frame&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;SeedDiff=seed.diffs&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;ProbFreq=win.pct&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;all.x=T&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;df2=&lt;a href=&#34;http://inside-r.org/r-doc/base/merge&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;merge&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;df2&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/data.frame&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data.frame&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;SeedDiff=seed.diffs&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;ProbScore=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;-&lt;a href=&#34;http://inside-r.org/r-doc/stats/pnorm&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;pnorm&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;means&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;sds&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;all.x=T&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot&#34;&gt;ggplot&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;df2&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;SeedDiff&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_hline&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;yintercept=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0.5&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;linetype=&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_line&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;y=ProbLM&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Linear&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_line&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;y=ProbGAM&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;GAM&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_line&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;y=ProbLogit&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Logistic&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_line&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;y=ProbLogitGAM&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Logistic GAM&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_line&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;y=ProbFreq&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Frequencies&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_line&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;y=ProbScore&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Score Diff&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_point&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;y=ProbFreq&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Frequencies&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_point&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;y=ProbScore&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Score Diff&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  labs&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Seed Difference&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;y=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Probability of Higher Seed Winning&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Model&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot&#34;&gt;ggplot&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;df2&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_hline&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;yintercept=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0.5&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;linetype=&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_point&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x=SeedDiff&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;y=ProbFreq&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Frequencies&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-hLA30tdetII/UXL4fBT844I/AAAAAAAAHtw/hZiyPKG1o_g/s1600/AllProbs.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://1.bp.blogspot.com/-hLA30tdetII/UXL4fBT844I/AAAAAAAAHtw/hZiyPKG1o_g/s1600/AllProbs.jpeg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;i&gt;Note that the GAM functions did not have a way to easily restrict the win probability be equal to exactly 0.5 when the seed difference is 0. That is why you may notice the GAM model is a bit above 0.5 at 0.&lt;/i&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Text Decryption Using MCMC</title>
      <link>/2013/01/23/text-decryption-using-mcmc/</link>
      <pubDate>Wed, 23 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/01/23/text-decryption-using-mcmc/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
The famous probabilist and statistician Persi Diaconis wrote an article not too long ago about the &#34;&lt;a href=&#34;http://math.uchicago.edu/~shmuel/Network-course-readings/MCMCRev.pdf&#34; target=&#34;_blank&#34;&gt;Markov chain Monte Carlo (MCMC) Revolution&lt;/a&gt;.&#34; The paper describes how we are able to solve a diverse set of problems with MCMC. The first example he gives is a text decryption problem solved with a simple Metropolis Hastings sampler.&lt;br /&gt;&lt;br /&gt;I was always stumped by those &lt;a href=&#34;https://en.wikipedia.org/wiki/Cryptogram&#34; target=&#34;_blank&#34;&gt;cryptograms&lt;/a&gt; in the newspaper and thought it would be pretty cool if I could crack them with statistics. So I decided to try it out on my own. The example Diaconis gives is fleshed out in more details by its original authors in its own &lt;a href=&#34;http://probability.ca/jeff/ftpdir/decipherart.pdf&#34; target=&#34;_blank&#34;&gt;article&lt;/a&gt;. &lt;br /&gt;&lt;br /&gt;The decryption I will be attempting is called &lt;a href=&#34;https://en.wikipedia.org/wiki/Substitution_cipher&#34; target=&#34;_blank&#34;&gt;substitution cipher&lt;/a&gt;, where each letter of the alphabet corresponds to another letter (possibly the same one). This is the rule that you must follow for the cryptogram game too. There are 26! = 4e26 possible mappings of the letters of the alphabet to one another. This seems like a hopeless problem to solve, but I will show you that a relatively simple solution can be found as long as your reference text is large enough and the text you are trying to decipher is also large enough.&lt;br /&gt;&lt;br /&gt;The strategy is to use a reference text to create transition probabilities from each letter to the next. This can be stored in a 26 by 26 matrix, where the ith row and jth column is the probability of the jth letter, given the ith letter preceded it. For example, the given the previous letter was a Q, U almost always follows it, so the Q-row and U-column would be close to probability of 1. Assuming these one step transition probabilities are what matter, the likelihood of any mapping is the product of the transition probabilities observed.&lt;br /&gt;&lt;br /&gt;To create a transition matrix, I downloaded &lt;i&gt;War and Peace &lt;/i&gt;from &lt;a href=&#34;http://www.gutenberg.org/dirs/2/6/0/2600/2600.txt&#34; target=&#34;_blank&#34;&gt;Project Gutenberg&lt;/a&gt;. I looped through each letter and kept track of the number of number of times each letter followed the previous. I also kept track of a 27th character, which was anything that was not a letter -- for example periods, commas, spaces, etc. This lets me know which letters are more likely to start a word or end a word. Consecutive entries of these special characters are not considered.&lt;br /&gt;&lt;br /&gt;After I have these counts, I normalize by dividing by the row total. Before normalizing, I add 1 to each cell so that there are no probabilities of 0. This also corresponds to prior information of each transition being equally likely. I could have tried to give more informative prior information (like Q to U being likely), but it would have been difficult and probably inaccurate for the whole matrix.&lt;br /&gt;&lt;br /&gt;Below is the code for creating the transition probability matrix. Note that I loop through each line and within each line I loop through each character.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;reference=&lt;a href=&#34;http://inside-r.org/r-doc/base/readLines&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;readLines&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;warandpeace.txt&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;reference=&lt;a href=&#34;http://inside-r.org/r-doc/base/toupper&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;toupper&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;reference&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;trans.mat=&lt;a href=&#34;http://inside-r.org/r-doc/base/matrix&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;matrix&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/rownames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rownames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;=&lt;a href=&#34;http://inside-r.org/r-doc/base/colnames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;colnames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;=&lt;a href=&#34;http://inside-r.org/r-doc/base/c&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;c&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/toupper&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;toupper&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;letters&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;lastletter=&lt;span style=&#34;color: blue;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;ln &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;:&lt;a href=&#34;http://inside-r.org/r-doc/base/length&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;length&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;reference&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;ln %% &lt;span style=&#34;color: #cc66cc;&#34;&gt;1000&lt;/span&gt; ==&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/cat&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;cat&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;Line&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;ln&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;&lt;span style=&#34;color: #000099; font-weight: bold;&#34;&gt;\n&lt;/span&gt;&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;pos &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;:&lt;a href=&#34;http://inside-r.org/r-doc/base/nchar&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;nchar&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;reference&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;ln&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;    curletter=&lt;a href=&#34;http://inside-r.org/r-doc/base/substring&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;substring&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;reference&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;ln&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;pos&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;pos&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;curletter %in% &lt;a href=&#34;http://inside-r.org/r-doc/base/toupper&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;toupper&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;letters&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;      trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/rownames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rownames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;==lastletter&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;br /&gt;                &lt;a href=&#34;http://inside-r.org/r-doc/base/colnames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;colnames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;==curletter&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;=&lt;br /&gt;        trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/rownames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rownames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;==lastletter&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;br /&gt;                  &lt;a href=&#34;http://inside-r.org/r-doc/base/colnames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;colnames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;==curletter&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;+&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;br /&gt;      lastletter=curletter&lt;br /&gt;    &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;lastletter!=&lt;span style=&#34;color: blue;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;        trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/rownames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rownames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;==lastletter&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;=&lt;br /&gt;          trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/rownames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rownames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;==lastletter&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;+&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;br /&gt;        lastletter=&lt;span style=&#34;color: blue;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;br /&gt;      &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;  curletter=&lt;span style=&#34;color: blue;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;lastletter!=&lt;span style=&#34;color: blue;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;    trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/rownames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rownames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;==lastletter&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;=&lt;br /&gt;      trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/rownames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rownames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;==lastletter&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;+&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;  lastletter=&lt;span style=&#34;color: blue;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;trans.prob.mat=&lt;a href=&#34;http://inside-r.org/r-doc/base/sweep&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sweep&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.mat+&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/rowSums&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rowSums&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.mat+&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;FUN=&lt;span style=&#34;color: blue;&#34;&gt;&#34;/&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;I like to visualize my data to make sure everything looks correct. Below is a plot of the transition matrix.&amp;nbsp; The blank space corresponds to non-letter character. A lot of insights can be garnered from this plot. The Q-U relationship pops out. T is the most likely letter to start a word. E is a popular letter to follow many others. Y is likely to end a word.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot&#34;&gt;ggplot&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;melt&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.prob.mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;Var2&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;Var1&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_tile&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;fill=value&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  scale_fill_gradient&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;low=&lt;span style=&#34;color: blue;&#34;&gt;&#34;white&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;high=&lt;span style=&#34;color: blue;&#34;&gt;&#34;black&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;limits=&lt;a href=&#34;http://inside-r.org/r-doc/base/c&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;c&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  labs&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Probability of Second Letter&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;y=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Conditioning on First Letter&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;fill=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Prob&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  scale_y_discrete&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;limits = &lt;a href=&#34;http://inside-r.org/r-doc/base/rev&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rev&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/levels&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;levels&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;melt&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.prob.mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;$Var1&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  coord_equal&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-rOSjww2Z0q0/UPlrNU1mO2I/AAAAAAAAHqM/NizWxWZ8K88/s1600/trans.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://lh3.ggpht.com/-rOSjww2Z0q0/UPlrNU1mO2I/AAAAAAAAHqM/NizWxWZ8K88/s1600/trans.jpeg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;br /&gt;The desired solution will be the one that gives the highest likelihood. This is an &lt;a href=&#34;https://en.wikipedia.org/wiki/NP-hard&#34; target=&#34;_blank&#34;&gt;NP-hard&lt;/a&gt; problem so the only way to find the solution is to try all 26! combinations of mappings, which is infeasible, and report the one with the highest likelihood.&lt;br /&gt;&lt;br /&gt;With the MCMC approach you start with a random mapping of letters. Next you propose a new mapping by randomly switching 2 of the characters in the mapping. So if A mapped to G and L mapped to Z and you switched those two, A would map to Z and L would map to G. With this new mapping, you measure the likelihood and divide it by the likelihood of the previous mapping. If this ratio is greater than 1, then move to this new mapping. If the ratio is less than 1, meaning the new mapping is less likely, then move to this new mapping with a probability equal to the ratio. (Practically, this is done by drawing a random uniform number between 0 and 1 and moving to the proposed mapping if the uniform number is less than the ratio.) Repeat this process until you think you have found a solution.&lt;br /&gt;&lt;br /&gt;To do this, I first wrote a few functions. One to decode the coded text based on the mapping. The other was to calculate the log likelihood of the decoded text.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;decode &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;mapping&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;coded&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;  coded=&lt;a href=&#34;http://inside-r.org/r-doc/base/toupper&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;toupper&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;coded&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  decoded=coded&lt;br /&gt;  &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;i &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;:&lt;a href=&#34;http://inside-r.org/r-doc/base/nchar&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;nchar&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;coded&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/substring&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;substring&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;coded&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;i&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;i&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; %in% &lt;a href=&#34;http://inside-r.org/r-doc/base/toupper&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;toupper&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;letters&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;a href=&#34;http://inside-r.org/r-doc/base/substring&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;substring&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;decoded&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;i&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;i&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;=&lt;a href=&#34;http://inside-r.org/r-doc/base/toupper&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;toupper&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;letters&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;mapping==&lt;a href=&#34;http://inside-r.org/r-doc/base/substring&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;substring&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;coded&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;i&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;i&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;  decoded&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;log.prob &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;mapping&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;decoded&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;  logprob=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;  lastletter=&lt;span style=&#34;color: blue;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;i &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;:&lt;a href=&#34;http://inside-r.org/r-doc/base/nchar&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;nchar&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;decoded&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;    curletter=&lt;a href=&#34;http://inside-r.org/r-doc/base/substring&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;substring&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;decoded&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;i&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;i&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;curletter %in% &lt;a href=&#34;http://inside-r.org/r-doc/base/toupper&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;toupper&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;letters&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;      logprob=logprob+&lt;a href=&#34;http://inside-r.org/r-doc/base/log&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;log&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.prob.mat&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/rownames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rownames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;==lastletter&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;br /&gt;                                         &lt;a href=&#34;http://inside-r.org/r-doc/base/colnames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;colnames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;==curletter&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;      lastletter=curletter&lt;br /&gt;    &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;lastletter!=&lt;span style=&#34;color: blue;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;        logprob=logprob+&lt;a href=&#34;http://inside-r.org/r-doc/base/log&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;log&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.prob.mat&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/rownames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rownames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;==lastletter&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;        lastletter=&lt;span style=&#34;color: blue;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;br /&gt;      &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;  &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;lastletter!=&lt;span style=&#34;color: blue;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;    logprob=logprob+&lt;a href=&#34;http://inside-r.org/r-doc/base/log&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;log&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.prob.mat&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/rownames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rownames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;==lastletter&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;    lastletter=&lt;span style=&#34;color: blue;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;  logprob&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;To show how this works, I will use the same Shakespeare text that is used in the MCMC Revolution paper. I let it run until it tries out 2000 different mappings (not the same as 2000 iterations, because rejected proposals are not counted). Along the way I am keeping track of the most likely mapping visited, and that will be the final estimate. It should be noted that I am only considering the mapping of letters and it is assumed that the special characters are known. For example spaces and periods are assumed to be the same.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;correctTxt=&lt;span style=&#34;color: blue;&#34;&gt;&#34;ENTER HAMLET HAM TO BE OR NOT TO BE THAT IS THE QUESTION WHETHER TIS NOBLER IN THE MIND TO SUFFER THE SLINGS AND ARROWS OF OUTRAGEOUS FORTUNE OR TO TAKE ARMS AGAINST A SEA OF TROUBLES AND BY OPPOSING END&#34;&lt;/span&gt;&lt;br /&gt;coded=decode&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/sample&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sample&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/toupper&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;toupper&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;letters&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;correctTxt&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;# randomly scramble the text&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;mapping=&lt;a href=&#34;http://inside-r.org/r-doc/base/sample&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sample&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/toupper&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;toupper&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;letters&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;# initialize a random mapping&lt;/span&gt;&lt;br /&gt;i=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;br /&gt;iters=&lt;span style=&#34;color: #cc66cc;&#34;&gt;2000&lt;/span&gt;&lt;br /&gt;cur.decode=decode&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;mapping&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;coded&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;cur.loglike=log.prob&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;mapping&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;cur.decode&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;max.loglike=cur.loglike&lt;br /&gt;max.decode=cur.decode&lt;br /&gt;&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;i&amp;lt;=iters&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;  proposal=&lt;a href=&#34;http://inside-r.org/r-doc/base/sample&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sample&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color: #cc66cc;&#34;&gt;26&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;# select 2 letters to switch&lt;/span&gt;&lt;br /&gt;  prop.mapping=mapping&lt;br /&gt;  prop.mapping&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;proposal&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;=mapping&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;proposal&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;br /&gt;  prop.mapping&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;proposal&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;=mapping&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;proposal&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;  prop.decode=decode&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;prop.mapping&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;coded&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  prop.loglike=log.prob&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;prop.mapping&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;prop.decode&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;  &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/runif&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;runif&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&amp;lt;exp&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;prop.loglike-cur.loglike&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;    mapping=prop.mapping&lt;br /&gt;    cur.decode=prop.decode&lt;br /&gt;    cur.loglike=prop.loglike&lt;br /&gt;&amp;nbsp;&lt;br /&gt;    &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;cur.loglike&amp;gt;max.loglike&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;      max.loglike=cur.loglike&lt;br /&gt;      max.decode=cur.decode&lt;br /&gt;    &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;    &lt;a href=&#34;http://inside-r.org/r-doc/base/cat&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;cat&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;i&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;cur.decode&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;&lt;span style=&#34;color: #000099; font-weight: bold;&#34;&gt;\n&lt;/span&gt;&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;    i=i+&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;The output of this example is below. You can see that it comes close but it doesn&#39;t quite find the correct mapping. I attribute this to the fact that the text I was trying to decode only had 203 characters. In the paper mentioned above, they decoded the whole play. They further say that their methods work just as well if you randomly sample a text snippet 2000 characters long. Obviously my example had well less than this. This is also a problem in trying to solve a cryptogram because those are even smaller than the Hamlet example I used. So unfortunately this simple method cannot be used for that. (Note that I ran the MCMC chain a several times, using different random starting points, until it came reasonably close to the solution. This is something that the authors also suggested doing.)&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-DABUm0zHOa4/UPmFEVqbsWI/AAAAAAAAHqc/UgIi3nx4VTk/s1600/Iters.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://lh3.ggpht.com/-DABUm0zHOa4/UPmFEVqbsWI/AAAAAAAAHqc/UgIi3nx4VTk/s1600/Iters.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;I want to also note that I originally used Alice and Wonderland as the reference text. It had more trouble decoding since this book is much smaller than War and Peace, and therefore the transition probabilities were not as good.&lt;br /&gt;&lt;br /&gt;The MCMC method is a greedy approach in that you are moving to any mapping that increases the likelihood. Greedy methods are not optimal in general because they can get stuck at local modes, especially in high dimensional problems. MCMC avoids this be moving to less likely mappings with some probability, which ensures that it will find the correct solution with enough time.&lt;/div&gt;
&lt;h2&gt;Comments&lt;/h2&gt;
&lt;div class=&#39;comments&#39;&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Vivek&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Andrew,&lt;br /&gt;&lt;br /&gt;This work is cool!&lt;br /&gt;&lt;br /&gt;I wrote my own substitution cipher decoder using the algorithm described in Stephen Connor&amp;#39;s dissertation as the basis, but I occasionally glanced at your work as well.&lt;br /&gt;&lt;br /&gt;My code doesn&amp;#39;t work as awesomely as yours, and it is also much slower (possibly because I use 76 versus the 27 characters, reachChar versus readLine), and I use different functions.&lt;br /&gt;&lt;br /&gt;But I cited your work and copied your idea for the melt matrix, which is ingenious.&lt;br /&gt;&lt;br /&gt;Thanks so much!&lt;br /&gt;&lt;br /&gt;Vivek&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Andrew Landgraf&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Thanks, Fernando. I knew I could speed it up by treating it as a vector of letters (or integers), but didn&amp;#39;t take the time to figure it out.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Fernando&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Nice work, but the code to get the transition matrix is VERY slow. I manage to make it faster doing the following:&lt;br /&gt;1- get the vector of words (using scan() for example).&lt;br /&gt;2- For each word, use strsplit(word, NULL)[[1]] and iterate&lt;br /&gt;over the characters to populate the matrix.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Andrew&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
I have had that issue working on different computers. I think older versions of reshape2 use X# and newer versions use Var#. Or maybe it&amp;#39;s a difference between using the package reshape and reshape2?&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Pablik&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Great work! Sometimes I use Persi&amp;#39;s example for teaching MCMC,&lt;br /&gt;there are some old matlab code from the original consultancy work,&lt;br /&gt;but I never tryed to replicate the example.&lt;br /&gt;&lt;br /&gt;I got an error at:&lt;br /&gt;ggplot(melt(trans.prob.mat),aes(Var2,Var1))+...&lt;br /&gt;&lt;br /&gt;the melt() function uses X1 and X2:&lt;br /&gt;&amp;gt; tmp &amp;lt;- melt(trans.prob.mat)&lt;br /&gt;&amp;gt; head(tmp)&lt;br /&gt;  X1 X2        value&lt;br /&gt;1  A  A 3.893588e-05&lt;br /&gt;2  B  A 9.252956e-02&lt;br /&gt;...&lt;br /&gt;Cheers,&lt;br /&gt;&lt;br /&gt;Pablo&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Restricted Boltzmann Machines in R</title>
      <link>/2013/01/14/restricted-boltzmann-machines-in-r/</link>
      <pubDate>Mon, 14 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/01/14/restricted-boltzmann-machines-in-r/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
&lt;a href=&#34;http://en.wikipedia.org/wiki/Boltzmann_machine#Restricted_Boltzmann_machine&#34;&gt;Restricted Boltzmann Machines&lt;/a&gt; (RBMs) are an unsupervised learning method (like principal components).  An RBM is a probabilistic and undirected graphical model. They are  becoming more popular in machine learning due to recent success in  training them with &lt;a href=&#34;http://deeplearning.net/tutorial/rbm.html#contrastive-divergence-cd-k&#34;&gt;contrastive divergence&lt;/a&gt;. They have been proven useful in collaborative filtering, being one of the most successful methods in the Netflix challenge (&lt;a href=&#34;http://www.machinelearning.org/proceedings/icml2007/papers/407.pdf&#34;&gt;paper&lt;/a&gt;). Furthermore, they have been tantamount to training &lt;a href=&#34;http://www.nytimes.com/2012/11/24/science/scientists-see-advances-in-deep-learning-a-part-of-artificial-intelligence.html&#34;&gt;deep learning&lt;/a&gt; models, which appear to be the best current models for image and digit recognition.&lt;br /&gt;&lt;br /&gt;I do not want to go into too much detail, but I would like to give a high level overview of RBMs. &lt;a href=&#34;http://blog.echen.me/2011/07/18/introduction-to-restricted-boltzmann-machines/&#34;&gt;Edwin Chen&lt;/a&gt; has an introduction that is much better. The usual version of an RBM is  a probabilistic model for binary vectors. An image can be represented  as a binary vector if each pixel that is dark enough is represented as a  1 and the non-dark pixels are 0&#39;s. In addition to the visible binary  vector, it is assumed that there is a hidden binary vector, and each  element of the hidden unit is connected to each unit of the visible unit  by symmetric weights. The weights are represented by the matrix &lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-1-Frame&#34; role=&#34;textbox&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-1&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 1.042em;&#34;&gt;&lt;span style=&#34;clip: rect(1.775em, 1000em, 2.897em, -0.574em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-2&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-3&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;W&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.104em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 1.013em; overflow: hidden; vertical-align: -0.11em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt;, where the &lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-2-Frame&#34; role=&#34;textbox&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-4&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 1.944em;&#34;&gt;&lt;span style=&#34;clip: rect(1.719em, 1000em, 3.218em, -0.604em); left: 0em; position: absolute; top: -2.806em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-5&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-6&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-7&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;msubsup&#34; id=&#34;MathJax-Span-8&#34; style=&#34;padding-left: 0.167em;&#34;&gt;&lt;span style=&#34;display: inline-block; height: 0px; position: relative; width: 1.186em;&#34;&gt;&lt;span style=&#34;clip: rect(1.797em, 1000em, 3.079em, -0.637em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-9&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;j&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;left: 0.417em; position: absolute; top: -2.569em;&#34;&gt;&lt;span class=&#34;texatom&#34; id=&#34;MathJax-Span-10&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-11&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-12&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-13&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;h&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.181em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.806em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 1.466em; overflow: hidden; vertical-align: -0.328em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt; component is the weight between hidden unit &lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-3-Frame&#34; role=&#34;textbox&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-14&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 0.347em;&#34;&gt;&lt;span style=&#34;clip: rect(1.797em, 1000em, 2.886em, -0.604em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-15&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-16&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 0.973em; overflow: hidden; vertical-align: -0.097em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt; and visible unit &lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-4-Frame&#34; role=&#34;textbox&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-17&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 0.417em;&#34;&gt;&lt;span style=&#34;clip: rect(1.797em, 1000em, 3.079em, -0.637em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-18&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-19&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;j&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 1.205em; overflow: hidden; vertical-align: -0.328em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt;.  It is important that there are no connections between hidden units or  between visible units. The probability that visible unit &lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-5-Frame&#34; role=&#34;textbox&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-20&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 0.417em;&#34;&gt;&lt;span style=&#34;clip: rect(1.797em, 1000em, 3.079em, -0.637em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-21&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-22&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;j&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 1.205em; overflow: hidden; vertical-align: -0.328em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt; is 1 is the inverse logistic function of the sum of the weights connected to visible unit &lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-6-Frame&#34; role=&#34;textbox&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-23&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 0.417em;&#34;&gt;&lt;span style=&#34;clip: rect(1.797em, 1000em, 3.079em, -0.637em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-24&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-25&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;j&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 1.205em; overflow: hidden; vertical-align: -0.328em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt;, in which the hidden units are 1. In math notation (where &lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-7-Frame&#34; role=&#34;textbox&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-26&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 0.556em;&#34;&gt;&lt;span style=&#34;clip: rect(2.027em, 1000em, 2.886em, -0.594em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-27&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-28&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;σ&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.001em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 0.697em; overflow: hidden; vertical-align: -0.097em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt; is the inverse logistic, or sigmoid, function):&lt;br /&gt;&lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;br /&gt;&lt;div class=&#34;MathJax_Display&#34; role=&#34;textbox&#34; style=&#34;text-align: center;&#34;&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-8-Frame&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-29&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 14.306em;&#34;&gt;&lt;span style=&#34;clip: rect(1.647em, 1000em, 4.206em, -0.592em); left: 0em; position: absolute; top: -2.806em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-30&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-31&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;P&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.109em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-32&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-33&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;msubsup&#34; id=&#34;MathJax-Span-34&#34;&gt;&lt;span style=&#34;display: inline-block; height: 0px; position: relative; width: 0.839em;&#34;&gt;&lt;span style=&#34;clip: rect(2.015em, 1000em, 2.886em, -0.604em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-35&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;left: 0.486em; position: absolute; top: -2.031em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-36&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;j&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.181em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-37&#34; style=&#34;font-family: MathJax_Main; padding-left: 0.278em;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mn&#34; id=&#34;MathJax-Span-38&#34; style=&#34;font-family: MathJax_Main; padding-left: 0.278em;&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;texatom&#34; id=&#34;MathJax-Span-39&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-40&#34;&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-41&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-42&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-43&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-44&#34; style=&#34;font-family: MathJax_Math; font-style: italic; padding-left: 0.167em;&#34;&gt;W&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.104em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-45&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-46&#34; style=&#34;font-family: MathJax_Main; padding-left: 0.278em;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-47&#34; style=&#34;font-family: MathJax_Math; font-style: italic; padding-left: 0.278em;&#34;&gt;σ&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.001em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-48&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;munderover&#34; id=&#34;MathJax-Span-49&#34;&gt;&lt;span style=&#34;display: inline-block; height: 0px; position: relative; width: 1.458em;&#34;&gt;&lt;span style=&#34;clip: rect(2.758em, 1000em, 4.575em, -0.57em); left: 0em; position: absolute; top: -3.917em;&#34;&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-50&#34; style=&#34;font-family: MathJax_Size2; vertical-align: 0em;&#34;&gt;∑&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 3.917em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;clip: rect(1.505em, 1000em, 2.497em, -0.61em); left: 0.59em; position: absolute; top: -1.096em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-51&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.181em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;msubsup&#34; id=&#34;MathJax-Span-52&#34; style=&#34;padding-left: 0.167em;&#34;&gt;&lt;span style=&#34;display: inline-block; height: 0px; position: relative; width: 0.908em;&#34;&gt;&lt;span style=&#34;clip: rect(1.764em, 1000em, 2.886em, -0.577em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-53&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;h&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;left: 0.556em; position: absolute; top: -2.031em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-54&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.181em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;msubsup&#34; id=&#34;MathJax-Span-55&#34;&gt;&lt;span style=&#34;display: inline-block; height: 0px; position: relative; width: 1.777em;&#34;&gt;&lt;span style=&#34;clip: rect(1.775em, 1000em, 2.897em, -0.574em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-56&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;W&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.104em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;left: 0.938em; position: absolute; top: -2.169em;&#34;&gt;&lt;span class=&#34;texatom&#34; id=&#34;MathJax-Span-57&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-58&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-59&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-60&#34; style=&#34;font-family: MathJax_Main; font-size: 70.7%;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-61&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;j&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.319em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-62&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-63&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.806em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 2.737em; overflow: hidden; vertical-align: -1.514em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;The weights are symmetric, so&lt;br /&gt;&lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;br /&gt;&lt;div class=&#34;MathJax_Display&#34; role=&#34;textbox&#34; style=&#34;text-align: center;&#34;&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-9-Frame&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-64&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 14.167em;&#34;&gt;&lt;span style=&#34;clip: rect(1.647em, 1000em, 4.342em, -0.592em); left: 0em; position: absolute; top: -2.806em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-65&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-66&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;P&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.109em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-67&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-68&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;msubsup&#34; id=&#34;MathJax-Span-69&#34;&gt;&lt;span style=&#34;display: inline-block; height: 0px; position: relative; width: 0.908em;&#34;&gt;&lt;span style=&#34;clip: rect(1.764em, 1000em, 2.886em, -0.577em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-70&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;h&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;left: 0.556em; position: absolute; top: -2.031em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-71&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.181em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-72&#34; style=&#34;font-family: MathJax_Main; padding-left: 0.278em;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mn&#34; id=&#34;MathJax-Span-73&#34; style=&#34;font-family: MathJax_Main; padding-left: 0.278em;&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;texatom&#34; id=&#34;MathJax-Span-74&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-75&#34;&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-76&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-77&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-78&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-79&#34; style=&#34;font-family: MathJax_Math; font-style: italic; padding-left: 0.167em;&#34;&gt;W&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.104em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-80&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-81&#34; style=&#34;font-family: MathJax_Main; padding-left: 0.278em;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-82&#34; style=&#34;font-family: MathJax_Math; font-style: italic; padding-left: 0.278em;&#34;&gt;σ&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.001em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-83&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;munderover&#34; id=&#34;MathJax-Span-84&#34;&gt;&lt;span style=&#34;display: inline-block; height: 0px; position: relative; width: 1.458em;&#34;&gt;&lt;span style=&#34;clip: rect(2.758em, 1000em, 4.575em, -0.57em); left: 0em; position: absolute; top: -3.917em;&#34;&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-85&#34; style=&#34;font-family: MathJax_Size2; vertical-align: 0em;&#34;&gt;∑&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 3.917em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;clip: rect(1.505em, 1000em, 2.633em, -0.633em); left: 0.59em; position: absolute; top: -1.096em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-86&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;j&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.181em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;msubsup&#34; id=&#34;MathJax-Span-87&#34; style=&#34;padding-left: 0.167em;&#34;&gt;&lt;span style=&#34;display: inline-block; height: 0px; position: relative; width: 0.839em;&#34;&gt;&lt;span style=&#34;clip: rect(2.015em, 1000em, 2.886em, -0.604em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-88&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;left: 0.486em; position: absolute; top: -2.031em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-89&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;j&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.181em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;msubsup&#34; id=&#34;MathJax-Span-90&#34;&gt;&lt;span style=&#34;display: inline-block; height: 0px; position: relative; width: 1.777em;&#34;&gt;&lt;span style=&#34;clip: rect(1.775em, 1000em, 2.897em, -0.574em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-91&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;W&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.104em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;left: 0.938em; position: absolute; top: -2.169em;&#34;&gt;&lt;span class=&#34;texatom&#34; id=&#34;MathJax-Span-92&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-93&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-94&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-95&#34; style=&#34;font-family: MathJax_Main; font-size: 70.7%;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-96&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;j&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.319em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-97&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-98&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.806em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 2.901em; overflow: hidden; vertical-align: -1.677em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt;&lt;/div&gt;As you can see, the model is defined by its conditional probabilities. The task is to find the weight matrix &lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-10-Frame&#34; role=&#34;textbox&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-99&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 1.042em;&#34;&gt;&lt;span style=&#34;clip: rect(1.775em, 1000em, 2.897em, -0.574em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-100&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-101&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;W&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.104em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 1.013em; overflow: hidden; vertical-align: -0.11em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt; that best explains the visible data for a given number of hidden units.&lt;br /&gt;&lt;br /&gt;I have been taking Geoff Hinton&#39;s &lt;a href=&#34;https://class.coursera.org/neuralnets-2012-001/&#34;&gt;coursera course&lt;/a&gt; on neural networks, which I would recommend to anyone interested. One  of the programming assignments was to fill in code to write an RBM in  Matlab/Octave. I have since tried to find a version for R, but have not  had any luck, so I decided to translate the code myself. Below is the  code to calculate the weight matrix. It is fairly simple and I only use  contrastive divergence 1. The input data is &lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-11-Frame&#34; role=&#34;textbox&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-102&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 2.292em;&#34;&gt;&lt;span style=&#34;clip: rect(2.106em, 1000em, 3.208em, -0.664em); left: 0em; position: absolute; top: -2.806em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-103&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-104&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-105&#34; style=&#34;font-family: MathJax_Main; padding-left: 0.222em;&#34;&gt;×&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-106&#34; style=&#34;font-family: MathJax_Math; font-style: italic; padding-left: 0.222em;&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.806em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 0.989em; overflow: hidden; vertical-align: -0.316em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt; instead of the usual transpose.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;# rbm_w is a matrix of size &amp;lt;number of hidden units&amp;gt; by &amp;lt;number of visible units&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;# visible_state is matrix of size &amp;lt;number of visible units&amp;gt; by &amp;lt;number of data cases&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;# hidden_state is a binary matrix of size &amp;lt;number of hidden units&amp;gt; by &amp;lt;number of data cases&amp;gt;&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;visible_state_to_hidden_probabilities &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;rbm_w&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; visible_state&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;/&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;+&lt;a href=&#34;http://inside-r.org/r-doc/base/exp&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;exp&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;-rbm_w %*% visible_state&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;hidden_state_to_visible_probabilities &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;rbm_w&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; hidden_state&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;/&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;+&lt;a href=&#34;http://inside-r.org/r-doc/base/exp&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;exp&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;-&lt;a href=&#34;http://inside-r.org/r-doc/base/t&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;t&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;rbm_w&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; %*% hidden_state&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;configuration_goodness &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;rbm_w&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; visible_state&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; hidden_state&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;  out=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;i &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;:&lt;a href=&#34;http://inside-r.org/r-doc/base/dim&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;dim&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;visible_state&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;    out=out+&lt;a href=&#34;http://inside-r.org/r-doc/base/t&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;t&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;hidden_state&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;i&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; %*% rbm_w %*% visible_state&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;i&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;  out/dim&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;visible_state&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;configuration_goodness_gradient &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;visible_state&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; hidden_state&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;  hidden_state %*% &lt;a href=&#34;http://inside-r.org/r-doc/base/t&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;t&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;visible_state&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;/dim&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;visible_state&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;sample_bernoulli &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;  dims=&lt;a href=&#34;http://inside-r.org/r-doc/base/dim&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;dim&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;a href=&#34;http://inside-r.org/r-doc/base/matrix&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;matrix&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/rbinom&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rbinom&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/prod&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;prod&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;dims&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/prob&#34;&gt;prob&lt;/a&gt;=&lt;a href=&#34;http://inside-r.org/r-doc/base/c&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;c&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;dims&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;dims&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;cd1 &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;rbm_w&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; visible_data&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;  visible_data = sample_bernoulli&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;visible_data&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  H0=sample_bernoulli&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;visible_state_to_hidden_probabilities&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;rbm_w&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; visible_data&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  vh0=configuration_goodness_gradient&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;visible_data&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; H0&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  V1=sample_bernoulli&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;hidden_state_to_visible_probabilities&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;rbm_w&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; H0&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  H1=visible_state_to_hidden_probabilities&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;rbm_w&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; V1&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  vh1=configuration_goodness_gradient&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;V1&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; H1&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  vh0-vh1&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;rbm &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;num_hidden&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; training_data&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; learning_rate&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; n_iterations&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; mini_batch_size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; momentum=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0.9&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; quiet=&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;FALSE&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;#   This trains a model that&#39;s defined by a single matrix of weights.&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;#   &amp;lt;num_hidden&amp;gt; is the number of hidden units&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;#   cd1 is a function that takes parameters &amp;lt;model&amp;gt; and &amp;lt;data&amp;gt; and returns the gradient (or approximate gradient in the case of CD-1) of the function that we&#39;re maximizing. Note the contrast with the loss function that we saw in PA3, which we were minimizing. The returned gradient is an array of the same shape as the provided &amp;lt;model&amp;gt; parameter.&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;#   This uses mini-batches no weight decay and no early stopping.&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;#   This returns the matrix of weights of the trained model.&lt;/span&gt;&lt;br /&gt;  n=&lt;a href=&#34;http://inside-r.org/r-doc/base/dim&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;dim&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;training_data&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;br /&gt;  p=&lt;a href=&#34;http://inside-r.org/r-doc/base/dim&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;dim&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;training_data&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;n %% mini_batch_size != &lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;a href=&#34;http://inside-r.org/r-doc/base/stop&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;stop&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;the number of test cases must be divisable by the mini_batch_size&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;  model = &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/matrix&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;matrix&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/runif&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;runif&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;num_hidden*p&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;num_hidden&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;p&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; * &lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt; - &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; * &lt;span style=&#34;color: #cc66cc;&#34;&gt;0.1&lt;/span&gt;&lt;br /&gt;  momentum_speed = &lt;a href=&#34;http://inside-r.org/r-doc/base/matrix&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;matrix&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;num_hidden&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;p&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;  start_of_next_mini_batch = &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;iteration_number &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;:n_iterations&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;!quiet&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/cat&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;cat&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;Iter&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;iteration_number&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;&lt;span style=&#34;color: #000099; font-weight: bold;&#34;&gt;\n&lt;/span&gt;&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;    mini_batch = training_data&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; start_of_next_mini_batch:&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;start_of_next_mini_batch + mini_batch_size - &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;br /&gt;    start_of_next_mini_batch = &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;start_of_next_mini_batch + mini_batch_size&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; %% n&lt;br /&gt;    gradient = cd1&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;model&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; mini_batch&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;    momentum_speed = momentum * momentum_speed + gradient&lt;br /&gt;    model = model + momentum_speed * learning_rate&lt;br /&gt;  &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;a href=&#34;http://inside-r.org/r-doc/base/return&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;return&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;model&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;I loaded the hand written digit data that was given in the class. To train the RBM, use the syntax below.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/weights&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;weights&lt;/span&gt;&lt;/a&gt;=rbm&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;num_hidden=&lt;span style=&#34;color: #cc66cc;&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; training_data=train&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; learning_rate=&lt;span style=&#34;color: #cc66cc;&#34;&gt;.09&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; n_iterations=&lt;span style=&#34;color: #cc66cc;&#34;&gt;5000&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;br /&gt;            mini_batch_size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; momentum=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0.9&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;After training the weights, I can visualize them. Below is a plot of  strength of the weights going to each pixel. Each facet displays the  weights going to/coming from one of the hidden units. I trained 30 units  so that it would be easy to show them all on one plot. You can see that  most of the hidden units correspond strongly to one digit or another. I  think this means it is finding the joint structure of all of the pixels  and that pixels representing those numbers are darkened together often.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/library&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;library&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot2&#34;&gt;ggplot2&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/library&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;library&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;reshape2&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;mw=melt&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/weights&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;weights&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; mw$Var3=&lt;a href=&#34;http://inside-r.org/r-doc/base/floor&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;floor&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;mw$Var2-&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;/&lt;span style=&#34;color: #cc66cc;&#34;&gt;16&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; mw$Var2=&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;mw$Var2-&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;%%16 + &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; mw$Var3=&lt;span style=&#34;color: #cc66cc;&#34;&gt;17&lt;/span&gt;-mw$Var3&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot&#34;&gt;ggplot&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/utils/data&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data&lt;/span&gt;&lt;/a&gt;=mw&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_tile&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;Var2&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;Var3&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;fill=value&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+facet_wrap&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;~Var1&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/nrow&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;nrow&lt;/span&gt;&lt;/a&gt;=&lt;span style=&#34;color: #cc66cc;&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  scale_fill_continuous&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;low=&lt;span style=&#34;color: blue;&#34;&gt;&#39;white&#39;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;high=&lt;span style=&#34;color: blue;&#34;&gt;&#39;black&#39;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+coord_equal&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  labs&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x=&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;y=&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/graphics/title&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;title&lt;/span&gt;&lt;/a&gt;=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Visualization of Weights&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  theme&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;legend.position=&lt;span style=&#34;color: blue;&#34;&gt;&#34;none&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-ZSuYvhPTiI4/UPAlFt8sYJI/AAAAAAAAHpo/DcATXHnKMPU/s1600/unnamed-chunk-4.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://4.bp.blogspot.com/-ZSuYvhPTiI4/UPAlFt8sYJI/AAAAAAAAHpo/DcATXHnKMPU/s1600/unnamed-chunk-4.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2&gt;Comments&lt;/h2&gt;
&lt;div class=&#39;comments&#39;&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Andrew Landgraf&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
There are no biases in this implementation. You could make v_1=1, but there still wouldn&amp;#39;t be biases in the hidden units.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;sidharth&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
where are the biases ? have you included them in the weights ?&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Andrew Landgraf&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
The weights are randomly initialized, so any 2 runs will give different results. However, if your figure looks similar to mine, in that it looks like the weights represent numbers, I would say it is working correctly.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Xiaolin Gui&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Thank you for sharing your code.I found the output figure had different with yours when I  do the experiment. I have load the MNIST image data successfully. And the data&amp;#39;s format is 784 ×60000.  The pixels have been binarization. &amp;gt;= 127——&amp;gt;1.&lt;br /&gt;I hope you give me some advice.&lt;br /&gt;email:guixiaolinde@gmail.com &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Anonymous&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
I have managed to import the training data (from the Coursera website) into R:&lt;br /&gt;&lt;br /&gt;library(R.matlab)&lt;br /&gt;dat = readMat(&amp;quot;data_set.mat&amp;quot;)&lt;br /&gt;......&lt;br /&gt;weights=rbm(num_hidden=30, training_data= dat$data[,,1]$training[[1]], learning_rate=.09, n_iterations=5000,&lt;br /&gt;            mini_batch_size=100, momentum=0.9)&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Kent Johnson&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
R code for assignment 4 was posted here:&lt;br /&gt;https://class.coursera.org/neuralnets-2012-001/forum/thread?thread_id=87&amp;amp;post_id=5105&lt;br /&gt;I used it as the basis for a work project.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Zachary Mayer&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
I believe there&amp;#39;s also a kaggle competition using that data right now: http://www.kaggle.com/c/digit-recognizer&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Andrew&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
I don&amp;#39;t want to post it here because of possible copyright violations, but you can download it in Octave format from the Coursera site (in programming assignment 4) or you can find it at this webpage: http://yann.lecun.com/exdb/mnist/&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Anonymous&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Do you have a sample of training data?&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Quick Post About Getting and Plotting Polls in R</title>
      <link>/2012/11/05/quick-post-about-getting-and-plotting-polls-in-r/</link>
      <pubDate>Mon, 05 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/11/05/quick-post-about-getting-and-plotting-polls-in-r/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
With the election nearly upon us, I wanted to share an easy way I just found to download polling data and graph a few with ggplot2. &lt;a href=&#34;https://github.com/dlinzer/pollstR/&#34;&gt;dlinzer &lt;/a&gt;at github created a function to download poll data from the &lt;a href=&#34;http://elections.huffingtonpost.com/pollster/api&#34;&gt;Huffington Post&#39;s Pollster API&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;The default is to download national tracking polls from the presidential election. After sourcing the function, I load the required packages, download the data, and make the plot.&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/library&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;library&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/XML&#34;&gt;XML&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/library&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;library&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/reshape&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;reshape&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/library&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;library&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot2&#34;&gt;ggplot2&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; theme_set&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;theme_bw&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;dat &amp;lt;- pollstR&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;pages=&lt;span style=&#34;color: #cc66cc;&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot&#34;&gt;ggplot&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;dat&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;end.date&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;Obama/&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;Obama+Romney&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_point&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;alpha=&lt;span style=&#34;color: #cc66cc;&#34;&gt;.5&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_smooth&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;weight=&lt;a href=&#34;http://inside-r.org/r-doc/base/sqrt&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sqrt&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;N&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_hline&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;yintercept=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0.5&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;lty=&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  labs&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/graphics/title&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;title&lt;/span&gt;&lt;/a&gt;=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Proportion of Vote for Obama&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;x=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Last Date of Poll&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;y=&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-KXjQJ7sJ0eI/UJhfahhVZCI/AAAAAAAAHW8/nRxJVgXK5Fs/s1600/PollsPlot1.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;512&#34; src=&#34;http://4.bp.blogspot.com/-KXjQJ7sJ0eI/UJhfahhVZCI/AAAAAAAAHW8/nRxJVgXK5Fs/s1600/PollsPlot1.jpeg&#34; style=&#34;cursor: move;&#34; width=&#34;640&#34; /&gt;&lt;/a&gt;&lt;/div&gt;I have used transparency so that you can see when there are many polls on top of each other. You can see that Obama&#39;s lead decreased substantially after the first debate but has crawled back up since then. Of course, I am treating all polls as equal (although I am weighting by sample size) when the truth is that some polls are better than others and some are biased.&lt;br /&gt;&lt;br /&gt;To have some more fun, I will show what some of the data from swing states look like. The code below loops through the swing states and downloads the polls. Then it plots the polls for each state in different facets.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-KXjQJ7sJ0eI/UJhfahhVZCI/AAAAAAAAHW8/nRxJVgXK5Fs/s1600/PollsPlot1.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-KXjQJ7sJ0eI/UJhfahhVZCI/AAAAAAAAHW8/nRxJVgXK5Fs/s1600/PollsPlot1.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;/a&gt;swing.states=&lt;a href=&#34;http://inside-r.org/r-doc/base/c&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;c&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;ohio&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;florida&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;virginia&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;colorado&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;nevada&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;north-carolina&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/mgcv/s&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;s&lt;/span&gt;&lt;/a&gt; &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;in&lt;/span&gt; swing.states&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;a href=&#34;http://inside-r.org/r-doc/base/print&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;print&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/mgcv/s&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;s&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  dat.state &amp;lt;- pollstR&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;chart=&lt;a href=&#34;http://inside-r.org/r-doc/base/paste&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;paste&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;2012-&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/mgcv/s&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;s&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;-president-romney-vs-obama&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;sep=&lt;span style=&#34;color: blue;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;pages=&lt;span style=&#34;color: blue;&#34;&gt;&#34;all&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  dat.state=&lt;a href=&#34;http://inside-r.org/r-doc/base/subset&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;subset&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;dat.state&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;select=&lt;a href=&#34;http://inside-r.org/r-doc/base/c&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;c&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;id&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;pollster&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;start.date&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;end.date&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;method&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;N&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;Obama&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;Romney&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  dat.state$State=&lt;a href=&#34;http://inside-r.org/r-doc/mgcv/s&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;s&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;  &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/mgcv/s&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;s&lt;/span&gt;&lt;/a&gt;==&lt;span style=&#34;color: blue;&#34;&gt;&#34;ohio&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;    dat=dat.state&lt;br /&gt;  &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;    dat=&lt;a href=&#34;http://inside-r.org/r-doc/base/rbind&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rbind&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;dat&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;dat.state&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/library&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;library&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;lubridate&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;dat$end.date=ymd&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/as.character&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;as.character&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;dat$end.date&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot&#34;&gt;ggplot&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;dat&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;end.date&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;Obama/&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;Obama+Romney&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_point&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;alpha=&lt;span style=&#34;color: #cc66cc;&#34;&gt;.5&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_smooth&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;weight=&lt;a href=&#34;http://inside-r.org/r-doc/base/sqrt&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sqrt&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;N&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_hline&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;yintercept=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0.5&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;lty=&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  labs&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/graphics/title&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;title&lt;/span&gt;&lt;/a&gt;=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Proportion of Vote for Obama&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;x=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Last Date of Poll&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;y=&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+facet_wrap&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;~State&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+xlim&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/c&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;c&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;mdy&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;8/1/2012&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;mdy&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;11/6/2012&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-FwY5UtHzB-4/UJhkl-qrDgI/AAAAAAAAHXM/LzcRBLshLRM/s1600/PollsPlot2.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;512&#34; src=&#34;http://2.bp.blogspot.com/-FwY5UtHzB-4/UJhkl-qrDgI/AAAAAAAAHXM/LzcRBLshLRM/s1600/PollsPlot2.jpeg&#34; width=&#34;640&#34; /&gt;&lt;/a&gt;&lt;/div&gt;Unfortunately the x-axis didn&#39;t show up very well, but it starts at August 1. There have been quite a few polls in Ohio and Florida, haven&#39;t there? The state polls did not have nearly the same shift that the national poll did in reaction to the first debate. The state with the largest bump is Colorado, where the debate was held.&lt;br /&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-KXjQJ7sJ0eI/UJhfahhVZCI/AAAAAAAAHW8/nRxJVgXK5Fs/s1600/PollsPlot1.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-KXjQJ7sJ0eI/UJhfahhVZCI/AAAAAAAAHW8/nRxJVgXK5Fs/s1600/PollsPlot1.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;/a&gt;&lt;br /&gt;By just looking at the tracking polls, I think you would make the same conclusions that &lt;a href=&#34;http://fivethirtyeight.blogs.nytimes.com/&#34;&gt;Nate Silver&lt;/a&gt; has with his fancy model. Ohio, Virginia, Nevada, and Colorado favor Obama. North Carolina favors Romney and Florida just barely tips toward Romney as well.&lt;br /&gt;&lt;br /&gt;Finally, here are just the smoothed running means, all on one plot. You can see that There was also a first debate effect in Ohio.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot&#34;&gt;ggplot&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;dat&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;end.date&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;Obama/&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;Obama+Romney&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_smooth&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;colour=State&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;weight=&lt;a href=&#34;http://inside-r.org/r-doc/base/sqrt&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sqrt&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;N&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;se=&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;FALSE&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_hline&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;yintercept=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0.5&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;lty=&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  labs&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/graphics/title&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;title&lt;/span&gt;&lt;/a&gt;=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Proportion of Vote for Obama&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;x=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Last Date of Poll&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;y=&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+xlim&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/c&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;c&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;mdy&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;8/1/2012&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;mdy&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;11/6/2012&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-nN9GHK_W6Zs/UJhpDsnKArI/AAAAAAAAHXc/RBVNGzoM7tQ/s1600/PollsPlot3.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://3.bp.blogspot.com/-nN9GHK_W6Zs/UJhpDsnKArI/AAAAAAAAHXc/RBVNGzoM7tQ/s1600/PollsPlot3.jpeg&#34; height=&#34;347&#34; width=&#34;640&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2&gt;Comments&lt;/h2&gt;
&lt;div class=&#39;comments&#39;&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Andrew Clark&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Interesting work. Thanks for the tip on the API/github. I have had a look at the GOP campaign - surely one of the strangest in history&lt;br /&gt;http://wp.me/p17axt-jK&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Andrew&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Thanks for the tip. To add more information to the national tracker plot, you can make the of the points relative to the number polled. Also facet it by the type of poll. Like this:&lt;br /&gt;&lt;br /&gt;ggplot(dat,aes(end.date,Obama/(Obama+Romney)))+&lt;br /&gt;  geom_point(aes(size=sqrt(N)),alpha=.5)+&lt;br /&gt;  geom_smooth(aes(weight=sqrt(N)))+&lt;br /&gt;  geom_hline(aes(yintercept=0.5),lty=2,size=1)+&lt;br /&gt;  labs(title=&amp;quot;Proportion of Vote for Obama&amp;quot;,x=&amp;quot;Last Date of Poll&amp;quot;,y=NULL)+&lt;br /&gt;  facet_wrap(~method)+&lt;br /&gt;  theme(axis.text.x=element_text(angle=-90))&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Tony Hirst&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
You can tidy up the x-axis labels by rotating them, eg using something like:&lt;br /&gt;+theme(axis.text.x=element_text(angle=-90))&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Tony Hirst&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
This comment has been removed by the author.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Finding the Best Subset of a GAM using Tabu Search and Visualizing It in R</title>
      <link>/2012/08/24/finding-the-best-subset-of-a-gam-using-tabu-search-and-visualizing-it-in-r/</link>
      <pubDate>Fri, 24 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/08/24/finding-the-best-subset-of-a-gam-using-tabu-search-and-visualizing-it-in-r/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
Finding the best subset of variables for a regression is a very common task in statistics and machine learning. There are statistical methods based on asymptotic normal theory that can help you decide whether to add or remove a variable at a time. The problem with this is that it is a greedy approach and you can easily get stuck in a local mode. Another approach is to look at all possible subsets of the variables and see which one maximizes an objective function (accuracy on a test set, for example).&lt;br /&gt;&lt;br /&gt;Heuristics are required if the number of variables, &lt;i&gt;p&lt;/i&gt;, gets large (&amp;gt;40) because the number of possible subsets is equal to 2^&lt;i&gt;p&lt;/i&gt;, excluding interactions. One method that works well is called &lt;a href=&#34;http://en.wikipedia.org/wiki/Tabu_search&#34;&gt;tabu search&lt;/a&gt; (TS). It is a more general optimization method, but in the case of finding the best subset, it is similar to stepwise methods. At any point, it will try to improve the objective function the most by adding or removing one variable. One difference is that TS will not add or remove variables that have been recently added or removed. This avoids the optimization from getting stuck at a local maximum. There are more details to the algorithm that you can read up on if you would like.&lt;br /&gt;&lt;br /&gt;There is a &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;tabuSearch&lt;span style=&#34;font-family: Arial,Helvetica,sans-serif;&#34;&gt; &lt;/span&gt;&lt;/span&gt;package in &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;R&lt;/span&gt; that implements this algorithm. I wanted to find a best subset regression using generalized additive models (GAMs) of the package &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;mgcv&lt;/span&gt;. An issue arose, because you need to specify which terms are smooth and which are not in a formula to use &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;mgcv&lt;/span&gt;. The general form of the formula looks like:&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;gam(y ~ s(x1) + s(x2) + x3, data=train)&lt;/span&gt;&lt;br /&gt;where &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;x1&lt;/span&gt; and &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;x2&lt;/span&gt; are smooth terms and &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;x3&lt;/span&gt; is treated like it is in a linear model.&lt;br /&gt;&lt;br /&gt;My data set has a combination of continuous variables, which I want to treat as smooth, and categorical variables, which I want to treat as factors. For each variable in the subset, I need to identify whether it is a factor or not, and then creating a string of the variable with or without &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;s()&lt;/span&gt;. &lt;br /&gt;&lt;br /&gt;For example, &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;th&lt;/span&gt; is a vector of 0&#39;s and 1&#39;s which indicate whether each variable (column) is in the regression. I used the housing data set from &lt;a href=&#34;http://archive.ics.uci.edu/ml/datasets/Housing&#34;&gt;UCI ML repository&lt;/a&gt;. With 13 explanatory variables, there are 8192 possible main effects models. I am predicting MEDV, so I start the formula string with &#34;MEDV ~&#34;. Then I loop through each element of &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;th&lt;/span&gt;. If it is 1 then I want to add it to the formula. I check if it is a factor and if so I just add the name of the variable plus a &#34;+&#34;. If it is continuous, I add the column name with &#34;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;s()&lt;/span&gt;&#34; around it. Finally I convert the string to a formula using &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;formula()&lt;/span&gt;. I can plug in this formula into the &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;gam&lt;/span&gt; function. &lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;num.cols=&lt;a href=&#34;http://inside-r.org/r-doc/base/sum&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sum&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;th&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;fo.str=&lt;span style=&#34;color: blue;&#34;&gt;&#34;MEDV ~&#34;&lt;/span&gt;&lt;br /&gt;cum.cols=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;i &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;:&lt;a href=&#34;http://inside-r.org/r-doc/base/length&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;length&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;th&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;th&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&amp;gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/is.factor&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;is.factor&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;train&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;i&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;      fo.str=&lt;a href=&#34;http://inside-r.org/r-doc/base/paste&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;paste&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;fo.str&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/colnames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;colnames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;train&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;sep=&lt;span style=&#34;color: blue;&#34;&gt;&#34; &#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;      fo.str=&lt;a href=&#34;http://inside-r.org/r-doc/base/paste&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;paste&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;fo.str&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34; s(&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/colnames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;colnames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;train&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;)&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;sep=&lt;span style=&#34;color: blue;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;    cum.cols=cum.cols+&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;br /&gt;    &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;cum.cols&amp;lt;num.cols&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;      fo.str=&lt;a href=&#34;http://inside-r.org/r-doc/base/paste&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;paste&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;fo.str&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;+&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;fo=&lt;a href=&#34;http://inside-r.org/r-doc/stats/as.formula&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;as.formula&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;fo.str&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;For evaluating the subsets, I split the data into training, validation, and testing. I trained the subset on the training data set and measured the R-squared on the prediction of the validation set. The full code can be found below.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/library&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;library&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/mgcv/mgcv&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;mgcv&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/library&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;library&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;tabuSearch&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;# http://archive.ics.uci.edu/ml/datasets/Housing&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/r-doc/MASS/housing&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;housing&lt;/span&gt;&lt;/a&gt;=&lt;a href=&#34;http://inside-r.org/r-doc/utils/read.table&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;read.table&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;http://archive.ics.uci.edu/ml/machine-learning-databases/housing/housing.data&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/colnames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;colnames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/MASS/housing&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;housing&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;=&lt;a href=&#34;http://inside-r.org/r-doc/base/c&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;c&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;CRIM&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: blue;&#34;&gt;&#34;ZN&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: blue;&#34;&gt;&#34;INDUS&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: blue;&#34;&gt;&#34;CHAS&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: blue;&#34;&gt;&#34;NOX&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: blue;&#34;&gt;&#34;RM&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: blue;&#34;&gt;&#34;AGE&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: blue;&#34;&gt;&#34;DIS&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: blue;&#34;&gt;&#34;RAD&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: blue;&#34;&gt;&#34;TAX&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: blue;&#34;&gt;&#34;PTRATIO&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: blue;&#34;&gt;&#34;B&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: blue;&#34;&gt;&#34;LSTAT&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: blue;&#34;&gt;&#34;MEDV&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/r-doc/MASS/housing&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;housing&lt;/span&gt;&lt;/a&gt;$CHAS=&lt;a href=&#34;http://inside-r.org/r-doc/base/as.factor&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;as.factor&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/MASS/housing&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;housing&lt;/span&gt;&lt;/a&gt;$CHAS&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/r-doc/MASS/housing&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;housing&lt;/span&gt;&lt;/a&gt;$RAD=&lt;a href=&#34;http://inside-r.org/r-doc/base/as.factor&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;as.factor&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/MASS/housing&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;housing&lt;/span&gt;&lt;/a&gt;$RAD&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;# Changed to factor bc only 9 unique values&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/summary&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;summary&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/MASS/housing&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;housing&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/set.seed&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;set.seed&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;20120823&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;cv=&lt;a href=&#34;http://inside-r.org/r-doc/base/sample&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sample&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/nrow&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;nrow&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/MASS/housing&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;housing&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;train=&lt;a href=&#34;http://inside-r.org/r-doc/MASS/housing&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;housing&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;cv&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color: #cc66cc;&#34;&gt;300&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;br /&gt;valid=&lt;a href=&#34;http://inside-r.org/r-doc/MASS/housing&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;housing&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;cv&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;301&lt;/span&gt;:&lt;span style=&#34;color: #cc66cc;&#34;&gt;400&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;br /&gt;test=&lt;a href=&#34;http://inside-r.org/r-doc/MASS/housing&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;housing&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;cv&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;401&lt;/span&gt;:&lt;a href=&#34;http://inside-r.org/r-doc/base/nrow&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;nrow&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/MASS/housing&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;housing&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;ssto=&lt;a href=&#34;http://inside-r.org/r-doc/base/sum&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sum&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;valid$MEDV-&lt;a href=&#34;http://inside-r.org/r-doc/base/mean&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;mean&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;valid$MEDV&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;^&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;evaluate &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;th&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt; &lt;br /&gt;  num.cols=&lt;a href=&#34;http://inside-r.org/r-doc/base/sum&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sum&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;th&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;num.cols == &lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;a href=&#34;http://inside-r.org/r-doc/base/return&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;return&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  fo.str=&lt;span style=&#34;color: blue;&#34;&gt;&#34;MEDV ~&#34;&lt;/span&gt;&lt;br /&gt;  cum.cols=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;i &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;:&lt;a href=&#34;http://inside-r.org/r-doc/base/length&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;length&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;th&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;th&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&amp;gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/is.factor&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;is.factor&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;train&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;i&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;        fo.str=&lt;a href=&#34;http://inside-r.org/r-doc/base/paste&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;paste&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;fo.str&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/colnames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;colnames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;train&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;sep=&lt;span style=&#34;color: blue;&#34;&gt;&#34; &#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;      &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;        fo.str=&lt;a href=&#34;http://inside-r.org/r-doc/base/paste&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;paste&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;fo.str&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34; s(&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/colnames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;colnames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;train&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;)&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;sep=&lt;span style=&#34;color: blue;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;      &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;      cum.cols=cum.cols+&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;br /&gt;      &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;cum.cols&amp;lt;num.cols&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;        fo.str=&lt;a href=&#34;http://inside-r.org/r-doc/base/paste&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;paste&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;fo.str&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;+&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;      &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;#   colnames(train)[c(th,0)==1]&lt;/span&gt;&lt;br /&gt;  fo=&lt;a href=&#34;http://inside-r.org/r-doc/stats/as.formula&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;as.formula&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;fo.str&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  gam1 &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/mgcv/gam&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;gam&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;fo&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/utils/data&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data&lt;/span&gt;&lt;/a&gt;=train&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  pred1 &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/stats/predict&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;predict&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;gam1&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;valid&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;se=&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;FALSE&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  sse &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/base/sum&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sum&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;pred1-valid$MEDV&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;^&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;na.rm=&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;TRUE&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;a href=&#34;http://inside-r.org/r-doc/base/return&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;return&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;-sse/ssto&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;res &amp;lt;- tabuSearch&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;size = &lt;a href=&#34;http://inside-r.org/r-doc/base/ncol&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;ncol&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;train&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;-&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; iters = &lt;span style=&#34;color: #cc66cc;&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; objFunc = evaluate&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; listSize = &lt;span style=&#34;color: #cc66cc;&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;br /&gt;                  config = &lt;a href=&#34;http://inside-r.org/r-doc/stats/rbinom&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rbinom&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/ncol&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;ncol&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;train&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;-&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;.5&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; nRestarts = &lt;span style=&#34;color: #cc66cc;&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;verbose=&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;TRUE&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;br /&gt;It was able to find a subset with a 0.8678 R-squared on the validation set (and 0.8349 on the test set). The formula found was:&lt;br /&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;-webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: #e1e2e5; border-collapse: separate; color: black; font-family: &#39;Lucida Console&#39;; font-size: 13px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 15px; orphans: 2; text-align: -webkit-left; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: 2; word-spacing: 0px;&#34;&gt;&lt;/span&gt;&lt;br /&gt;&lt;pre class=&#34;GDXA2EVBEAB&#34; style=&#34;border-bottom-style: none; border-color: initial; border-left-style: none; border-right-style: none; border-top-style: none; border-width: initial; font-family: &#39;Lucida Console&#39;; font-size: 10pt !important; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; outline-color: initial; outline-style: none; outline-width: initial; white-space: pre-wrap !important;&#34; tabindex=&#34;0&#34;&gt;MEDV ~ s(CRIM) + s(INDUS) + s(NOX) + s(RM) + s(DIS) + RAD + s(TAX) + s(PTRATIO) + s(LSTAT).&lt;/pre&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Visualizing the results&lt;/h3&gt;The tabu search gave me a subset which it thinks is best. But I would like to get a better handle on how it derived it, or if there were lots of models with similar quality, but different variables. Or if there were variables that were always in the top performing models. I created a heat plot that showed whether or not a variable was in the regression or not at each iteration.&lt;br /&gt;&lt;br /&gt;Below you can see which variables were included in each iteration. There are a few variables that seem to be more important because they are included in almost every iteration, like LSAT, PTRATIO,and RM. But this doesn&#39;t tell me which iterations were the best.&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-h7QkQGRQv7c/UDZm5Lfp40I/AAAAAAAAHKY/EDABwfjZ5R8/s1600/tabu1.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://1.bp.blogspot.com/-h7QkQGRQv7c/UDZm5Lfp40I/AAAAAAAAHKY/EDABwfjZ5R8/s1600/tabu1.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;In the chart below, I shaded each region by the ranking of model in that iteration. The higher ranking mean it did better. It is not easy, but we can glean a little more information from this chart. The models with RAD and DIS do significantly better than the models without them, even though they are not in every iteration. Further, the models with AGE seem a bit worse than those without it.&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-TJKQO3ItVkQ/UDZm5o2REyI/AAAAAAAAHKg/UqqyqZ6EELs/s1600/tabu2.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-TJKQO3ItVkQ/UDZm5o2REyI/AAAAAAAAHKg/UqqyqZ6EELs/s1600/tabu2.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;The R code to make these plots is below.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/library&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;library&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/reshape&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;reshape&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/library&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;library&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot2&#34;&gt;ggplot2&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; theme_set&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;theme_bw&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;tabu.df=&lt;a href=&#34;http://inside-r.org/r-doc/base/data.frame&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data.frame&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;res$configKeep&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/colnames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;colnames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;tabu.df&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;=&lt;a href=&#34;http://inside-r.org/r-doc/base/colnames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;colnames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;train&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/ncol&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;ncol&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;train&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;-&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;br /&gt;tabu.df$Iteration=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;:&lt;a href=&#34;http://inside-r.org/r-doc/base/nrow&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;nrow&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;tabu.df&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;tabu.df$RSquared=res$eUtilityKeep&lt;br /&gt;tabu.df$Rank=&lt;a href=&#34;http://inside-r.org/r-doc/base/rank&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rank&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;tabu.df$RSquared&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;tabu.melt=melt&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;tabu.df&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;id=&lt;a href=&#34;http://inside-r.org/r-doc/base/c&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;c&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;Iteration&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;RSquared&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;Rank&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;tabu.melt$RSquared=&lt;a href=&#34;http://inside-r.org/r-doc/base/ifelse&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;ifelse&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;tabu.melt$value==&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;tabu.melt$RSquared&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;tabu.melt$Rank=&lt;a href=&#34;http://inside-r.org/r-doc/base/ifelse&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;ifelse&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;tabu.melt$value==&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;tabu.melt$Rank&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;pHeat01 &amp;lt;- &lt;a href=&#34;http://inside-r.org/packages/cran/ggplot&#34;&gt;ggplot&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;tabu.melt&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;Iteration&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;variable&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; + geom_tile&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;fill = value&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; +&lt;br /&gt;  scale_fill_gradient&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;low = &lt;span style=&#34;color: blue;&#34;&gt;&#34;white&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; high = &lt;span style=&#34;color: blue;&#34;&gt;&#34;steelblue&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;guide=&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;FALSE&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;pHeatRank &amp;lt;- &lt;a href=&#34;http://inside-r.org/packages/cran/ggplot&#34;&gt;ggplot&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;tabu.melt&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;Iteration&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;variable&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; + geom_tile&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;fill = Rank&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; +&lt;br /&gt;  scale_fill_gradient&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;low = &lt;span style=&#34;color: blue;&#34;&gt;&#34;white&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; high = &lt;span style=&#34;color: blue;&#34;&gt;&#34;steelblue&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;/div&gt;
&lt;h2&gt;Comments&lt;/h2&gt;
&lt;div class=&#39;comments&#39;&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;anonymous&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Good post!&lt;br /&gt;&lt;br /&gt;Nice approach with the heat map to go beyond just accepting the optimal solution. I agree that variables seem to be important because they are present in every iteration, but this could perhaps also mean that the tabu search was trapped in a subregion - perhaps the search move operator which only adds or deletes a single variable is not powerful enough to escape this region. Some possible remedies for exploring a larger part of the search landscape (if indeed this is a problem) might be:&lt;br /&gt;&lt;br /&gt;- Multiple tabu searches, each with a randomized set of initial variables in the model&lt;br /&gt;- Other move operators. How about finding correlation clusters among the variables, then let a move add or delete the entire cluster? Both move operators can be used in the search, using some metaheuristics to guide them.&lt;br /&gt;- Use metaheuristic techniques like &amp;quot;ruin and recreate&amp;quot; during the tabu search; occasionally, &amp;quot;ruin&amp;quot; the model by removing a random subset of the variables.&lt;br /&gt;&lt;br /&gt;One more thought. With the tabu search already in place for regression, it wouldn´t be too hard to explore some nonlinear models. You could create temp variables that are products of the original variables, then let the tabu search add or delete these as well. Do you think such an approach would have any merit in this case?&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Andrew&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
@Anonymous I would also like to see how this does compared to the more standard methods. It will take a little effort to implement in this example, though, because these variable selection techniques are not implemented for GAMs (as far as I know). http://www.statmethods.net/stats/regression.html has a nice summary of different methods available for linear models. You are right that the whole point of using a TS is that it will be better than the other methods, so it would be good to have validation. Maybe I could do a comparison for linear models...&lt;br /&gt;&lt;br /&gt;I described the meat of the TS algorithm in the post. If you want more info, I found this reference informative http://www.math.ntua.gr/~fouskakis/Publications/4.pdf &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Andrew&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
@anspiess That is probably a good idea. But one reason to use Tabu Search is that it will speed up the time to find the best model. Running it many times will defeat this purpose. Running time for the parameters used was long already because GAMs take longer to train than LMs (~ 9 mins). In terms of better understanding TS, your idea would be useful. For what its worth, I ran it again with a different CV split and the chosen model was the same except it added s(ZN) and removed s(PTRATIO).&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;anspiess&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Might it be feasible to sample training and test set a few hundred times to see how stable variable selection is?&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Anonymous&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
I wonder how this method is better than using F test, t test or information criterion? did you compare tabusearch to other methods (for linear models)? maybe it its faster than standard methods? I would be grateful for answers:)  if it its possible maybe you can describe this algorithm more closely.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
