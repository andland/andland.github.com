<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Deep Learning on Statistically Significant</title>
    <link>/categories/deep-learning/</link>
    <description>Recent content in Deep Learning on Statistically Significant</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 14 Jan 2013 00:00:00 +0000</lastBuildDate>
    
	    <atom:link href="/categories/deep-learning/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Restricted Boltzmann Machines in R</title>
      <link>/2013/01/14/restricted-boltzmann-machines-in-r/</link>
      <pubDate>Mon, 14 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/01/14/restricted-boltzmann-machines-in-r/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
&lt;a href=&#34;http://en.wikipedia.org/wiki/Boltzmann_machine#Restricted_Boltzmann_machine&#34;&gt;Restricted Boltzmann Machines&lt;/a&gt; (RBMs) are an unsupervised learning method (like principal components).  An RBM is a probabilistic and undirected graphical model. They are  becoming more popular in machine learning due to recent success in  training them with &lt;a href=&#34;http://deeplearning.net/tutorial/rbm.html#contrastive-divergence-cd-k&#34;&gt;contrastive divergence&lt;/a&gt;. They have been proven useful in collaborative filtering, being one of the most successful methods in the Netflix challenge (&lt;a href=&#34;http://www.machinelearning.org/proceedings/icml2007/papers/407.pdf&#34;&gt;paper&lt;/a&gt;). Furthermore, they have been tantamount to training &lt;a href=&#34;http://www.nytimes.com/2012/11/24/science/scientists-see-advances-in-deep-learning-a-part-of-artificial-intelligence.html&#34;&gt;deep learning&lt;/a&gt; models, which appear to be the best current models for image and digit recognition.&lt;br /&gt;&lt;br /&gt;I do not want to go into too much detail, but I would like to give a high level overview of RBMs. &lt;a href=&#34;http://blog.echen.me/2011/07/18/introduction-to-restricted-boltzmann-machines/&#34;&gt;Edwin Chen&lt;/a&gt; has an introduction that is much better. The usual version of an RBM is  a probabilistic model for binary vectors. An image can be represented  as a binary vector if each pixel that is dark enough is represented as a  1 and the non-dark pixels are 0&#39;s. In addition to the visible binary  vector, it is assumed that there is a hidden binary vector, and each  element of the hidden unit is connected to each unit of the visible unit  by symmetric weights. The weights are represented by the matrix &lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-1-Frame&#34; role=&#34;textbox&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-1&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 1.042em;&#34;&gt;&lt;span style=&#34;clip: rect(1.775em, 1000em, 2.897em, -0.574em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-2&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-3&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;W&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.104em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 1.013em; overflow: hidden; vertical-align: -0.11em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt;, where the &lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-2-Frame&#34; role=&#34;textbox&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-4&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 1.944em;&#34;&gt;&lt;span style=&#34;clip: rect(1.719em, 1000em, 3.218em, -0.604em); left: 0em; position: absolute; top: -2.806em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-5&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-6&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-7&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;msubsup&#34; id=&#34;MathJax-Span-8&#34; style=&#34;padding-left: 0.167em;&#34;&gt;&lt;span style=&#34;display: inline-block; height: 0px; position: relative; width: 1.186em;&#34;&gt;&lt;span style=&#34;clip: rect(1.797em, 1000em, 3.079em, -0.637em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-9&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;j&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;left: 0.417em; position: absolute; top: -2.569em;&#34;&gt;&lt;span class=&#34;texatom&#34; id=&#34;MathJax-Span-10&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-11&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-12&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-13&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;h&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.181em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.806em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 1.466em; overflow: hidden; vertical-align: -0.328em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt; component is the weight between hidden unit &lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-3-Frame&#34; role=&#34;textbox&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-14&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 0.347em;&#34;&gt;&lt;span style=&#34;clip: rect(1.797em, 1000em, 2.886em, -0.604em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-15&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-16&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 0.973em; overflow: hidden; vertical-align: -0.097em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt; and visible unit &lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-4-Frame&#34; role=&#34;textbox&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-17&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 0.417em;&#34;&gt;&lt;span style=&#34;clip: rect(1.797em, 1000em, 3.079em, -0.637em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-18&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-19&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;j&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 1.205em; overflow: hidden; vertical-align: -0.328em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt;.  It is important that there are no connections between hidden units or  between visible units. The probability that visible unit &lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-5-Frame&#34; role=&#34;textbox&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-20&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 0.417em;&#34;&gt;&lt;span style=&#34;clip: rect(1.797em, 1000em, 3.079em, -0.637em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-21&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-22&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;j&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 1.205em; overflow: hidden; vertical-align: -0.328em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt; is 1 is the inverse logistic function of the sum of the weights connected to visible unit &lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-6-Frame&#34; role=&#34;textbox&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-23&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 0.417em;&#34;&gt;&lt;span style=&#34;clip: rect(1.797em, 1000em, 3.079em, -0.637em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-24&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-25&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;j&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 1.205em; overflow: hidden; vertical-align: -0.328em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt;, in which the hidden units are 1. In math notation (where &lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-7-Frame&#34; role=&#34;textbox&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-26&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 0.556em;&#34;&gt;&lt;span style=&#34;clip: rect(2.027em, 1000em, 2.886em, -0.594em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-27&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-28&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;σ&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.001em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 0.697em; overflow: hidden; vertical-align: -0.097em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt; is the inverse logistic, or sigmoid, function):&lt;br /&gt;&lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;br /&gt;&lt;div class=&#34;MathJax_Display&#34; role=&#34;textbox&#34; style=&#34;text-align: center;&#34;&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-8-Frame&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-29&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 14.306em;&#34;&gt;&lt;span style=&#34;clip: rect(1.647em, 1000em, 4.206em, -0.592em); left: 0em; position: absolute; top: -2.806em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-30&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-31&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;P&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.109em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-32&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-33&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;msubsup&#34; id=&#34;MathJax-Span-34&#34;&gt;&lt;span style=&#34;display: inline-block; height: 0px; position: relative; width: 0.839em;&#34;&gt;&lt;span style=&#34;clip: rect(2.015em, 1000em, 2.886em, -0.604em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-35&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;left: 0.486em; position: absolute; top: -2.031em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-36&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;j&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.181em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-37&#34; style=&#34;font-family: MathJax_Main; padding-left: 0.278em;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mn&#34; id=&#34;MathJax-Span-38&#34; style=&#34;font-family: MathJax_Main; padding-left: 0.278em;&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;texatom&#34; id=&#34;MathJax-Span-39&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-40&#34;&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-41&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-42&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-43&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-44&#34; style=&#34;font-family: MathJax_Math; font-style: italic; padding-left: 0.167em;&#34;&gt;W&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.104em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-45&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-46&#34; style=&#34;font-family: MathJax_Main; padding-left: 0.278em;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-47&#34; style=&#34;font-family: MathJax_Math; font-style: italic; padding-left: 0.278em;&#34;&gt;σ&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.001em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-48&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;munderover&#34; id=&#34;MathJax-Span-49&#34;&gt;&lt;span style=&#34;display: inline-block; height: 0px; position: relative; width: 1.458em;&#34;&gt;&lt;span style=&#34;clip: rect(2.758em, 1000em, 4.575em, -0.57em); left: 0em; position: absolute; top: -3.917em;&#34;&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-50&#34; style=&#34;font-family: MathJax_Size2; vertical-align: 0em;&#34;&gt;∑&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 3.917em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;clip: rect(1.505em, 1000em, 2.497em, -0.61em); left: 0.59em; position: absolute; top: -1.096em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-51&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.181em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;msubsup&#34; id=&#34;MathJax-Span-52&#34; style=&#34;padding-left: 0.167em;&#34;&gt;&lt;span style=&#34;display: inline-block; height: 0px; position: relative; width: 0.908em;&#34;&gt;&lt;span style=&#34;clip: rect(1.764em, 1000em, 2.886em, -0.577em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-53&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;h&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;left: 0.556em; position: absolute; top: -2.031em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-54&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.181em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;msubsup&#34; id=&#34;MathJax-Span-55&#34;&gt;&lt;span style=&#34;display: inline-block; height: 0px; position: relative; width: 1.777em;&#34;&gt;&lt;span style=&#34;clip: rect(1.775em, 1000em, 2.897em, -0.574em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-56&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;W&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.104em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;left: 0.938em; position: absolute; top: -2.169em;&#34;&gt;&lt;span class=&#34;texatom&#34; id=&#34;MathJax-Span-57&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-58&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-59&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-60&#34; style=&#34;font-family: MathJax_Main; font-size: 70.7%;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-61&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;j&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.319em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-62&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-63&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.806em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 2.737em; overflow: hidden; vertical-align: -1.514em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;The weights are symmetric, so&lt;br /&gt;&lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;br /&gt;&lt;div class=&#34;MathJax_Display&#34; role=&#34;textbox&#34; style=&#34;text-align: center;&#34;&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-9-Frame&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-64&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 14.167em;&#34;&gt;&lt;span style=&#34;clip: rect(1.647em, 1000em, 4.342em, -0.592em); left: 0em; position: absolute; top: -2.806em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-65&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-66&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;P&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.109em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-67&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-68&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;msubsup&#34; id=&#34;MathJax-Span-69&#34;&gt;&lt;span style=&#34;display: inline-block; height: 0px; position: relative; width: 0.908em;&#34;&gt;&lt;span style=&#34;clip: rect(1.764em, 1000em, 2.886em, -0.577em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-70&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;h&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;left: 0.556em; position: absolute; top: -2.031em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-71&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.181em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-72&#34; style=&#34;font-family: MathJax_Main; padding-left: 0.278em;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mn&#34; id=&#34;MathJax-Span-73&#34; style=&#34;font-family: MathJax_Main; padding-left: 0.278em;&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;texatom&#34; id=&#34;MathJax-Span-74&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-75&#34;&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-76&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-77&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-78&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-79&#34; style=&#34;font-family: MathJax_Math; font-style: italic; padding-left: 0.167em;&#34;&gt;W&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.104em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-80&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-81&#34; style=&#34;font-family: MathJax_Main; padding-left: 0.278em;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-82&#34; style=&#34;font-family: MathJax_Math; font-style: italic; padding-left: 0.278em;&#34;&gt;σ&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.001em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-83&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;munderover&#34; id=&#34;MathJax-Span-84&#34;&gt;&lt;span style=&#34;display: inline-block; height: 0px; position: relative; width: 1.458em;&#34;&gt;&lt;span style=&#34;clip: rect(2.758em, 1000em, 4.575em, -0.57em); left: 0em; position: absolute; top: -3.917em;&#34;&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-85&#34; style=&#34;font-family: MathJax_Size2; vertical-align: 0em;&#34;&gt;∑&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 3.917em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;clip: rect(1.505em, 1000em, 2.633em, -0.633em); left: 0.59em; position: absolute; top: -1.096em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-86&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;j&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.181em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;msubsup&#34; id=&#34;MathJax-Span-87&#34; style=&#34;padding-left: 0.167em;&#34;&gt;&lt;span style=&#34;display: inline-block; height: 0px; position: relative; width: 0.839em;&#34;&gt;&lt;span style=&#34;clip: rect(2.015em, 1000em, 2.886em, -0.604em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-88&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;left: 0.486em; position: absolute; top: -2.031em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-89&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;j&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.181em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;msubsup&#34; id=&#34;MathJax-Span-90&#34;&gt;&lt;span style=&#34;display: inline-block; height: 0px; position: relative; width: 1.777em;&#34;&gt;&lt;span style=&#34;clip: rect(1.775em, 1000em, 2.897em, -0.574em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-91&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;W&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.104em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;left: 0.938em; position: absolute; top: -2.169em;&#34;&gt;&lt;span class=&#34;texatom&#34; id=&#34;MathJax-Span-92&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-93&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-94&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-95&#34; style=&#34;font-family: MathJax_Main; font-size: 70.7%;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-96&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;j&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.319em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-97&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-98&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.806em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 2.901em; overflow: hidden; vertical-align: -1.677em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt;&lt;/div&gt;As you can see, the model is defined by its conditional probabilities. The task is to find the weight matrix &lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-10-Frame&#34; role=&#34;textbox&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-99&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 1.042em;&#34;&gt;&lt;span style=&#34;clip: rect(1.775em, 1000em, 2.897em, -0.574em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-100&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-101&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;W&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.104em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 1.013em; overflow: hidden; vertical-align: -0.11em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt; that best explains the visible data for a given number of hidden units.&lt;br /&gt;&lt;br /&gt;I have been taking Geoff Hinton&#39;s &lt;a href=&#34;https://class.coursera.org/neuralnets-2012-001/&#34;&gt;coursera course&lt;/a&gt; on neural networks, which I would recommend to anyone interested. One  of the programming assignments was to fill in code to write an RBM in  Matlab/Octave. I have since tried to find a version for R, but have not  had any luck, so I decided to translate the code myself. Below is the  code to calculate the weight matrix. It is fairly simple and I only use  contrastive divergence 1. The input data is &lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-11-Frame&#34; role=&#34;textbox&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-102&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 2.292em;&#34;&gt;&lt;span style=&#34;clip: rect(2.106em, 1000em, 3.208em, -0.664em); left: 0em; position: absolute; top: -2.806em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-103&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-104&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-105&#34; style=&#34;font-family: MathJax_Main; padding-left: 0.222em;&#34;&gt;×&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-106&#34; style=&#34;font-family: MathJax_Math; font-style: italic; padding-left: 0.222em;&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.806em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 0.989em; overflow: hidden; vertical-align: -0.316em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt; instead of the usual transpose.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;# rbm_w is a matrix of size &amp;lt;number of hidden units&amp;gt; by &amp;lt;number of visible units&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;# visible_state is matrix of size &amp;lt;number of visible units&amp;gt; by &amp;lt;number of data cases&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;# hidden_state is a binary matrix of size &amp;lt;number of hidden units&amp;gt; by &amp;lt;number of data cases&amp;gt;&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;visible_state_to_hidden_probabilities &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;rbm_w&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; visible_state&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;/&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;+&lt;a href=&#34;http://inside-r.org/r-doc/base/exp&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;exp&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;-rbm_w %*% visible_state&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;hidden_state_to_visible_probabilities &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;rbm_w&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; hidden_state&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;/&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;+&lt;a href=&#34;http://inside-r.org/r-doc/base/exp&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;exp&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;-&lt;a href=&#34;http://inside-r.org/r-doc/base/t&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;t&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;rbm_w&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; %*% hidden_state&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;configuration_goodness &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;rbm_w&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; visible_state&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; hidden_state&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;  out=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;i &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;:&lt;a href=&#34;http://inside-r.org/r-doc/base/dim&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;dim&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;visible_state&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;    out=out+&lt;a href=&#34;http://inside-r.org/r-doc/base/t&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;t&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;hidden_state&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;i&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; %*% rbm_w %*% visible_state&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;i&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;  out/dim&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;visible_state&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;configuration_goodness_gradient &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;visible_state&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; hidden_state&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;  hidden_state %*% &lt;a href=&#34;http://inside-r.org/r-doc/base/t&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;t&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;visible_state&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;/dim&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;visible_state&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;sample_bernoulli &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;  dims=&lt;a href=&#34;http://inside-r.org/r-doc/base/dim&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;dim&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;a href=&#34;http://inside-r.org/r-doc/base/matrix&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;matrix&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/rbinom&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rbinom&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/prod&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;prod&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;dims&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/prob&#34;&gt;prob&lt;/a&gt;=&lt;a href=&#34;http://inside-r.org/r-doc/base/c&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;c&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;dims&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;dims&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;cd1 &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;rbm_w&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; visible_data&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;  visible_data = sample_bernoulli&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;visible_data&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  H0=sample_bernoulli&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;visible_state_to_hidden_probabilities&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;rbm_w&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; visible_data&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  vh0=configuration_goodness_gradient&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;visible_data&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; H0&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  V1=sample_bernoulli&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;hidden_state_to_visible_probabilities&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;rbm_w&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; H0&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  H1=visible_state_to_hidden_probabilities&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;rbm_w&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; V1&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  vh1=configuration_goodness_gradient&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;V1&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; H1&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  vh0-vh1&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;rbm &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;num_hidden&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; training_data&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; learning_rate&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; n_iterations&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; mini_batch_size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; momentum=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0.9&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; quiet=&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;FALSE&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;#   This trains a model that&#39;s defined by a single matrix of weights.&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;#   &amp;lt;num_hidden&amp;gt; is the number of hidden units&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;#   cd1 is a function that takes parameters &amp;lt;model&amp;gt; and &amp;lt;data&amp;gt; and returns the gradient (or approximate gradient in the case of CD-1) of the function that we&#39;re maximizing. Note the contrast with the loss function that we saw in PA3, which we were minimizing. The returned gradient is an array of the same shape as the provided &amp;lt;model&amp;gt; parameter.&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;#   This uses mini-batches no weight decay and no early stopping.&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;#   This returns the matrix of weights of the trained model.&lt;/span&gt;&lt;br /&gt;  n=&lt;a href=&#34;http://inside-r.org/r-doc/base/dim&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;dim&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;training_data&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;br /&gt;  p=&lt;a href=&#34;http://inside-r.org/r-doc/base/dim&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;dim&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;training_data&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;n %% mini_batch_size != &lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;a href=&#34;http://inside-r.org/r-doc/base/stop&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;stop&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;the number of test cases must be divisable by the mini_batch_size&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;  model = &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/matrix&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;matrix&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/runif&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;runif&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;num_hidden*p&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;num_hidden&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;p&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; * &lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt; - &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; * &lt;span style=&#34;color: #cc66cc;&#34;&gt;0.1&lt;/span&gt;&lt;br /&gt;  momentum_speed = &lt;a href=&#34;http://inside-r.org/r-doc/base/matrix&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;matrix&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;num_hidden&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;p&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;  start_of_next_mini_batch = &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;iteration_number &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;:n_iterations&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;!quiet&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/cat&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;cat&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;Iter&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;iteration_number&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;&lt;span style=&#34;color: #000099; font-weight: bold;&#34;&gt;\n&lt;/span&gt;&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;    mini_batch = training_data&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; start_of_next_mini_batch:&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;start_of_next_mini_batch + mini_batch_size - &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;br /&gt;    start_of_next_mini_batch = &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;start_of_next_mini_batch + mini_batch_size&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; %% n&lt;br /&gt;    gradient = cd1&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;model&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; mini_batch&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;    momentum_speed = momentum * momentum_speed + gradient&lt;br /&gt;    model = model + momentum_speed * learning_rate&lt;br /&gt;  &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;a href=&#34;http://inside-r.org/r-doc/base/return&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;return&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;model&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;I loaded the hand written digit data that was given in the class. To train the RBM, use the syntax below.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/weights&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;weights&lt;/span&gt;&lt;/a&gt;=rbm&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;num_hidden=&lt;span style=&#34;color: #cc66cc;&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; training_data=train&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; learning_rate=&lt;span style=&#34;color: #cc66cc;&#34;&gt;.09&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; n_iterations=&lt;span style=&#34;color: #cc66cc;&#34;&gt;5000&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;br /&gt;            mini_batch_size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; momentum=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0.9&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;After training the weights, I can visualize them. Below is a plot of  strength of the weights going to each pixel. Each facet displays the  weights going to/coming from one of the hidden units. I trained 30 units  so that it would be easy to show them all on one plot. You can see that  most of the hidden units correspond strongly to one digit or another. I  think this means it is finding the joint structure of all of the pixels  and that pixels representing those numbers are darkened together often.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/library&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;library&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot2&#34;&gt;ggplot2&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/library&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;library&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;reshape2&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;mw=melt&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/weights&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;weights&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; mw$Var3=&lt;a href=&#34;http://inside-r.org/r-doc/base/floor&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;floor&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;mw$Var2-&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;/&lt;span style=&#34;color: #cc66cc;&#34;&gt;16&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; mw$Var2=&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;mw$Var2-&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;%%16 + &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; mw$Var3=&lt;span style=&#34;color: #cc66cc;&#34;&gt;17&lt;/span&gt;-mw$Var3&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot&#34;&gt;ggplot&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/utils/data&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data&lt;/span&gt;&lt;/a&gt;=mw&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_tile&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;Var2&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;Var3&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;fill=value&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+facet_wrap&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;~Var1&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/nrow&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;nrow&lt;/span&gt;&lt;/a&gt;=&lt;span style=&#34;color: #cc66cc;&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  scale_fill_continuous&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;low=&lt;span style=&#34;color: blue;&#34;&gt;&#39;white&#39;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;high=&lt;span style=&#34;color: blue;&#34;&gt;&#39;black&#39;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+coord_equal&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  labs&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x=&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;y=&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/graphics/title&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;title&lt;/span&gt;&lt;/a&gt;=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Visualization of Weights&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  theme&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;legend.position=&lt;span style=&#34;color: blue;&#34;&gt;&#34;none&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-ZSuYvhPTiI4/UPAlFt8sYJI/AAAAAAAAHpo/DcATXHnKMPU/s1600/unnamed-chunk-4.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://4.bp.blogspot.com/-ZSuYvhPTiI4/UPAlFt8sYJI/AAAAAAAAHpo/DcATXHnKMPU/s1600/unnamed-chunk-4.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2&gt;Comments&lt;/h2&gt;
&lt;div class=&#39;comments&#39;&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Andrew Landgraf&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
There are no biases in this implementation. You could make v_1=1, but there still wouldn&amp;#39;t be biases in the hidden units.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;sidharth&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
where are the biases ? have you included them in the weights ?&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Andrew Landgraf&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
The weights are randomly initialized, so any 2 runs will give different results. However, if your figure looks similar to mine, in that it looks like the weights represent numbers, I would say it is working correctly.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Xiaolin Gui&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Thank you for sharing your code.I found the output figure had different with yours when I  do the experiment. I have load the MNIST image data successfully. And the data&amp;#39;s format is 784 ×60000.  The pixels have been binarization. &amp;gt;= 127——&amp;gt;1.&lt;br /&gt;I hope you give me some advice.&lt;br /&gt;email:guixiaolinde@gmail.com &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Anonymous&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
I have managed to import the training data (from the Coursera website) into R:&lt;br /&gt;&lt;br /&gt;library(R.matlab)&lt;br /&gt;dat = readMat(&amp;quot;data_set.mat&amp;quot;)&lt;br /&gt;......&lt;br /&gt;weights=rbm(num_hidden=30, training_data= dat$data[,,1]$training[[1]], learning_rate=.09, n_iterations=5000,&lt;br /&gt;            mini_batch_size=100, momentum=0.9)&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Kent Johnson&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
R code for assignment 4 was posted here:&lt;br /&gt;https://class.coursera.org/neuralnets-2012-001/forum/thread?thread_id=87&amp;amp;post_id=5105&lt;br /&gt;I used it as the basis for a work project.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Zachary Mayer&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
I believe there&amp;#39;s also a kaggle competition using that data right now: http://www.kaggle.com/c/digit-recognizer&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Andrew&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
I don&amp;#39;t want to post it here because of possible copyright violations, but you can download it in Octave format from the Coursera site (in programming assignment 4) or you can find it at this webpage: http://yann.lecun.com/exdb/mnist/&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Anonymous&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Do you have a sample of training data?&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
