<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Statistically Significant</title>
    <link>/</link>
    <description>Recent content on Statistically Significant</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 12 Jun 2019 15:42:56 -0700</lastBuildDate>
    
	    <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About Me</title>
      <link>/about/</link>
      <pubDate>Wed, 12 Jun 2019 15:42:56 -0700</pubDate>
      
      <guid>/about/</guid>
      <description>&lt;!--- 
![](/img/Andrew_Landgraf.png)
I am a data scientist at Root Insurance. Previously, I was a research statistician at [Battelle](http://www.battelle.org/), working on machine learning, natural languange processing, and public health. I received my PhD in [Statistics](http://stat.osu.edu) from Ohio State, working with [Prof. Yoonkyung Lee](http://www.stat.osu.edu/~yklee/). I am interested in machine learning applications in statistics. My dissertation dealt with dimensionality reduction, matrix factorization, and classification with large binary and count datasets. 

In the past, I worked as a graduate research associate for the [Campus Transit Lab](http://transitlab.osu.edu/campus-transit-lab) with [Prof. Prem Goel](http://www.stat.osu.edu/people/faculty/prem-k-goel), [Prof. Rabi Mishalani](http://ceg.osu.edu/people/mishalani.1), and [Prof. Mark McCord](http://ceg.osu.edu/people/mccord.2). We developed methods to estimate origin-destination patterns of travelers on public transportation. I was also a statistical consultant for [IGS Energy](http://www.igsenergy.com). In the summer of 2014, I was a fellow in the [Eric &amp; Wendy Schmidt Data Science for Social Good  Fellowship](http://dssg.uchicago.edu/) at the [University of Chicago](http://www.uchicago.edu/).

I was part of the team that won the 2013 [Capital One Student Modeling Competition](http://artsandsciences.osu.edu/news/statistics-graduate-students-win-national-data-analyticsmodeling-competition), which involved recommending new merchants to each customer. I won the [2017 March Machine Learning Mania Kaggle Competition](http://blog.kaggle.com/2017/05/19/march-machine-learning-mania-1st-place-winners-interview-andrew-landgraf/). 
---&gt;
</description>
    </item>
    
    <item>
      <title>Privacy Policy</title>
      <link>/privacy/</link>
      <pubDate>Thu, 28 Jun 2018 00:00:00 +0100</pubDate>
      
      <guid>/privacy/</guid>
      <description>&lt;p&gt;&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Monitoring Price Fluctuations of Book Trade-In Values on Amazon</title>
      <link>/2015/04/08/monitoring-price-fluctuations-of-book-trade-in-values-on-amazon/</link>
      <pubDate>Wed, 08 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/04/08/monitoring-price-fluctuations-of-book-trade-in-values-on-amazon/</guid>
      <description>&lt;p&gt;I am planning to finish school soon and I would like to shed some weight before moving on. I have collected a fair number of books that I will likely never use again and it would be nice to get some money for them. Sites like Amazon and eBay let you sell your book to other customers, but Amazon will also buy some of your books directly (Trade-Ins), saving you the hassle of waiting for a buyer.&lt;/p&gt;

&lt;p&gt;Before selling, I remembered listening to a &lt;a href=&#34;http://www.npr.org/blogs/money/2014/11/10/363103753/textbook-arbitrage-making-money-off-used-books&#34; target=&#34;_blank&#34;&gt;Planet Money episode&lt;/a&gt; about a couple of guys that tried to make money off of buying and selling used textbooks on Amazon. Their strategy was to buy books at the end of a semester when students are itching to get rid of them, and sell them to other students at the beginning of the next semester. To back up their business, they have been scraping Amazon&amp;rsquo;s website for years, keeping track of prices in order to find the optimal times to buy and sell.&lt;/p&gt;

&lt;p&gt;I collected a few books I was willing to part with and set up a scraper in R. I am primarily interested in selling my books to Amazon, so I tracked Amazon&amp;rsquo;s Trade-In prices for these books. This was done fairly easily with Hadley Wickham&amp;rsquo;s package &lt;a href=&#34;https://github.com/hadley/rvest&#34; target=&#34;_blank&#34;&gt;rvest&lt;/a&gt; and the Chrome extension &lt;a href=&#34;http://selectorgadget.com/&#34; target=&#34;_blank&#34;&gt;Selector Gadget&lt;/a&gt;. Selector Gadget tells me that the node I&amp;rsquo;m interested in is &lt;code&gt;#tradeInButton_tradeInValue&lt;/code&gt;. The code to do the scraping is below.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(rvest)
 
urls_df = read.csv(&amp;quot;AmazonBookURLs.csv&amp;quot;, stringsAsFactors = FALSE, comment.char = &amp;quot;&amp;quot;)
load(file = &amp;quot;AmazonBookPrices.RData&amp;quot;)
price_df_temp = data.frame(Title = urls_df$Title,
                      Date = Sys.time(),
                      Price = NA_real_, stringsAsFactors = FALSE)
for (i in 1:nrow(urls_df)) {
  tradein_html = urls_df$URL[i] %&amp;gt;% html() %&amp;gt;%
    html_node(&amp;quot;#tradeInButton_tradeInValue&amp;quot;)
  if (is.null(tradein_html)) {
    next
  }
  price = tradein_html %&amp;gt;%
    html_text() %&amp;gt;%
    gsub(&amp;quot;(^[[:space:]]+\\$|[[:space:]]+$)&amp;quot;, &amp;quot;&amp;quot;, .) %&amp;gt;%
    as.numeric()
  price_df_temp$Price[i] = price
}
price_df = rbind(price_df, price_df_temp)
 
save(price_df, file = &amp;quot;AmazonBookPrices.RData&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After manually collecting this data for less than a week, I am able to plot the trends for the eight books I am interested in selling. The plot and code are below.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggplot2); theme_set(theme_bw())
library(scales)
 
price_df$TitleTrunc = paste0(substring(price_df$TitleTrunc, 1, 30), ifelse(nchar(price_df$Title) &amp;gt; 30, &amp;quot;...&amp;quot;, &amp;quot;&amp;quot;))
ggplot(price_df, aes(Date, Price)) +
  geom_step() + geom_point() + facet_wrap(~ TitleTrunc, scales = &amp;quot;free_y&amp;quot;) +
  scale_y_continuous(labels = dollar) + theme(axis.text.x = element_text(angle = 90, vjust = 0))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;/img/AmazonScrape/prices.png&#34; alt=&#34;Amazon Trade-In Prices&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I am surprised how much the prices fluctuate. I expected them to be constant for the most part, with large changes once a week or less often. Apparently Amazon is doing quite a bit of tweaking to determine optimal price points. I would also guess that $2 is their minimum trade-in price. It looks like I missed out on my best chance to sell &lt;em&gt;A First Course in Stochastic Processes&lt;/em&gt;, but that the price of &lt;em&gt;A Primer on Linear Models&lt;/em&gt; will keep rising forever.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Time Stacking and Time Slicing in R</title>
      <link>/2014/12/24/time-stacking-and-time-slicing-in-r/</link>
      <pubDate>Wed, 24 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/12/24/time-stacking-and-time-slicing-in-r/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Time-lapse_photography&#34; target=&#34;_blank&#34;&gt;Time lapses&lt;/a&gt; are a fun way to quickly show a long period of time. They typically involve setting up your camera on a tripod and taking photos at a regular interval, like every 5 seconds. After all the photos have been taken, they are combined into a movie at a much faster rate, for example 30 frames per second.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://500px.com/blog/1051/tutorial-time-stack&#34; target=&#34;_blank&#34;&gt;Time stacking&lt;/a&gt; is a way to combine all the photos into a single photo, instead of a movie. This is a common method to make &lt;a href=&#34;http://en.wikipedia.org/wiki/Star_trail&#34; target=&#34;_blank&#34;&gt;star trails&lt;/a&gt;, and &lt;a href=&#34;https://www.flickr.com/photos/matt_molloy/&#34; target=&#34;_blank&#34;&gt;Matt Molloy&lt;/a&gt; has recently been experimenting with it in many different settings. There are many possible ways to achieve a time stack, but the most common way is to combine the photos with a &lt;a href=&#34;http://en.wikipedia.org/wiki/Blend_modes#Lighten_Only&#34; target=&#34;_blank&#34;&gt;lighten layer blend&lt;/a&gt;. For every pixel in the final image, the combined photo will use the corresponding pixel from the photo that was the brightest in all of the photos. This gives the desired result of motion of the stars or clouds in a scene.&lt;/p&gt;

&lt;p&gt;Another way to combine the photos is through time slicing (see, for example, &lt;a href=&#34;https://www.flickr.com/photos/matt_molloy/15619271557/&#34; target=&#34;_blank&#34;&gt;this photo&lt;/a&gt;). In time slicing, the final combined image will contain a &amp;ldquo;slice&amp;rdquo; from each of the original photos. Time slices can go left-to-right, right-to-left, top-to-bottom, or bottom-to-top. For example, a time slice that goes from left to right will use vertical slices of the pixels. If you took 100 photos for your time lapse, each of which being 1000 pixels wide, the left-most 10 vertical  pixel slices of the final image would contain the corresponding pixels from the first photo, the 11th through 20th vertical  pixel slices would contain the corresponding pixels from the second photo, and so on. Different directions will produce different effects.&lt;/p&gt;

&lt;p&gt;There is free software available to do lighten layer blending of two photos, but I could not find any to automatically do it for a large number of photos. Similarly for the time slice, it is easy enough to manually slice a few photos, but not hundreds of photos. Therefore, I wrote a couple of scripts in &lt;a href=&#34;http://www.r-project.org/&#34; target=&#34;_blank&#34;&gt;R&lt;/a&gt; that would do this automatically. A gist of the scripts to create a time stack script and a time slice is &lt;a href=&#34;https://gist.github.com/andland/efe66240184328f07429&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;. They both require you to give the directory containing the JPEG photos and the time slice script let&amp;rsquo;s you enter the direction you would like it to go.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/KnZQIeHPOYI&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;To try this out on my own photos, I used the time lapse I had created of &lt;a href=&#34;https://www.youtube.com/watch?v=KnZQIeHPOYI&#34; target=&#34;_blank&#34;&gt;a sunset&lt;/a&gt; (movie created with &lt;a href=&#34;https://www.ffmpeg.org/&#34; target=&#34;_blank&#34;&gt;FFmpeg&lt;/a&gt;), which consisted of 225 photos taken over 20 minutes. The source material isn&amp;rsquo;t that great (the photos were out of focus), but you can still see the effects.&lt;/p&gt;

&lt;p&gt;The following picture is a time stack.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/TimeStack/TimeStack.JPG&#34; alt=&#34;Time Stack&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The following four pictures are the time slices with different directions.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/TimeStack/TimeSlice-E.JPG&#34; alt=&#34;Time Slice Left-to-Right&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/TimeStack/TimeSlice-W.JPG&#34; alt=&#34;Time Slice Right-to-Left&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/TimeStack/TimeSlice-N.JPG&#34; alt=&#34;Time Slice Bottom-to-Top&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/TimeStack/TimeSlice-S.JPG&#34; alt=&#34;Time Slice Top-to-Bottom&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Yet Another Baseball Defense Statistic</title>
      <link>/2014/04/22/yet-another-baseball-defense-statistic/</link>
      <pubDate>Tue, 22 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/04/22/yet-another-baseball-defense-statistic/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://www.fangraphs.com&#34; target=&#34;_blank&#34;&gt;Fangraphs&lt;/a&gt; recently published an interesting dataset that measures defensive efficiency of fielders. For each player, the &lt;a href=&#34;http://www.fangraphs.com/blogs/inside-edge-fielding-data/&#34; target=&#34;_blank&#34;&gt;Inside Edge&lt;/a&gt; dataset breaks their opportunities to make plays into five categories, ranging from almost impossible to routine. It also records the proportion of times that the player successfully made the play. With this data, we can see how successful each player is for each type of play. I wanted to think of a way to combine these five proportions into one fielding metric. From here on, I will assume that there is no error in categorizing a play as easy or hard and that there is no bias in the categorizations.&lt;/p&gt;

&lt;h3 id=&#34;model&#34;&gt;Model&lt;/h3&gt;

&lt;p&gt;The model I will build is motivated by &lt;a href=&#34;http://en.wikipedia.org/wiki/Ordered_logit&#34; target=&#34;_blank&#34;&gt;ordinal regression&lt;/a&gt;. If we only were concerned with the success rate in one of the categories, we could use standard logistic regression, and the probability that player $i$ successfully made a play would be assumed to be $\sigma(\theta_i)$, where $\sigma()$ is the &lt;a href=&#34;https://en.wikipedia.org/wiki/Logistic_function&#34; target=&#34;_blank&#34;&gt;logistic function&lt;/a&gt;. Using our prior knowledge that plays categorized as easy should have a higher success rate than plays categorized as difficult, I would like to generalize this.&lt;/p&gt;

&lt;p&gt;Say there are only two categories: easy and hard. We could model the probability that player $i$ successfully made an hard play as $\sigma(\theta_i)$ and the probability that he made an easy play as $\sigma(\theta_i+\gamma)$. Here, we would assume that $\gamma$ is the same for all players. This assumption implies that if player $i$ is better than player $j$ at easy plays, he will also be better at hard plays. This is a reasonable assumption, but maybe not true in all cases.&lt;/p&gt;

&lt;p&gt;Since we have five different categories of difficulty, we can generalize this by having $\gamma_k, k=1,\ldots,4$. Again, these $\gamma_k$&amp;rsquo;s would be the same for everyone. A picture of what this looks like for shortstops is below. In this model, every player will effectively be shifting the curve either left or right. A positive $\theta_i$ means the player is better than average and cause the curve to shift left and vice versa for negative $\theta_i$.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/InsideEdge/LogitOrdered.png&#34; alt=&#34;Logit Ordered&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I modeled this as a multi-level mixed effects model, with the players being random effects and the $\gamma_k$&amp;rsquo;s being fixed. Technically, I should optimize subject to the condition that the $\gamma_k$&amp;rsquo;s are increasing, but the unconstrained optimization always yields increasing $\gamma_k$&amp;rsquo;s because there is a big difference between success rate in the categories. I used combined data from 2012 and 2013 seasons and included all players with at least one success and one failure. I modeled each position separately. Modeling player effects as random, there is a fair amount of regression to the mean built in. In this sense, I am more trying to estimate the true ability of the player, rather than measuring what he did during the two years. This is an important distinction, which may differ from other defensive statistics.&lt;/p&gt;

&lt;h3 id=&#34;model-fit&#34;&gt;Model fit&lt;/h3&gt;

&lt;p&gt;Below is a summary of the results of the model for shortstops. I am only plotting the players with the at least 800 innings, for readability. A bonus of modeling the data like this is that we get standard error estimates as a result. I plotted the estimated effect of each player along with +/- 2 standard errors. We can be fairly certain that the effects for the top few shortstops is greater than 0 since their confidence intervals do not include 0. The same is true for the bottom few. Images for the other positions can be found &lt;a href=&#34;https://github.com/andland/andland.github.com/tree/master/images/InsideEdge&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/InsideEdge/SSlist.png&#34; alt=&#34;Results for Shortstops&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The results seem to make sense for the most part. Simmons and Tulowitzki have reputations as being strong defenders and Derek Jeter has a reputation as a poor defender.&lt;/p&gt;

&lt;p&gt;Further, I can validate this data by comparing it to other defensive metrics. One that is readily available on Fangraphs is UZR per 150 games. For each position, I took the correlation of my estimated effect with UZR per 150 games, weighted by the number of innings played. Pitchers and catchers do not have UZR&amp;rsquo;s so I cannot compare them. The correlations, which are in the plot below, range from about 0.2 to 0.65.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/InsideEdge/CorrelationWithUZR.png&#34; alt=&#34;Correlation with UZR&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;interpreting-parameters&#34;&gt;Interpreting parameters&lt;/h3&gt;

&lt;p&gt;In order to make this fielding metric more useful, I would like to convert the parameters to something more interpretable. One option which makes a lot of sense is &amp;ldquo;plays made above/below average&amp;rdquo;. Given an estimated $\theta_i$ for a player, we can calculate the probability that he would make a play in each of the five categories. We can then compare those probabilities to the probability an average player would make a play in each of the categories, which would be fit with $\theta=0$. Finally, we can weight these differences in probabilities by the relative rate that plays of various difficulties occur.&lt;/p&gt;

&lt;p&gt;For example, assuming there are only two categories again, suppose a player has a 0.10 and 0.05 higher probability than average of making hard and easy plays, respectively. Further assume that 75% of all plays are hard and 25% are easy. On a random play, the improvement in probability over an average player of making a play is $.10(.75)+.05(.25)=0.0875$. If a player has an opportunity for 300 plays in an average season, this player would be $300 \times 0.0875=26.25$ plays better than average over a typical season.&lt;/p&gt;

&lt;p&gt;I will assume that the number of opportunities to make plays is directly related to the number of innings played. To convert innings to opportunities, I took the median number of opportunities per inning for each position. For example, shortstops had the highest opportunities per inning at 0.40 and catchers had the lowest at 0.08. The plot below shows the distribution of opportunities per inning for each position.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/InsideEdge/PlaysPerInning.png&#34; alt=&#34;Plays Per Inning by Position&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We can extend this to the impact on saving runs from being scored as well by assuming each successful play saves $x$ runs. I will not do this for this analysis.&lt;/p&gt;

&lt;h3 id=&#34;results&#34;&gt;Results&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;/img/InsideEdge/shiny.png&#34; alt=&#34;Shiny app&#34; /&gt;&lt;/p&gt;

&lt;p&gt;[&lt;strong&gt;Update&lt;/strong&gt;: The Shiny app is no longer live, but you can view the resulting estimates in the &lt;a href=&#34;https://github.com/andland/InsideEdgeFielding/blob/master/Shiny/InsideEdgeModelResults.csv&#34; target=&#34;_blank&#34;&gt;Github repository&lt;/a&gt;.]&lt;/p&gt;

&lt;p&gt;Finally, I put together a &lt;a href=&#34;http://www.rstudio.com/shiny/&#34; target=&#34;_blank&#34;&gt;Shiny&lt;/a&gt; app to display &lt;a href=&#34;https://github.com/andland/InsideEdgeFielding/blob/master/Shiny/InsideEdgeModelResults.csv&#34; target=&#34;_blank&#34;&gt;the results&lt;/a&gt;. You can search by team, position, and innings played. A team of &amp;lsquo;- - -&amp;rsquo; means the player played for multiple teams over this period. You can also choose to display the results as a rate statistic (extra plays made per season) or a count statistic (extra plays made over the two seasons). To get a seasonal number, I assume position players played 150 games with 8.5 innings in each game. For pitchers, I assumed that they pitched 30 games, 6 innings each.&lt;/p&gt;

&lt;h3 id=&#34;conclusions-and-future-work&#34;&gt;Conclusions and future work&lt;/h3&gt;

&lt;p&gt;I don&amp;rsquo;t know if I will do anything more with this data, but if I could do it again, I may have modeled each year separately instead of combining the two years together. With that, it would have been interesting to model the effect of age by observing how a player&amp;rsquo;s ability to make a play changes from one year to the next. I also think it would be interesting to see how changing positions affects a players efficiency. For example, we could have a $9 \times 9$ matrix of fixed effects that represent the improvement or degradation in ability as a player switches from their main position to another one. Further assumptions would be needed to make sure the $\theta$&amp;rsquo;s are on the same scale for every position.&lt;/p&gt;

&lt;p&gt;At the very least, this model and its results can be considered another data point in the analysis of a player&amp;rsquo;s fielding ability. One thing we need to be concerned about is the classification of each play into the difficultness categories. The human eye can be fooled into thinking a routine play is hard just because a fielder dove to make the play, when a superior fielder could have made it look easier.&lt;/p&gt;

&lt;h3 id=&#34;code&#34;&gt;Code&lt;/h3&gt;

&lt;p&gt;I have put the R code together to do this analysis in &lt;a href=&#34;https://gist.github.com/andland/c6adb69ea365c2580859&#34; target=&#34;_blank&#34;&gt;a gist&lt;/a&gt;. If there is interest, I will put together a repo with all the data as well.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: I have a &lt;a href=&#34;https://github.com/andland/InsideEdgeFielding&#34; target=&#34;_blank&#34;&gt;Github repository&lt;/a&gt; with the data, R code for the analysis, the results, and code for the Shiny app. Let me know what you think.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hastie and Tibshirani Interview Jerome Friedman</title>
      <link>/2014/03/02/hastie-and-tibshirani-interview-jerome-friedman/</link>
      <pubDate>Sun, 02 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/03/02/hastie-and-tibshirani-interview-jerome-friedman/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.stanford.edu/~hastie/&#34; target=&#34;_blank&#34;&gt;Trevor Hastie&lt;/a&gt; and &lt;a href=&#34;http://statweb.stanford.edu/~tibs/&#34; target=&#34;_blank&#34;&gt;Rob Tibshirani&lt;/a&gt; are currently teaching a &lt;a href=&#34;http://en.wikipedia.org/wiki/Massive_open_online_course&#34; target=&#34;_blank&#34;&gt;MOOC&lt;/a&gt; covering an &lt;a href=&#34;https://class.stanford.edu/courses/HumanitiesScience/StatLearning/Winter2014/about&#34; target=&#34;_blank&#34;&gt;introduction to statistical learning&lt;/a&gt;. I am very familiar with most of the material in the course, having read &lt;em&gt;Elements of Statistical Learning&lt;/em&gt; many times over.&lt;/p&gt;

&lt;p&gt;One great thing about the class, however, is that they are truely experts and have collaborated with many of the influencial researchers in their field. Because of this, when covering certain topics, they have included interviews with statisticians who made important developments to the field. When introducing the class to R, they interviewed &lt;a href=&#34;https://www.youtube.com/watch?v=jk9S3RTAl38&#34; target=&#34;_blank&#34;&gt;John Chambers&lt;/a&gt;, who was able to give a personal account of the history of S and R because he was one of the developers. Further, when covering resampling methods, they spoke with &lt;a href=&#34;https://www.youtube.com/watch?v=6l9V1sINzhE&#34; target=&#34;_blank&#34;&gt;Brad Efron&lt;/a&gt;, who talked about the history of the &lt;a href=&#34;http://en.wikipedia.org/wiki/Bootstrapping_%28statistics%29&#34; target=&#34;_blank&#34;&gt;bootstrap&lt;/a&gt; and how he struggled to get it published.&lt;/p&gt;

&lt;p&gt;Today, they released &lt;a href=&#34;https://www.youtube.com/watch?v=79tR7BvYE6w&#34; target=&#34;_blank&#34;&gt;a video interview&lt;/a&gt; with Jerome Friedman. Friedman revealed many interesting facts about the history of &lt;a href=&#34;http://en.wikipedia.org/wiki/Decision_tree_learning&#34; target=&#34;_blank&#34;&gt;tree-based methods&lt;/a&gt;, including the fact that there weren&amp;rsquo;t really any journal articles written about CART when they wrote &lt;a href=&#34;http://www.amazon.com/Classification-Regression-Trees-Leo-Breiman/dp/0412048418&#34; target=&#34;_blank&#34;&gt;their book&lt;/a&gt;. There was one quote that I particularly enjoyed.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;And of course, I&amp;rsquo;m very gratified that something that I was
intellectually interested in for all this time has now
become very popular and very important.
I mean, data has risen to the top.
My only regret is two of my mentors who also pushed it,
probably harder and more effectively than I did &amp;ndash;
namely, John Tukey and Leo Breiman &amp;ndash; are not around to
actually see how data has triumphed over,
say, theorem proving.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/79tR7BvYE6w&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Top Songs by Artist on CD102.5 in 2013</title>
      <link>/2013/12/27/top-songs-by-artist-on-cd102.5-in-2013/</link>
      <pubDate>Fri, 27 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/12/27/top-songs-by-artist-on-cd102.5-in-2013/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
In a &lt;a href=&#34;http://alandgraf.blogspot.com/2013/08/downloading-and-analyzing-cd1025s.html&#34;&gt;previous post&lt;/a&gt;, I showed you how to scrape playlist data from Columbus, OH alternative rock station &lt;a href=&#34;http://cd1025.com/&#34;&gt;CD102.5&lt;/a&gt;. Since it&#39;s the end of the year and best-of lists are all the fad, I thought I would share the most popular songs and artists of the year, according to this data. In addition to this, I am going to make an interactive graph using &lt;a href=&#34;http://www.rstudio.com/shiny/&#34;&gt;Shiny&lt;/a&gt;, where the user can select an artist and it will graph the most popular songs from that artist.&lt;br /&gt;&lt;br /&gt;First off, I am assuming that you have scraped the appropriate data using the code from the previous post.&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;library(lubridate)&lt;br /&gt;library(sqldf)&lt;br /&gt;&lt;br /&gt;playlist=read.csv(&#34;CD101Playlist.csv&#34;,stringsAsFactors=FALSE)&lt;br /&gt;dates=mdy(substring(playlist[,3],nchar(playlist[,3])-9,nchar(playlist[,3])))&lt;br /&gt;times=hm(substring(playlist[,3],1,nchar(playlist[,3])-10))&lt;br /&gt;playlist$Month=ymd(paste(year(dates),month(dates),&#34;1&#34;,sep=&#34;-&#34;))&lt;br /&gt;playlist$Day=dates&lt;br /&gt;playlist$Time=times&lt;br /&gt;playlist=playlist[order(playlist$Day,playlist$Time),]&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;Next, I will select just the data from 2013 and find the songs that were played most often. &lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;playlist=subset(playlist,Day&amp;gt;=mdy(&#34;1/1/13&#34;))&lt;br /&gt;playlist$ArtistSong=paste(playlist$Artist,playlist$Song,sep=&#34;-&#34;)&lt;br /&gt;top.songs=sqldf(&#34;Select ArtistSong, Count(ArtistSong) as Num&lt;br /&gt;      From playlist&lt;br /&gt;      Group By ArtistSong&lt;br /&gt;      Order by Num DESC&lt;br /&gt;      Limit 10&#34;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;The top 10 songs are the following:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;                              Artist-Song Number Plays&lt;br /&gt;1  FITZ AND THE TANTRUMS-OUT OF MY LEAGUE 809&lt;br /&gt;2                      ALT J-BREEZEBLOCKS 764&lt;br /&gt;3              COLD WAR KIDS-MIRACLE MILE 759&lt;br /&gt;4                      ATLAS GENIUS-IF SO 750&lt;br /&gt;5                         FOALS-MY NUMBER 687&lt;br /&gt;6                         MS MR-HURRICANE 679&lt;br /&gt;7       THE NEIGHBOURHOOD-SWEATER WEATHER 657&lt;br /&gt;8           CAPITAL CITIES-SAFE AND SOUND 646&lt;br /&gt;9             VAMPIRE WEEKEND-DIANE YOUNG 639&lt;br /&gt;10             THE FEATURES-THIS DISORDER 632&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;I will make a plot similar to the plots made in &lt;a href=&#34;http://alandgraf.blogspot.com/2013/08/when-did-cd1025-book-summerfest-artists.html&#34;&gt;the last post&lt;/a&gt; to show when the top 5 songs were played throughout the year.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;    &lt;br /&gt;plays.per.day=sqldf(&#34;Select Day, Count(Artist) as Num&lt;br /&gt;      From playlist&lt;br /&gt;      Group By Day&lt;br /&gt;      Order by Day&#34;)&lt;br /&gt;&lt;br /&gt;playlist.top.songs=subset(playlist,ArtistSong %in% top.songs$ArtistSong[1:5])&lt;br /&gt;&lt;br /&gt;song.per.day=sqldf(paste0(&#34;Select Day, ArtistSong, Count(ArtistSong) as Num&lt;br /&gt;                          From [playlist.top.songs]&lt;br /&gt;                          Group By Day, ArtistSong&lt;br /&gt;                          Order by Day, ArtistSong&#34;))&lt;br /&gt;dspd=dcast(song.per.day,Day~ArtistSong,sum,value.var=&#34;Num&#34;)&lt;br /&gt;&lt;br /&gt;song.per.day=merge(plays.per.day[,1,drop=FALSE],dspd,all.x=TRUE)&lt;br /&gt;song.per.day[is.na(song.per.day)]=0&lt;br /&gt;&lt;br /&gt;song.per.day=melt(song.per.day,1,variable.name=&#34;ArtistSong&#34;,value.name=&#34;Num&#34;)&lt;br /&gt;song.per.day$Alpha=ifelse(song.per.day$Num&amp;gt;0,1,0)&lt;br /&gt;&lt;br /&gt;library(ggplot2)&lt;br /&gt;ggplot(song.per.day,aes(Day,Num,colour=ArtistSong))+geom_point(aes(alpha=Alpha))+&lt;br /&gt;  geom_smooth(method=&#34;gam&#34;,family=poisson,formula=y~s(x),se=F,size=1)+&lt;br /&gt;  labs(x=&#34;Date&#34;,y=&#34;Plays Per Day&#34;,title=&#34;Top Songs&#34;,colour=NULL)+&lt;br /&gt;  scale_alpha_continuous(guide=FALSE,range=c(0,.5))+theme_bw()&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-JWP3RQkgQeo/Ur4-RG1px7I/AAAAAAAAH-U/JH6gP0Jk6Tc/s1600/TopSongs.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://4.bp.blogspot.com/-JWP3RQkgQeo/Ur4-RG1px7I/AAAAAAAAH-U/JH6gP0Jk6Tc/s1600/TopSongs.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;Alt-J was more popular in the beginning of the year and the Foals have been more popular recently.&lt;br /&gt;&lt;br /&gt;I can similarly summarize by artist as well.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;top.artists=sqldf(&#34;Select Artist, Count(Artist) as Num&lt;br /&gt;                From playlist&lt;br /&gt;                Group By Artist&lt;br /&gt;                Order by Num DESC&lt;br /&gt;                Limit 10&#34;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;                    Artist  Num&lt;br /&gt;1                     MUSE 1683&lt;br /&gt;2          VAMPIRE WEEKEND 1504&lt;br /&gt;3        SILVERSUN PICKUPS 1442&lt;br /&gt;4                    FOALS 1439&lt;br /&gt;5                  PHOENIX 1434&lt;br /&gt;6            COLD WAR KIDS 1425&lt;br /&gt;7                JAKE BUGG 1316&lt;br /&gt;8  QUEENS OF THE STONE AGE 1296&lt;br /&gt;9                    ALT J 1233&lt;br /&gt;10     OF MONSTERS AND MEN 1150&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;playlist.top.artists=subset(playlist,Artist %in% top.artists$Artist[1:5])&lt;br /&gt;&lt;br /&gt;artists.per.day=sqldf(paste0(&#34;Select Day, Artist, Count(Artist) as Num&lt;br /&gt;                          From [playlist.top.artists]&lt;br /&gt;                          Group By Day, Artist&lt;br /&gt;                          Order by Day, Artist&#34;))&lt;br /&gt;dspd=dcast(artists.per.day,Day~Artist,sum,value.var=&#34;Num&#34;)&lt;br /&gt;&lt;br /&gt;artists.per.day=merge(plays.per.day[,1,drop=FALSE],dspd,all.x=TRUE)&lt;br /&gt;artists.per.day[is.na(artists.per.day)]=0&lt;br /&gt;&lt;br /&gt;artists.per.day=melt(artists.per.day,1,variable.name=&#34;Artist&#34;,value.name=&#34;Num&#34;)&lt;br /&gt;artists.per.day$Alpha=ifelse(artists.per.day$Num&amp;gt;0,1,0)&lt;br /&gt;&lt;br /&gt;ggplot(artists.per.day,aes(Day,Num,colour=Artist))+geom_point(aes(alpha=Alpha))+&lt;br /&gt;  geom_smooth(method=&#34;gam&#34;,family=poisson,formula=y~s(x),se=F,size=1)+&lt;br /&gt;  labs(x=&#34;Date&#34;,y=&#34;Plays Per Day&#34;,title=&#34;Top Artists&#34;,colour=NULL)+&lt;br /&gt;  scale_alpha_continuous(guide=FALSE,range=c(0,.5))+theme_bw()&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-57hZwciuIug/Ur5AO9l7NWI/AAAAAAAAH-g/Xi2_4e-FwZw/s1600/TopArtist.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-57hZwciuIug/Ur5AO9l7NWI/AAAAAAAAH-g/Xi2_4e-FwZw/s1600/TopArtist.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;The pattern for the artists are not as clear as it is for the songs.&lt;br /&gt;&lt;br /&gt;Finally, I wrote &lt;a href=&#34;https://andland.shinyapps.io/CD1025Playlist2/&#34;&gt;a Shiny interactive app&lt;/a&gt;. They are surprisingly easy to create and if you are thinking about experimenting with it, I suggest you try it. I will leave the code for the app in &lt;a href=&#34;https://gist.github.com/andland/8155783&#34;&gt;a gist&lt;/a&gt;. In &lt;a href=&#34;https://andland.shinyapps.io/CD1025Playlist2/&#34;&gt;the app&lt;/a&gt;, you can enter any artist you want, and it will show you the most popular songs on CD102.5 for that artist. You can also select the number of songs that it plots with the slider.&lt;br /&gt;&lt;br /&gt;For example, even though Muse did not have one of the most popular songs of the year, they were still the band that was played the most. By typing in &#34;MUSE&#34; in the Artist text input, you will get the following output.&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-EuKnItqFzCo/Ur5CQELkw0I/AAAAAAAAH-s/Pv4dJwueLQM/s1600/Muse.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://1.bp.blogspot.com/-EuKnItqFzCo/Ur5CQELkw0I/AAAAAAAAH-s/Pv4dJwueLQM/s1600/Muse.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;They had two songs that were very popular this year and a few others that were decently popular as well.&lt;br /&gt;&lt;br /&gt;&lt;a href=&#34;https://andland.shinyapps.io/CD1025Playlist2/&#34;&gt;Play around&lt;/a&gt; with it and let me know what you think.&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>When Did CD102.5 Book the Summerfest Artists?</title>
      <link>/2013/08/27/when-did-cd102.5-book-the-summerfest-artists/</link>
      <pubDate>Tue, 27 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/08/27/when-did-cd102.5-book-the-summerfest-artists/</guid>
      <description>

&lt;h1 id=&#34;cd1025-s-playlist-and-summerfest&#34;&gt;CD1025&amp;rsquo;s Playlist and Summerfest&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://alandgraf.blogspot.com/2013/08/downloading-and-analyzing-cd1025s.html&#34; target=&#34;_blank&#34;&gt;Last time&lt;/a&gt;, I showed you how to download CD1025&amp;rsquo;s playlist back to last year and did some exploratory analysis to find that there were some gaps in the data. Using this data, I would like to look at the artists that are playing in this week&amp;rsquo;s &lt;a href=&#34;http://cd1025.com/summerfest&#34; target=&#34;_blank&#34;&gt;Summerfest&lt;/a&gt;. Summerfest is one of the biggest shows that CD1025 puts on every year and is hyped quite a bit on the station. I would like to look into whether they play the headliners more once they have booked the artists.&lt;/p&gt;

&lt;p&gt;I am going to concentrate on data from January 1st and on so I don&amp;rsquo;t include too much irrelevant data. Below is a function where I can input a number related to which headliner I want and it will plot the plays per day of that artist from January 1st to the most recent history. I also plot a smooth curve and a vertical line when the lineup was announced on June 24th.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;playlist=subset(playlist,Day&amp;gt;=mdy(&amp;quot;1/1/13&amp;quot;))
plays.per.day=sqldf(&amp;quot;Select Day, Count(Artist) as Num
      From playlist
      Group By Day
      Order by Day&amp;quot;)
summerfest.artists=c(&amp;quot;MATT AND KIM&amp;quot;,&amp;quot;COLD WAR KIDS&amp;quot;,&amp;quot;RA RA RIOT&amp;quot;,&amp;quot;SMITH WESTERNS&amp;quot;,
                       &amp;quot;J. RODDY WALSTON AND THE BUSINESS&amp;quot;,&amp;quot;CAYUCAS&amp;quot;,
                       &amp;quot;THAO AND THE GET DOWN STAY DOWN&amp;quot;,&amp;quot;DALE EARNHARDT JR. JR.&amp;quot;)

plot.plays &amp;lt;- function(artist.num) {
  summerfest=summerfest.artists[artist.num]
  song.per.day=sqldf(paste0(&amp;quot;Select Day, Count(Artist) as Num
                      From playlist
                      Where Artist=&#39;&amp;quot;,summerfest,&amp;quot;&#39;
                      Group By Day
                      Order by Day&amp;quot;))
  song.per.day=merge(plays.per.day[,1,drop=FALSE],song.per.day,all.x=TRUE)
  song.per.day$Num[is.na(song.per.day$Num)]=0
  
  qplot(Day,Num,data=song.per.day,geom=&amp;quot;point&amp;quot;)+labs(x=&amp;quot;Date&amp;quot;,y=&amp;quot;Plays&amp;quot;,title=summerfest,colour=NULL)+
    geom_vline(xintercept=as.numeric(mdy(&amp;quot;6/24/13&amp;quot;)),lty=2)+
    geom_smooth(method=&amp;quot;gam&amp;quot;,family=poisson,formula=y~s(x),se=F,aes(colour=&amp;quot;Smooth&amp;quot;),size=2)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Doing this with the first artist, Matt and Kim, you can see that the plays per day steadily increased sharply some time in late March and stayed about constant there until the announcement. After the announcement, surprisingly, the plays have decreased. The fact that the plays increased in late March indicates to me that it is possible that they booked Matt and Kim then and increased them in the rotation in order to make the band more familiar to the audience. Of course, there are many other (possibly more reasonable) reasons that the play count increased, so I may be reading into it too much.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot.plays(1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;/post/2013-08-27-when-did-cd1025-book-summerfest-artists/MattAndKimPlays.png&#34; alt=&#34;plot of chunk MattAndKimPlays&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I would like to statistically determine when the number of plays changed the most and from that infer when the station had booked the artist. To do this I assume a change point model. Since we are dealing with counts, I will assume that the number of plays in a day follows a Poisson distribution. In a change point model, there is some day, $\tau$, where the mean parameter of the Poisson distribution changes. Before that date, the play counts follow a Poisson with mean $\lambda_1$ and after the mean is $\lambda_2$ ($\lambda_1 \neq \lambda_2$).&lt;/p&gt;

&lt;p&gt;Let $X_i$ be the number of plays for Matt and Kim on date $i$. The generative model is&lt;/p&gt;

&lt;p&gt;$$ X_i \sim Poisson(\lambda_1), i \leq \tau$$&lt;/p&gt;

&lt;p&gt;$$X_i \sim Poisson(\lambda_2), i &amp;gt; \tau$$&lt;/p&gt;

&lt;p&gt;and therefore the likelihood is&lt;/p&gt;

&lt;p&gt;$$\prod_{i=\text{Jan 1}}^{\tau-1} \frac{\lambda_1^{x_i}}{x_i !} e^{\lambda_1}$$&lt;/p&gt;

&lt;p&gt;$$\prod_{i=\tau}^{\text{June 23}} \frac{\lambda_2^{x_i}}{x_i !} e^{\lambda_2}$$&lt;/p&gt;

&lt;p&gt;If $\tau=t$ is known, maximizing the likelihood with respect to $\lambda_1$ and $\lambda_2$ is easy.&lt;/p&gt;

&lt;p&gt;$$\hat{\lambda}_1 = \bar{x}[\leq t]$$&lt;/p&gt;

&lt;p&gt;$$\hat{\lambda}_2 = \bar{x}[&amp;gt; t]$$&lt;/p&gt;

&lt;p&gt;which are the average play counts per day before and after $t$.&lt;/p&gt;

&lt;p&gt;We can easily find the $\hat{\tau}$ that maximizes the likelihood by looping $t$ through every  day from January 1 to June 22, finding the maximum likelihood estimates, and calculating the likelihood. The $t$ that gives the highest likelihood and the corresponding $\lambda$s are the MLEs. A function for the maximized log likelihood is given below for a given $t$.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;log.like.known = function(t) {
    pre = song.per.day$Day &amp;lt;= t
    post = song.per.day$Day &amp;gt; t &amp;amp; song.per.day$Day &amp;lt; mdy(&amp;quot;6/24/13&amp;quot;)
    lambda1hat = sum(song.per.day$Num[pre])/sum(pre)
    lambda2hat = sum(song.per.day$Num[post])/sum(post)
    sum(song.per.day$Num[pre]) * log(lambda1hat) + sum(song.per.day$Num[post]) * 
        log(lambda2hat) + -sum(pre) * lambda1hat - lambda2hat * sum(post)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the code below, I plot the maximized log likelihood for every given $\tau$. You can see that it peaks in the middle of March (March 19th to be specific).&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summerfest=summerfest.artists[1]
song.per.day=sqldf(paste0(&amp;quot;Select Day, Count(Artist) as Num
                    From playlist
                    Where Artist=&#39;&amp;quot;,summerfest,&amp;quot;&#39;
                    Group By Day
                    Order by Day&amp;quot;))
song.per.day=merge(plays.per.day[,1,drop=FALSE],song.per.day,all.x=TRUE)
song.per.day$Num[is.na(song.per.day$Num)]=0

dts=seq(mdy(01012013),mdy(06222013),by=&amp;quot;1 day&amp;quot;)
loglikes=sapply(dts,log.like.known)
tauhat=dts[which.max(loglikes)]
qplot(dts,loglikes)+geom_vline(xintercept=as.numeric(tauhat),lty=2)+
  labs(x=&amp;quot;Date&amp;quot;,y=&amp;quot;Log Likelihood&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;/post/2013-08-27-when-did-cd1025-book-summerfest-artists/MattAndKimTauLike.png&#34; alt=&#34;plot of chunk MattAndKimTauLike&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Combining this information with the previous plot, we can visualize our break point model. First I recalculate the $\lambda$s now that the $\hat{\tau}$ is known. Then I plot the fitted model on the previous plot.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;pre=song.per.day$Day&amp;lt;=tauhat
post=song.per.day$Day&amp;gt;tauhat &amp;amp; song.per.day$Day&amp;lt;mdy(&amp;quot;6/24/13&amp;quot;)
lambda1hat=sum(song.per.day$Num[pre])/sum(pre)
lambda2hat=sum(song.per.day$Num[post])/sum(post)
seg.dat=data.frame(Day=c(mdy(01012013),tauhat,tauhat,mdy(06232013)),
                   Num=c(lambda1hat,lambda1hat,lambda2hat,lambda2hat))
plot.plays(1)+geom_path(data=seg.dat,aes(colour=&amp;quot;Changepoint&amp;quot;),lty=3,size=2)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;/post/2013-08-27-when-did-cd1025-book-summerfest-artists/MattAndKimPlaysFitted.png&#34; alt=&#34;plot of chunk MattAndKimPlaysFitted&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The changepoint model seems to fit the data pretty well. You can see that the average plays per day before March 19th was about 0.75, and it jumped up to 3.25 after March 19th. I think this is fairly strong evidence that CD1025 booked Matt and Kim around then and increased their exposure.&lt;/p&gt;

&lt;p&gt;Below, I have done the same with the other headliners. Plays for Cold War Kids have increased gradually, possibly because they recently released an album. The plays for Ra Ra Riot and Smith Westerns, on the other hand, increased quite dramatically. Based on this, I think we can make pretty good guesses of when the headliners were booked, with the possible exception of Cold War Kids.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot.plays.change(2)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;/post/2013-08-27-when-did-cd1025-book-summerfest-artists/ColdwarKidsPlaysFitted.png&#34; alt=&#34;plot of chunk ColdwarKidsPlaysFitted&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot.plays.change(3)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;/post/2013-08-27-when-did-cd1025-book-summerfest-artists/RaRaRiotPlaysFitted.png&#34; alt=&#34;plot of chunk RaRaRiotPlaysFitted&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot.plays.change(4)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;/post/2013-08-27-when-did-cd1025-book-summerfest-artists/SmithWesternsPlaysFitted.png&#34; alt=&#34;plot of chunk SmithWesternsPlaysFitted&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Downloading and Analyzing CD1025&#39;s Playlist</title>
      <link>/2013/08/20/downloading-and-analyzing-cd1025s-playlist/</link>
      <pubDate>Tue, 20 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/08/20/downloading-and-analyzing-cd1025s-playlist/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
&lt;a href=&#34;http://www.cd101.com/&#34;&gt;CD1025&lt;/a&gt; is an “alternative” radio station here in Columbus. They are one of the few remaining radio stations that are independently owned and they take great pride in it. For data nerds like me, they also put a real time list of recently played songs on &lt;a href=&#34;http://cd1025.com/about/playlists/now-playing&#34;&gt;their website&lt;/a&gt;. The page has the most recent 50 songs played, but you can also click on “Older Tracks” to go back in time. When you do this, the URL ends “now-playing/?start=50”. If you got back again, it says “now-playing/?start=100”.&lt;br /&gt;&lt;br /&gt;Using this structure, I decided to see if I could download all of their historical data and see how far it goes back. In the code below, I use the XML package to go to the website and download the 50 songs and then increment the number by 50 to find the previous 50 songs. I am telling the code to keep doing this until I get to January 1, 2012.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;library(ggplot2)&lt;br /&gt;theme_set(theme_bw())&lt;br /&gt;library(XML)&lt;br /&gt;library(lubridate)&lt;br /&gt;library(sqldf)&lt;br /&gt;startNum = 0&lt;br /&gt;while (TRUE) {&lt;br /&gt;    theurl &amp;lt;- paste0(&#34;http://cd1025.com/about/playlists/now-playing/?start=&#34;, &lt;br /&gt;        startNum)&lt;br /&gt;    table &amp;lt;- readHTMLTable(theurl, stringsAsFactors = FALSE)[[1]]&lt;br /&gt;    if (startNum == 0) {&lt;br /&gt;        playlist = table[, -1]&lt;br /&gt;    } else {&lt;br /&gt;        playlist = rbind(playlist, table[, -1])&lt;br /&gt;    }&lt;br /&gt;    dt = mdy(substring(table[1, 4], nchar(table[1, 4]) - 9, nchar(table[1, 4])))&lt;br /&gt;    print(dt)&lt;br /&gt;    if (dt &amp;lt; mdy(&#34;1/1/12&#34;)) {&lt;br /&gt;        break&lt;br /&gt;    }&lt;br /&gt;    startNum = startNum + 50&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;playlist = unique(playlist)  # Remove Dupes&lt;br /&gt;&lt;br /&gt;write.csv(playlist, &#34;CD101Playlist.csv&#34;, row.names = FALSE)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;This takes a while and is fairly large. My file has over 150,000 songs. If you want just a little data, change the date to last week or so. The first thing I will do is parse the dates and times of the songs, order them, and look at the first few songs. You can see that data only goes back to March of 2012.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;dates = mdy(substring(playlist[, 3], nchar(playlist[, 3]) - 9, nchar(playlist[, &lt;br /&gt;    3])))&lt;br /&gt;times = hm(substring(playlist[, 3], 1, nchar(playlist[, 3]) - 10))&lt;br /&gt;playlist$Month = ymd(paste(year(dates), month(dates), &#34;1&#34;, sep = &#34;-&#34;))&lt;br /&gt;playlist$Day = dates&lt;br /&gt;playlist$Time = times&lt;br /&gt;playlist = playlist[order(playlist$Day, playlist$Time), ]&lt;br /&gt;head(playlist)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;##                     Artist                Song       Last.Played&lt;br /&gt;## 151638 DEATH CAB FOR CUTIE   YOU ARE A TOURIST 12:34am03/01/2012&lt;br /&gt;## 151637       SLEEPER AGENT          GET BURNED 12:38am03/01/2012&lt;br /&gt;## 151636          WASHED OUT           AMOR FATI 12:41am03/01/2012&lt;br /&gt;## 151635            COLDPLAY       CHARLIE BROWN 12:45am03/01/2012&lt;br /&gt;## 151634           GROUPLOVE         TONGUE TIED 12:49am03/01/2012&lt;br /&gt;## 151633               SUGAR YOUR FAVORITE THING 12:52am03/01/2012&lt;br /&gt;##             Month        Day   Time&lt;br /&gt;## 151638 2012-03-01 2012-03-01 34M 0S&lt;br /&gt;## 151637 2012-03-01 2012-03-01 38M 0S&lt;br /&gt;## 151636 2012-03-01 2012-03-01 41M 0S&lt;br /&gt;## 151635 2012-03-01 2012-03-01 45M 0S&lt;br /&gt;## 151634 2012-03-01 2012-03-01 49M 0S&lt;br /&gt;## 151633 2012-03-01 2012-03-01 52M 0S&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Using the sqldf package, I can easily see what the most played artists and songs are from the data I scraped.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;sqldf(&#34;Select Artist, Count(Artist) as PlayCount&lt;br /&gt;       From playlist&lt;br /&gt;       Group By Artist&lt;br /&gt;       Order by PlayCount DESC&lt;br /&gt;       Limit 10&#34;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;##                   Artist PlayCount&lt;br /&gt;## 1      SILVERSUN PICKUPS      2340&lt;br /&gt;## 2         THE BLACK KEYS      2203&lt;br /&gt;## 3                   MUSE      1988&lt;br /&gt;## 4              THE SHINS      1885&lt;br /&gt;## 5    OF MONSTERS AND MEN      1753&lt;br /&gt;## 6            PASSION PIT      1552&lt;br /&gt;## 7              GROUPLOVE      1544&lt;br /&gt;## 8  RED HOT CHILI PEPPERS      1514&lt;br /&gt;## 9                 METRIC      1495&lt;br /&gt;## 10          ATLAS GENIUS      1494&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;&lt;br /&gt;sqldf(&#34;Select Artist, Song, Count(Song) as PlayCount&lt;br /&gt;      From playlist&lt;br /&gt;      Group By Artist, Song&lt;br /&gt;      Order by PlayCount DESC&lt;br /&gt;      Limit 10&#34;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;##                 Artist                    Song PlayCount&lt;br /&gt;## 1          PASSION PIT             TAKE A WALK       828&lt;br /&gt;## 2    SILVERSUN PICKUPS                PIT, THE       825&lt;br /&gt;## 3         ATLAS GENIUS                 TROJANS       819&lt;br /&gt;## 4        WALK THE MOON                ANNA SUN       742&lt;br /&gt;## 5       THE BLACK KEYS LITTLE BLACK SUBMARINES       736&lt;br /&gt;## 6          DIVINE FITS  WOULD THAT NOT BE NICE       731&lt;br /&gt;## 7        THE LUMINEERS                  HO HEY       722&lt;br /&gt;## 8       CAPITAL CITIES          SAFE AND SOUND       712&lt;br /&gt;## 9  OF MONSTERS AND MEN          MOUNTAIN SOUND       711&lt;br /&gt;## 10               ALT J            BREEZEBLOCKS       691&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;I am a little surprised that Silversun Pickups are the number one band, but everyone on the list makes sense. Looking at how the plays of the top artists have varied from month to month, you can see a few patterns. Muse has been more popular recently and The Shins and Grouplove have lost some steam.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;artist.month=sqldf(&#34;Select Month, Artist, Count(Song) as Num&lt;br /&gt;      From playlist&lt;br /&gt;      Group By Month, Artist&lt;br /&gt;      Order by Month, Artist&#34;)&lt;br /&gt;artist=sqldf(&#34;Select Artist, Count(Artist) as Num&lt;br /&gt;      From playlist&lt;br /&gt;      Group By Artist&lt;br /&gt;      Order by Num DESC&#34;)&lt;br /&gt;p=ggplot(subset(artist.month,Artist %in% head(artist$Artist,8)),aes(Month,Num))&lt;br /&gt;p+geom_bar(stat=&#34;identity&#34;,aes(fill=Artist),position=&#39;fill&#39;,colour=&#34;grey&#34;)+&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt; labs(y=&#34;Percentage of Plays&#34;)&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-ZbWCMOMUX8E/UhPvnh1UoqI/AAAAAAAAH8I/EIAlTwFKjxg/s1600/PlayProportionByMonth.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://3.bp.blogspot.com/-ZbWCMOMUX8E/UhPvnh1UoqI/AAAAAAAAH8I/EIAlTwFKjxg/s1600/PlayProportionByMonth.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;For the play count of the top artists, I see some odd numbers in June and July of 2012. The number of plays went way down.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;p + geom_area(aes(fill = Artist), position = &#34;stack&#34;, colour = 1) + labs(y = &#34;Number of Plays&#34;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/--0tLMWDJuAI/UhPvnsQAl2I/AAAAAAAAH8M/tl2RtleoH2k/s1600/PlayCountByMonth.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://1.bp.blogspot.com/--0tLMWDJuAI/UhPvnsQAl2I/AAAAAAAAH8M/tl2RtleoH2k/s1600/PlayCountByMonth.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Looking into this further, I plotted the date and time that the song was played by the cumulative number of songs played since the beginning of the list. The plot should be a line with a constant slope, meaning that the plays per day are relatively constant. You can see in June and July of 2012 there are flat spots where there is no playlist history. &lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;qplot(playlist$Day + playlist$Time, 1:length(dates), geom = &#34;path&#34;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-jzAKuFMa_ak/UhPvnqrS-_I/AAAAAAAAH8E/DgJDVUUNyD8/s1600/PlaysByTime.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://4.bp.blogspot.com/-jzAKuFMa_ak/UhPvnqrS-_I/AAAAAAAAH8E/DgJDVUUNyD8/s1600/PlaysByTime.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;There are also smaller flat spots in September and December, but I am going to decide that those are small enough not to affect any further analyses. From this, I am going to use data only from August 2012 to present.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;playlist = subset(playlist, Day &amp;gt;= mdy(&#34;8/1/12&#34;))&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Next up, I am going to use this data to analyze the plays of artists from &lt;a href=&#34;http://cd1025.com/summerfest&#34;&gt;Summerfest&lt;/a&gt;, and try to infer if the play counts varied once they were added to the bill.&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>What Is the Probability of a 16 Seed Beating a 1 Seed?</title>
      <link>/2013/04/21/what-is-the-probability-of-a-16-seed-beating-a-1-seed/</link>
      <pubDate>Sun, 21 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/04/21/what-is-the-probability-of-a-16-seed-beating-a-1-seed/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
&lt;i&gt;&lt;span id=&#34;goog_1885060128&#34;&gt;&lt;/span&gt;&lt;span id=&#34;goog_1885060129&#34;&gt;&lt;/span&gt;Note: I started this post way back when the NCAA men&#39;s basketball tournament was going on, but didn&#39;t finish it until now. &lt;/i&gt;&lt;br /&gt;&lt;br /&gt;Since the NCAA Men&#39;s Basketball Tournament has moved to 64 teams, a 16 seed as never upset a 1 seed. You might be tempted to say that the probability of such an event must be 0 then. But we know better than that.&lt;br /&gt;&lt;br /&gt;In this post, I am interested in looking at different ways of estimating how the odds of winning a game change as the difference between seeds increases. I was able to download tournament data going back to the 1930s until 2012 from &lt;a href=&#34;http://hoopstournament.net/Database.html&#34;&gt;hoopstournament.net/Database.html&lt;/a&gt;. The tournament expanded to 64 teams in 1985, which is what I used for this post. I only used match ups in which one of the seeds was higher than the other because this was the easiest way to remove duplicates. (The database has each game listed twice, once with the winner as the first team and once with the loser as the first team. The vast majority (98.9%) of games had one team as a higher seed because an equal seed can only happen at the Final Four or later.)&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/library&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;library&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot2&#34;&gt;ggplot2&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; theme_set&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;theme_bw&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;brackets=&lt;a href=&#34;http://inside-r.org/r-doc/utils/read.csv&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;read.csv&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;NCAAHistory.csv&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;# use only data from 1985 on in which the first team has the higher seed&lt;/span&gt;&lt;br /&gt;brackets=&lt;a href=&#34;http://inside-r.org/r-doc/base/subset&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;subset&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;brackets&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;Seed&amp;lt;Opponent.Seed &amp;amp; Year&amp;gt;=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1985&lt;/span&gt; &amp;amp; &lt;a href=&#34;http://inside-r.org/r-doc/base/Round&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;Round&lt;/span&gt;&lt;/a&gt;!=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Opening Round&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;brackets$SeedDiff=&lt;a href=&#34;http://inside-r.org/r-doc/base/abs&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;abs&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;brackets$Opponent.Seed-brackets$Seed&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;brackets$HigherSeedWon=&lt;a href=&#34;http://inside-r.org/r-doc/base/ifelse&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;ifelse&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;brackets$Opponent.Seed&amp;gt;brackets$Seed&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;brackets$Wins&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;brackets$Losses&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;brackets$HigherSeedScoreDiff=&lt;a href=&#34;http://inside-r.org/r-doc/base/ifelse&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;ifelse&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;brackets$Opponent.Seed&amp;gt;brackets$Seed&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;-&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;*&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;brackets$Score-brackets$Opponent.Score&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;h3&gt;Use Frequencies&lt;/h3&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;The first way is the most simple: look at the historical records when a 16 seed is playing a 1 seed (where the seed difference is 15). As you can see from the plot below, when the seed difference is 15, the higher seeded team has won every time. This is also true when the seed difference is 12, although there have only been 4 games in this scenario. Another oddity is that when the seed difference is 10, the higher seed only has only won 50% of the time. Again, this is largely due to the fact that there have only been 6 games with this seed difference.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;seed.diffs=&lt;a href=&#34;http://inside-r.org/r-doc/base/sort&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sort&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/unique&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;unique&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;brackets$SeedDiff&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;win.pct=&lt;a href=&#34;http://inside-r.org/r-doc/base/sapply&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sapply&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;seed.diffs&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;a href=&#34;http://inside-r.org/r-doc/base/mean&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;mean&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;brackets$HigherSeedWon&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;brackets$SeedDiff==x&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot&#34;&gt;ggplot&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/utils/data&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data&lt;/span&gt;&lt;/a&gt;=&lt;a href=&#34;http://inside-r.org/r-doc/base/data.frame&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data.frame&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;seed.diffs&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;win.pct&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;seed.diffs&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;win.pct&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_point&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_hline&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;yintercept=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0.5&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;linetype=&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_line&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+labs&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Seed Difference&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;y=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Proportion of Games Won by Higher Seed&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-4FoTKgiyX10/UXLrF8YV2tI/AAAAAAAAHtU/jgQ3FfibzQg/s1600/Frequencies.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://4.bp.blogspot.com/-4FoTKgiyX10/UXLrF8YV2tI/AAAAAAAAHtU/jgQ3FfibzQg/s1600/Frequencies.jpeg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;h3&gt;Use Score Difference&lt;/h3&gt;In many applications, it has been shown that using margin of victory is much more reliable than just wins and losses. For example, in the computer ranking of College Football teams, using score differences is more accurate, but outlawed for fear that teams would run up the score on weaker opponents. So the computer rankings are not as strong as they could be.&lt;br /&gt;&lt;br /&gt;We have no such conflict of interest, so we should try to make use of any information available. A simple way to do that is to look at the mean and standard deviation of the margin of victory when the 16 seed is playing the 1 seed. Below is a plot of the mean score difference with a ribbon for the +/- 2 standard deviations.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;seed.diffs=&lt;a href=&#34;http://inside-r.org/r-doc/base/sort&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sort&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/unique&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;unique&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;brackets$SeedDiff&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;means=&lt;a href=&#34;http://inside-r.org/r-doc/base/sapply&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sapply&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;seed.diffs&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;a href=&#34;http://inside-r.org/r-doc/base/mean&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;mean&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;brackets$HigherSeedScoreDiff&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;brackets$SeedDiff==x&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;sds=&lt;a href=&#34;http://inside-r.org/r-doc/base/sapply&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sapply&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;seed.diffs&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;a href=&#34;http://inside-r.org/r-doc/stats/sd&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sd&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;brackets$HigherSeedScoreDiff&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;brackets$SeedDiff==x&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot&#34;&gt;ggplot&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/utils/data&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data&lt;/span&gt;&lt;/a&gt;=&lt;a href=&#34;http://inside-r.org/r-doc/base/data.frame&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data.frame&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;seed.diffs&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;means&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;sds&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;seed.diffs&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;means&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_ribbon&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;ymin=means-&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;*sds&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;ymax=means+&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;*sds&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;alpha=&lt;span style=&#34;color: #cc66cc;&#34;&gt;.5&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_point&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_line&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_hline&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;yintercept=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;linetype=&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  labs&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Seed Difference&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;y=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Margin of Victory by Higher Seed&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-4VaSHpRws2A/UXLrGMODjhI/AAAAAAAAHtQ/7JrGAbDYY4A/s1600/MarginOfVictory.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://3.bp.blogspot.com/-4VaSHpRws2A/UXLrGMODjhI/AAAAAAAAHtQ/7JrGAbDYY4A/s1600/MarginOfVictory.jpeg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;You can see that the ribbon includes zero for all seed differences except 15. If we assume that the score differences are roughly normal, we can calculate the probability that the score difference will be greater than 0. The results are largely the same as before, but we see now that there are no 100% estimates. Also, the 50% win percentage for a seed difference of 10 now looks a little more reasonable, albeit still out of line with the rest.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot&#34;&gt;ggplot&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/utils/data&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data&lt;/span&gt;&lt;/a&gt;=&lt;a href=&#34;http://inside-r.org/r-doc/base/data.frame&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data.frame&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;seed.diffs&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;means&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;sds&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;seed.diffs&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;-&lt;a href=&#34;http://inside-r.org/r-doc/stats/pnorm&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;pnorm&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;means&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;sds&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_point&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_line&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_hline&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;yintercept=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0.5&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;linetype=&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  labs&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Seed Difference&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;y=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Probability of Higher Seed Winning Based on Margin of Victory&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-0IRgSQFoL9M/UXLrF7iNsYI/AAAAAAAAHtM/G-7h8k1yLAA/s1600/ProbMarginOfVictory.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://4.bp.blogspot.com/-0IRgSQFoL9M/UXLrF7iNsYI/AAAAAAAAHtM/G-7h8k1yLAA/s1600/ProbMarginOfVictory.jpeg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;h3&gt;Model Win Percentage as a Function of&amp;nbsp; Seed Difference&lt;/h3&gt;It is always good to incorporate as much knowledge as possible into an analysis. In this case, we have information on other games besides the 16 versus 1 seed game which help us estimate the 16 versus 1 game. For example, it is reasonable to assume that the larger the difference in seed is, the more likely the higher seed will win. We can build a logistic regression model which looks at all of the outcomes of all of the games and predicts the probability of winning based on the difference in seed. When the two teams have the same seed, I enforced the probability of the higher seed winning to be 0.5 by making the intercept 0.&lt;br /&gt;&lt;br /&gt;In the plot below, you can see that the logistic model predicts that the probability of winning increases throughout until reaching about 90% for the 16 versus 1. I also included a non-linear generalized additive model (GAM) model for comparison. The GAM believes that being a big favorite (16 vs 1 or 15 vs 2) gives an little boost in win probability. An advantage of modeling is that we can make predictions for match-ups that have never occurred (like a seed difference of 14). &lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot&#34;&gt;ggplot&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/utils/data&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data&lt;/span&gt;&lt;/a&gt;=brackets&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;SeedDiff&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;HigherSeedWon&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  stat_smooth&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;method=&lt;span style=&#34;color: blue;&#34;&gt;&#34;gam&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/family&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;family&lt;/span&gt;&lt;/a&gt;=&lt;span style=&#34;color: blue;&#34;&gt;&#34;binomial&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;se=F&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/formula&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;formula&lt;/span&gt;&lt;/a&gt;=y~&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;+x&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Logistic&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  stat_smooth&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;method=&lt;span style=&#34;color: blue;&#34;&gt;&#34;gam&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/family&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;family&lt;/span&gt;&lt;/a&gt;=&lt;span style=&#34;color: blue;&#34;&gt;&#34;binomial&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;se=F&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/formula&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;formula&lt;/span&gt;&lt;/a&gt;=y~&lt;a href=&#34;http://inside-r.org/r-doc/mgcv/s&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;s&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;GAM&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_jitter&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;alpha=&lt;span style=&#34;color: #cc66cc;&#34;&gt;.15&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;position = position_jitter&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;height = &lt;span style=&#34;color: #cc66cc;&#34;&gt;.025&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;width=&lt;span style=&#34;color: #cc66cc;&#34;&gt;.25&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  labs&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Seed Difference&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;y=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Game Won by Higher Seed&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Model&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-QYWl4914Phc/UXLwH3ls3mI/AAAAAAAAHtY/7CMeKo0ZH5M/s1600/Model01.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://3.bp.blogspot.com/-QYWl4914Phc/UXLwH3ls3mI/AAAAAAAAHtY/7CMeKo0ZH5M/s1600/Model01.jpeg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;h3&gt;Model Score Difference as a Function of&amp;nbsp; Seed Difference&lt;/h3&gt;We can also do the same thing with margin of victory. Here, I constrain the linear model to have an intercept of 0, meaning that two teams with the same seed should be evenly matched. Again, I included the GAM fit for comparison. The interpretations are similar to before, in that it seems that there is an increase in margin of victory for the heavily favored teams.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot&#34;&gt;ggplot&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/utils/data&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data&lt;/span&gt;&lt;/a&gt;=brackets&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;SeedDiff&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;HigherSeedScoreDiff&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  stat_smooth&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;method=&lt;span style=&#34;color: blue;&#34;&gt;&#34;lm&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;se=F&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/formula&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;formula&lt;/span&gt;&lt;/a&gt;=y~&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;+x&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Linear&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  stat_smooth&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;method=&lt;span style=&#34;color: blue;&#34;&gt;&#34;gam&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;se=F&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/formula&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;formula&lt;/span&gt;&lt;/a&gt;=y~&lt;a href=&#34;http://inside-r.org/r-doc/mgcv/s&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;s&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;GAM&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_jitter&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;alpha=&lt;span style=&#34;color: #cc66cc;&#34;&gt;.25&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;position = position_jitter&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;height = &lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;width=&lt;span style=&#34;color: #cc66cc;&#34;&gt;.25&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  labs&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Seed Difference&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;y=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Margin of Victory by Higher Seed&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Model&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-ncQ9W4oFjU8/UXLyGTZLNuI/AAAAAAAAHtg/5MqlA6ZbX8c/s1600/ModelDiff.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://3.bp.blogspot.com/-ncQ9W4oFjU8/UXLyGTZLNuI/AAAAAAAAHtg/5MqlA6ZbX8c/s1600/ModelDiff.jpeg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;From these models of margin of victory we can infer the probability of the higher seed winning (again, assuming normality).&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/library&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;library&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/mgcv/gam&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;gam&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;lm.seed=&lt;a href=&#34;http://inside-r.org/r-doc/stats/lm&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;lm&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;HigherSeedScoreDiff~&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;+SeedDiff&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/utils/data&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data&lt;/span&gt;&lt;/a&gt;=brackets&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;gam.seed=&lt;a href=&#34;http://inside-r.org/r-doc/mgcv/gam&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;gam&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;HigherSeedScoreDiff~&lt;a href=&#34;http://inside-r.org/r-doc/mgcv/s&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;s&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;SeedDiff&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/utils/data&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data&lt;/span&gt;&lt;/a&gt;=brackets&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;pred.lm.seed=&lt;a href=&#34;http://inside-r.org/r-doc/stats/predict&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;predict&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;lm.seed&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/data.frame&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data.frame&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;SeedDiff=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color: #cc66cc;&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;se.fit=&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;TRUE&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;pred.gam.seed=&lt;a href=&#34;http://inside-r.org/r-doc/stats/predict&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;predict&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;gam.seed&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/data.frame&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data.frame&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;SeedDiff=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color: #cc66cc;&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;se.fit=&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;TRUE&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;se.lm=&lt;a href=&#34;http://inside-r.org/r-doc/base/sqrt&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sqrt&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/mean&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;mean&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;lm.seed$residuals^&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;se.gam=&lt;a href=&#34;http://inside-r.org/r-doc/base/sqrt&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sqrt&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/mean&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;mean&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;gam.seed$residuals^&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;df1=&lt;a href=&#34;http://inside-r.org/r-doc/base/data.frame&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data.frame&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;SeedDiff=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color: #cc66cc;&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;ProbLM=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;-&lt;a href=&#34;http://inside-r.org/r-doc/stats/pnorm&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;pnorm&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;pred.lm.seed$fit&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/sqrt&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sqrt&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;se.lm^&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;+pred.lm.seed$se.fit^&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;br /&gt;               ProbGAM=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;-&lt;a href=&#34;http://inside-r.org/r-doc/stats/pnorm&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;pnorm&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;pred.gam.seed$fit&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/sqrt&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sqrt&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;se.gam^&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;+pred.gam.seed$se.fit^&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot&#34;&gt;ggplot&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;df1&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_hline&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;yintercept=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0.5&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;linetype=&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_line&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;SeedDiff&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;ProbLM&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Linear&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_line&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;SeedDiff&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;ProbGAM&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;GAM&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  labs&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Seed Difference&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;y=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Probability of Higher Seed Winning&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Model&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-ZI7n4agC0J8/UXL4fH2dTzI/AAAAAAAAHts/6ia23BR7e7w/s1600/ModelDiffProbs.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-ZI7n4agC0J8/UXL4fH2dTzI/AAAAAAAAHts/6ia23BR7e7w/s1600/ModelDiffProbs.jpeg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;h3&gt;Summary&lt;/h3&gt;Putting all of the estimates together, you can easily spot the differences between the models. The two assumptions that just used the data between specific seeds look pretty similar. It looks like using score differential is a little more reasonable of the two. The two GAMs have a similar trend and so did the&amp;nbsp; linear and logistic models. If someone asks you what the probability that a 16 seed beats a 1 seed, you have at least 6 different answers.&lt;br /&gt;&lt;br /&gt;This post highlights the many different ways someone can analyze the same data. Simply statistics talked a bit about this in a &lt;a href=&#34;http://simplystatistics.org/2013/04/19/podcast-7-reinhart-rogoff-reproducibility/&#34;&gt;recent podcast&lt;/a&gt;. In this case, the differences are not huge, but there are noticeable changes. So the next time you read about an analysis that someone did, keep in mind all the decisions that they had to make and what type a sensitivity they would have on the results.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;logit.seed=&lt;a href=&#34;http://inside-r.org/r-doc/stats/glm&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;glm&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;HigherSeedWon~&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;+SeedDiff&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/utils/data&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data&lt;/span&gt;&lt;/a&gt;=brackets&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/family&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;family&lt;/span&gt;&lt;/a&gt;=&lt;a href=&#34;http://inside-r.org/r-doc/stats/binomial&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;binomial&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/boot/logit&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;logit&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;logit.seed.gam=&lt;a href=&#34;http://inside-r.org/r-doc/mgcv/gam&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;gam&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;HigherSeedWon~&lt;a href=&#34;http://inside-r.org/r-doc/mgcv/s&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;s&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;SeedDiff&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/utils/data&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data&lt;/span&gt;&lt;/a&gt;=brackets&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/family&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;family&lt;/span&gt;&lt;/a&gt;=&lt;a href=&#34;http://inside-r.org/r-doc/stats/binomial&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;binomial&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/boot/logit&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;logit&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;df2=&lt;a href=&#34;http://inside-r.org/r-doc/base/data.frame&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data.frame&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;SeedDiff=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color: #cc66cc;&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;br /&gt;               ProbLM=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;-&lt;a href=&#34;http://inside-r.org/r-doc/stats/pnorm&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;pnorm&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;pred.lm.seed$fit&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/sqrt&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sqrt&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;se.lm^&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;+pred.lm.seed$se.fit^&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;br /&gt;               ProbGAM=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;-&lt;a href=&#34;http://inside-r.org/r-doc/stats/pnorm&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;pnorm&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;pred.gam.seed$fit&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/sqrt&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sqrt&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;se.gam^&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;+pred.gam.seed$se.fit^&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;br /&gt;               ProbLogit=&lt;a href=&#34;http://inside-r.org/r-doc/stats/predict&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;predict&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;logit.seed&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/data.frame&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data.frame&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;SeedDiff=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color: #cc66cc;&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;type=&lt;span style=&#34;color: blue;&#34;&gt;&#34;response&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;br /&gt;               ProbLogitGAM=&lt;a href=&#34;http://inside-r.org/r-doc/stats/predict&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;predict&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;logit.seed.gam&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/data.frame&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data.frame&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;SeedDiff=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color: #cc66cc;&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;type=&lt;span style=&#34;color: blue;&#34;&gt;&#34;response&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;df2=&lt;a href=&#34;http://inside-r.org/r-doc/base/merge&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;merge&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;df2&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/data.frame&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data.frame&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;SeedDiff=seed.diffs&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;ProbFreq=win.pct&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;all.x=T&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;df2=&lt;a href=&#34;http://inside-r.org/r-doc/base/merge&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;merge&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;df2&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/data.frame&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data.frame&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;SeedDiff=seed.diffs&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;ProbScore=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;-&lt;a href=&#34;http://inside-r.org/r-doc/stats/pnorm&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;pnorm&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;means&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;sds&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;all.x=T&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot&#34;&gt;ggplot&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;df2&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;SeedDiff&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_hline&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;yintercept=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0.5&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;linetype=&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_line&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;y=ProbLM&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Linear&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_line&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;y=ProbGAM&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;GAM&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_line&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;y=ProbLogit&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Logistic&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_line&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;y=ProbLogitGAM&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Logistic GAM&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_line&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;y=ProbFreq&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Frequencies&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_line&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;y=ProbScore&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Score Diff&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_point&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;y=ProbFreq&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Frequencies&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_point&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;y=ProbScore&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Score Diff&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  labs&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Seed Difference&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;y=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Probability of Higher Seed Winning&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Model&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot&#34;&gt;ggplot&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;df2&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_hline&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;yintercept=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0.5&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;linetype=&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  geom_point&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x=SeedDiff&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;y=ProbFreq&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;colour=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Frequencies&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-hLA30tdetII/UXL4fBT844I/AAAAAAAAHtw/hZiyPKG1o_g/s1600/AllProbs.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://1.bp.blogspot.com/-hLA30tdetII/UXL4fBT844I/AAAAAAAAHtw/hZiyPKG1o_g/s1600/AllProbs.jpeg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;i&gt;Note that the GAM functions did not have a way to easily restrict the win probability be equal to exactly 0.5 when the seed difference is 0. That is why you may notice the GAM model is a bit above 0.5 at 0.&lt;/i&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Easily Access Academic Journals Off Campus with a Firefox Bookmark</title>
      <link>/2013/04/18/easily-access-academic-journals-off-campus-with-a-firefox-bookmark/</link>
      <pubDate>Thu, 18 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/04/18/easily-access-academic-journals-off-campus-with-a-firefox-bookmark/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
As a grad student, I do lots of searches for research related to my own. When I am off campus, a lot of the relevant results are not open access. In that case, I have to log onto my school&#39;s library website and search for the journal or article there. It is quite a hassle. Luckily, I recently noticed that the website is predictably modified after I log into the library. I go to Ohio State University, and before and after logging in the websites will be &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;http://www.jstor.org/...&lt;/span&gt; and &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;http://www.jstor.org.proxy.lib.ohio-state.edu/...&lt;/span&gt;, for example. It doesn&#39;t matter which journal or website I am looking at. If OSU has access, it will show up with &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;.proxy.lib.ohio-state.edu&lt;/span&gt; after the .com/.org/etc. &lt;br /&gt;&lt;br /&gt;So I was able to save myself a few steps by typing that in instead of going through the library&#39;s website. I should also be sure to note that typing this in brings you to an OSU log in screen. Only those with valid access can use this shortcut, but I assume other schools have the same setup.&lt;br /&gt;&lt;br /&gt;This is still more busy work than I would like, so I searched for ways to automatically do this. &lt;a href=&#34;http://lifehacker.com/5731656/how-to-perform-nearly-any-task-from-your-browsers-address-bar&#34;&gt;Lifehacker&lt;/a&gt; has some address bar shortcuts, but nothing that quite works. I came across a&amp;nbsp; Firefox add-on called &lt;a href=&#34;https://addons.mozilla.org/en-us/firefox/addon/url-swap/&#34;&gt;URL Swap&lt;/a&gt; that seems like it could do the trick. However, when setting it up, I happened to find &lt;a href=&#34;http://stackoverflow.com/questions/13212976/automatically-modify-url-in-firefox&#34;&gt;this post&lt;/a&gt; on Stack Overflow. The second answer has exactly what I am looking for, changing &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;.ExtraPart&lt;/span&gt; to &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;.proxy.lib.ohio-state.edu&lt;/span&gt;. &lt;br /&gt;&lt;br /&gt;I created a bookmark on my bookmarks toolbar with the javascript:&lt;br /&gt;&lt;blockquote class=&#34;tr_bq&#34;&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;javascript:(function(){ var curloc = window.location.toString(); var newloc = curloc.substring(0, curloc.indexOf(&amp;#34;/&amp;#34;, 8)) + &amp;#34;.proxy.lib.ohio-state.edu&amp;#34; + curloc.substring(curloc.indexOf(&amp;#34;/&amp;#34;, 8)); location.href=newloc; })()&lt;/span&gt;&lt;/blockquote&gt;&lt;br /&gt;and it works perfectly. This trick is so useful I wanted to share it to save others some time.&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Copying Data from Excel to R and Back</title>
      <link>/2013/02/24/copying-data-from-excel-to-r-and-back/</link>
      <pubDate>Sun, 24 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/02/24/copying-data-from-excel-to-r-and-back/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
A lot of times we are given a data set in Excel format and we want to run a quick analysis using R&#39;s functionality to look at advanced statistics or make better visualizations. There are packages for importing/exporting data from/to Excel, but I have found them to be hard to work with or only work with old versions of Excel (*.xls, not *.xlsx). So for a one time analysis, I usually save the file as a csv and import it into R.&lt;br /&gt;&lt;br /&gt;This can be a little burdensome if you are trying to do something quick and creates a file that needs to be cleaned up later. An easier option is to copy and paste the data directly into R. This can be done by using &#34;clipboard&#34; as the file and specifying that it is tab delimited, since that is how Excel&#39;s clipboard stores the data.&lt;br /&gt;&lt;br /&gt;For example, say you have a table in excel you want to copy into R. First, copy it in Excel.&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-qPkCaCo_zWw/USpK8GLtKsI/AAAAAAAAHq0/9LrZwb05LVg/s1600/Capture.PNG&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://1.bp.blogspot.com/-qPkCaCo_zWw/USpK8GLtKsI/AAAAAAAAHq0/9LrZwb05LVg/s1600/Capture.PNG&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;br /&gt;Then go into R and use this function.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;read.excel &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;header=&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;TRUE&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;...&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;a href=&#34;http://inside-r.org/r-doc/utils/read.table&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;read.table&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;clipboard&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;sep=&lt;span style=&#34;color: blue;&#34;&gt;&#34;&lt;span style=&#34;color: #000099; font-weight: bold;&#34;&gt;\t&lt;/span&gt;&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;header=header&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;...&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;dat=read.excel&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;br /&gt;This function specifies that you are reading data from the clipboard, that it is tab delimited, and that it has a header.&lt;br /&gt;&lt;br /&gt;Similarly, you can copy from R to Excel using the same logic. Here I also make &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;row.name=FALSE&lt;/span&gt; as default since I rarely have meaningful row names and they mess up the header alignment.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;write.excel &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/row.names&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;row.names&lt;/span&gt;&lt;/a&gt;=&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;FALSE&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;col.names=&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;TRUE&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;...&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;a href=&#34;http://inside-r.org/r-doc/utils/write.table&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;write.table&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;clipboard&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;sep=&lt;span style=&#34;color: blue;&#34;&gt;&#34;&lt;span style=&#34;color: #000099; font-weight: bold;&#34;&gt;\t&lt;/span&gt;&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/row.names&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;row.names&lt;/span&gt;&lt;/a&gt;=&lt;a href=&#34;http://inside-r.org/r-doc/base/row.names&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;row.names&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;col.names=col.names&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;...&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;write.excel&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;dat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;These functions can be added to you .RProfile so that they are always ready for a quick analysis!&lt;br /&gt;&lt;br /&gt;Obviously, this technique does not encourage reproducible research. It is meant to be used for quick, ad hoc analysis and plotting; not something you would use for an analysis that needs to be done on a regular basis.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;
&lt;h2&gt;Comments&lt;/h2&gt;
&lt;div class=&#39;comments&#39;&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Justin Tapp&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
I&amp;#39;m using this function in R for Windows. When I view the data numerically, it&amp;#39;s fine. But when I go to plot the data I get nonsense. How to describe it...the window has 0 to 250 on the x-axis (regardless of my data series) and white boxes across the middle. &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Marek Sz&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
I create similar functions and got few tips. For reading from excel following settings can be useful:&lt;br /&gt;na.strings = &amp;quot;&amp;quot; # to prevent replacing NA string to missing value&lt;br /&gt;comment.char = &amp;quot;&amp;quot; # to not loose everything after # sign&lt;br /&gt;quote = &amp;quot;&amp;quot; # or &amp;#39; or &amp;quot; could mess with data&lt;br /&gt;check.names = FALSE # if you want column names as in excel (spaces, special characters, etc.). You need to use `column name` in R to reference such columns.&lt;br /&gt;&lt;br /&gt;For writing na=&amp;quot;&amp;quot; replace missing values by empty string and not &amp;quot;NA&amp;quot; as on default.&lt;br /&gt;&lt;br /&gt;Second thing is that you can increase size of clipboard by using e.g. &amp;quot;clipboard-10240&amp;quot; instead of &amp;quot;clipboard&amp;quot; (it&amp;#39;s a size in Kb, so it&amp;#39;s around 10Mb; see help for connection, section Clipboard) which allow to copy and paste larger tables.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Anonymous&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
rkward (http://rkward.sourceforge.net/) has a very nifty feature (Edit -&amp;gt; Paste Special...), that allows you to paste the copied data directly into your R source code, already formatted as a single string, vector or matrix. &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;William Yarberry&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Excellent article.  Real people are always busy and this is just the kind of article that helps us all.  I have been doing scan() but when you start entering a few thousand rows that way, it gets a bit slow.  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Anonymous&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
scan() allows you to just paste...&lt;br /&gt;&lt;br /&gt;y &amp;lt;- scan()&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Anonymous&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Thank you for these!!&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Anonymous&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Thank you for the tip, this will help me a lot.&lt;br /&gt;Also, it seems that, libreOffice also uses clipboard to store copied things. This function also works for libreOffice&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Anonymous&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
I can&amp;#39;t resist: you could just use&lt;br /&gt;read.delim(&amp;quot;clipboard&amp;quot;)&lt;br /&gt;&lt;br /&gt;(The &amp;quot;clipboard&amp;quot; parameter is &amp;#39;doze only for the foreseeable future)&lt;br /&gt;&lt;br /&gt;From &amp;quot;?read.delim&amp;quot;&lt;br /&gt;read.delim(file, header = TRUE, sep = &amp;quot;\t&amp;quot;, quote=&amp;quot;\&amp;quot;&amp;quot;, dec=&amp;quot;.&amp;quot;,&lt;br /&gt;           fill = TRUE, comment.char=&amp;quot;&amp;quot;, ...)&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Anonymous&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Thank you very much Tony for your quick answer (on a  Sunday afternoon!!). &lt;br /&gt;&lt;br /&gt;Ernesto&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Tony Hirst&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
@Ernesto It seems that on a Mac, you can use pbpaste ( http://stackoverflow.com/questions/9035674/r-function-to-copy-to-clipboard-on-mac-osx )&lt;br /&gt;&lt;br /&gt;read.clipboard.mac &amp;lt;- function(header=TRUE,...) {&lt;br /&gt;  read.table(pipe(&amp;quot;pbpaste&amp;quot;),sep=&amp;quot;\t&amp;quot;,header=header,...)&lt;br /&gt;}&lt;br /&gt; &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Anonymous&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Thank you very much. Very useful. I work in both Windows and Mac Environments. The trick you show seems to work only in Windows. Any idea what to do in Mac? Thanks in advance,&lt;br /&gt;&lt;br /&gt;Ernesto&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Text Decryption Using MCMC</title>
      <link>/2013/01/23/text-decryption-using-mcmc/</link>
      <pubDate>Wed, 23 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/01/23/text-decryption-using-mcmc/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
The famous probabilist and statistician Persi Diaconis wrote an article not too long ago about the &#34;&lt;a href=&#34;http://math.uchicago.edu/~shmuel/Network-course-readings/MCMCRev.pdf&#34; target=&#34;_blank&#34;&gt;Markov chain Monte Carlo (MCMC) Revolution&lt;/a&gt;.&#34; The paper describes how we are able to solve a diverse set of problems with MCMC. The first example he gives is a text decryption problem solved with a simple Metropolis Hastings sampler.&lt;br /&gt;&lt;br /&gt;I was always stumped by those &lt;a href=&#34;https://en.wikipedia.org/wiki/Cryptogram&#34; target=&#34;_blank&#34;&gt;cryptograms&lt;/a&gt; in the newspaper and thought it would be pretty cool if I could crack them with statistics. So I decided to try it out on my own. The example Diaconis gives is fleshed out in more details by its original authors in its own &lt;a href=&#34;http://probability.ca/jeff/ftpdir/decipherart.pdf&#34; target=&#34;_blank&#34;&gt;article&lt;/a&gt;. &lt;br /&gt;&lt;br /&gt;The decryption I will be attempting is called &lt;a href=&#34;https://en.wikipedia.org/wiki/Substitution_cipher&#34; target=&#34;_blank&#34;&gt;substitution cipher&lt;/a&gt;, where each letter of the alphabet corresponds to another letter (possibly the same one). This is the rule that you must follow for the cryptogram game too. There are 26! = 4e26 possible mappings of the letters of the alphabet to one another. This seems like a hopeless problem to solve, but I will show you that a relatively simple solution can be found as long as your reference text is large enough and the text you are trying to decipher is also large enough.&lt;br /&gt;&lt;br /&gt;The strategy is to use a reference text to create transition probabilities from each letter to the next. This can be stored in a 26 by 26 matrix, where the ith row and jth column is the probability of the jth letter, given the ith letter preceded it. For example, the given the previous letter was a Q, U almost always follows it, so the Q-row and U-column would be close to probability of 1. Assuming these one step transition probabilities are what matter, the likelihood of any mapping is the product of the transition probabilities observed.&lt;br /&gt;&lt;br /&gt;To create a transition matrix, I downloaded &lt;i&gt;War and Peace &lt;/i&gt;from &lt;a href=&#34;http://www.gutenberg.org/dirs/2/6/0/2600/2600.txt&#34; target=&#34;_blank&#34;&gt;Project Gutenberg&lt;/a&gt;. I looped through each letter and kept track of the number of number of times each letter followed the previous. I also kept track of a 27th character, which was anything that was not a letter -- for example periods, commas, spaces, etc. This lets me know which letters are more likely to start a word or end a word. Consecutive entries of these special characters are not considered.&lt;br /&gt;&lt;br /&gt;After I have these counts, I normalize by dividing by the row total. Before normalizing, I add 1 to each cell so that there are no probabilities of 0. This also corresponds to prior information of each transition being equally likely. I could have tried to give more informative prior information (like Q to U being likely), but it would have been difficult and probably inaccurate for the whole matrix.&lt;br /&gt;&lt;br /&gt;Below is the code for creating the transition probability matrix. Note that I loop through each line and within each line I loop through each character.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;reference=&lt;a href=&#34;http://inside-r.org/r-doc/base/readLines&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;readLines&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;warandpeace.txt&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;reference=&lt;a href=&#34;http://inside-r.org/r-doc/base/toupper&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;toupper&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;reference&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;trans.mat=&lt;a href=&#34;http://inside-r.org/r-doc/base/matrix&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;matrix&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/rownames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rownames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;=&lt;a href=&#34;http://inside-r.org/r-doc/base/colnames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;colnames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;=&lt;a href=&#34;http://inside-r.org/r-doc/base/c&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;c&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/toupper&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;toupper&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;letters&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;lastletter=&lt;span style=&#34;color: blue;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;ln &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;:&lt;a href=&#34;http://inside-r.org/r-doc/base/length&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;length&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;reference&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;ln %% &lt;span style=&#34;color: #cc66cc;&#34;&gt;1000&lt;/span&gt; ==&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/cat&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;cat&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;Line&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;ln&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;&lt;span style=&#34;color: #000099; font-weight: bold;&#34;&gt;\n&lt;/span&gt;&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;pos &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;:&lt;a href=&#34;http://inside-r.org/r-doc/base/nchar&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;nchar&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;reference&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;ln&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;    curletter=&lt;a href=&#34;http://inside-r.org/r-doc/base/substring&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;substring&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;reference&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;ln&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;pos&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;pos&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;curletter %in% &lt;a href=&#34;http://inside-r.org/r-doc/base/toupper&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;toupper&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;letters&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;      trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/rownames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rownames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;==lastletter&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;br /&gt;                &lt;a href=&#34;http://inside-r.org/r-doc/base/colnames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;colnames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;==curletter&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;=&lt;br /&gt;        trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/rownames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rownames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;==lastletter&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;br /&gt;                  &lt;a href=&#34;http://inside-r.org/r-doc/base/colnames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;colnames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;==curletter&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;+&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;br /&gt;      lastletter=curletter&lt;br /&gt;    &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;lastletter!=&lt;span style=&#34;color: blue;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;        trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/rownames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rownames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;==lastletter&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;=&lt;br /&gt;          trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/rownames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rownames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;==lastletter&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;+&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;br /&gt;        lastletter=&lt;span style=&#34;color: blue;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;br /&gt;      &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;  curletter=&lt;span style=&#34;color: blue;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;lastletter!=&lt;span style=&#34;color: blue;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;    trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/rownames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rownames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;==lastletter&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;=&lt;br /&gt;      trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/rownames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rownames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;==lastletter&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;+&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;  lastletter=&lt;span style=&#34;color: blue;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;trans.prob.mat=&lt;a href=&#34;http://inside-r.org/r-doc/base/sweep&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sweep&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.mat+&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/rowSums&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rowSums&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.mat+&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;FUN=&lt;span style=&#34;color: blue;&#34;&gt;&#34;/&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;I like to visualize my data to make sure everything looks correct. Below is a plot of the transition matrix.&amp;nbsp; The blank space corresponds to non-letter character. A lot of insights can be garnered from this plot. The Q-U relationship pops out. T is the most likely letter to start a word. E is a popular letter to follow many others. Y is likely to end a word.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot&#34;&gt;ggplot&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;melt&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.prob.mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;Var2&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;Var1&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_tile&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;fill=value&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  scale_fill_gradient&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;low=&lt;span style=&#34;color: blue;&#34;&gt;&#34;white&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;high=&lt;span style=&#34;color: blue;&#34;&gt;&#34;black&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;limits=&lt;a href=&#34;http://inside-r.org/r-doc/base/c&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;c&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  labs&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Probability of Second Letter&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;y=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Conditioning on First Letter&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;fill=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Prob&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  scale_y_discrete&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;limits = &lt;a href=&#34;http://inside-r.org/r-doc/base/rev&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rev&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/levels&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;levels&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;melt&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.prob.mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;$Var1&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  coord_equal&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-rOSjww2Z0q0/UPlrNU1mO2I/AAAAAAAAHqM/NizWxWZ8K88/s1600/trans.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://lh3.ggpht.com/-rOSjww2Z0q0/UPlrNU1mO2I/AAAAAAAAHqM/NizWxWZ8K88/s1600/trans.jpeg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;br /&gt;The desired solution will be the one that gives the highest likelihood. This is an &lt;a href=&#34;https://en.wikipedia.org/wiki/NP-hard&#34; target=&#34;_blank&#34;&gt;NP-hard&lt;/a&gt; problem so the only way to find the solution is to try all 26! combinations of mappings, which is infeasible, and report the one with the highest likelihood.&lt;br /&gt;&lt;br /&gt;With the MCMC approach you start with a random mapping of letters. Next you propose a new mapping by randomly switching 2 of the characters in the mapping. So if A mapped to G and L mapped to Z and you switched those two, A would map to Z and L would map to G. With this new mapping, you measure the likelihood and divide it by the likelihood of the previous mapping. If this ratio is greater than 1, then move to this new mapping. If the ratio is less than 1, meaning the new mapping is less likely, then move to this new mapping with a probability equal to the ratio. (Practically, this is done by drawing a random uniform number between 0 and 1 and moving to the proposed mapping if the uniform number is less than the ratio.) Repeat this process until you think you have found a solution.&lt;br /&gt;&lt;br /&gt;To do this, I first wrote a few functions. One to decode the coded text based on the mapping. The other was to calculate the log likelihood of the decoded text.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;decode &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;mapping&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;coded&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;  coded=&lt;a href=&#34;http://inside-r.org/r-doc/base/toupper&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;toupper&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;coded&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  decoded=coded&lt;br /&gt;  &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;i &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;:&lt;a href=&#34;http://inside-r.org/r-doc/base/nchar&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;nchar&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;coded&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/substring&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;substring&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;coded&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;i&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;i&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; %in% &lt;a href=&#34;http://inside-r.org/r-doc/base/toupper&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;toupper&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;letters&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;a href=&#34;http://inside-r.org/r-doc/base/substring&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;substring&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;decoded&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;i&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;i&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;=&lt;a href=&#34;http://inside-r.org/r-doc/base/toupper&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;toupper&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;letters&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;mapping==&lt;a href=&#34;http://inside-r.org/r-doc/base/substring&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;substring&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;coded&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;i&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;i&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;  decoded&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;log.prob &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;mapping&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;decoded&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;  logprob=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;  lastletter=&lt;span style=&#34;color: blue;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;i &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;:&lt;a href=&#34;http://inside-r.org/r-doc/base/nchar&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;nchar&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;decoded&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;    curletter=&lt;a href=&#34;http://inside-r.org/r-doc/base/substring&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;substring&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;decoded&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;i&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;i&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;curletter %in% &lt;a href=&#34;http://inside-r.org/r-doc/base/toupper&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;toupper&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;letters&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;      logprob=logprob+&lt;a href=&#34;http://inside-r.org/r-doc/base/log&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;log&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.prob.mat&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/rownames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rownames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;==lastletter&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;br /&gt;                                         &lt;a href=&#34;http://inside-r.org/r-doc/base/colnames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;colnames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;==curletter&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;      lastletter=curletter&lt;br /&gt;    &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;lastletter!=&lt;span style=&#34;color: blue;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;        logprob=logprob+&lt;a href=&#34;http://inside-r.org/r-doc/base/log&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;log&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.prob.mat&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/rownames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rownames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;==lastletter&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;        lastletter=&lt;span style=&#34;color: blue;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;br /&gt;      &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;  &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;lastletter!=&lt;span style=&#34;color: blue;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;    logprob=logprob+&lt;a href=&#34;http://inside-r.org/r-doc/base/log&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;log&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.prob.mat&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/rownames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rownames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;trans.mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;==lastletter&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;    lastletter=&lt;span style=&#34;color: blue;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;  logprob&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;To show how this works, I will use the same Shakespeare text that is used in the MCMC Revolution paper. I let it run until it tries out 2000 different mappings (not the same as 2000 iterations, because rejected proposals are not counted). Along the way I am keeping track of the most likely mapping visited, and that will be the final estimate. It should be noted that I am only considering the mapping of letters and it is assumed that the special characters are known. For example spaces and periods are assumed to be the same.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;correctTxt=&lt;span style=&#34;color: blue;&#34;&gt;&#34;ENTER HAMLET HAM TO BE OR NOT TO BE THAT IS THE QUESTION WHETHER TIS NOBLER IN THE MIND TO SUFFER THE SLINGS AND ARROWS OF OUTRAGEOUS FORTUNE OR TO TAKE ARMS AGAINST A SEA OF TROUBLES AND BY OPPOSING END&#34;&lt;/span&gt;&lt;br /&gt;coded=decode&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/sample&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sample&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/toupper&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;toupper&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;letters&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;correctTxt&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;# randomly scramble the text&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;mapping=&lt;a href=&#34;http://inside-r.org/r-doc/base/sample&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sample&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/toupper&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;toupper&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;letters&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;# initialize a random mapping&lt;/span&gt;&lt;br /&gt;i=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;br /&gt;iters=&lt;span style=&#34;color: #cc66cc;&#34;&gt;2000&lt;/span&gt;&lt;br /&gt;cur.decode=decode&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;mapping&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;coded&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;cur.loglike=log.prob&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;mapping&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;cur.decode&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;max.loglike=cur.loglike&lt;br /&gt;max.decode=cur.decode&lt;br /&gt;&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;i&amp;lt;=iters&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;  proposal=&lt;a href=&#34;http://inside-r.org/r-doc/base/sample&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sample&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color: #cc66cc;&#34;&gt;26&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;# select 2 letters to switch&lt;/span&gt;&lt;br /&gt;  prop.mapping=mapping&lt;br /&gt;  prop.mapping&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;proposal&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;=mapping&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;proposal&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;br /&gt;  prop.mapping&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;proposal&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;=mapping&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;proposal&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;  prop.decode=decode&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;prop.mapping&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;coded&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  prop.loglike=log.prob&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;prop.mapping&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;prop.decode&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;  &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/runif&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;runif&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&amp;lt;exp&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;prop.loglike-cur.loglike&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;    mapping=prop.mapping&lt;br /&gt;    cur.decode=prop.decode&lt;br /&gt;    cur.loglike=prop.loglike&lt;br /&gt;&amp;nbsp;&lt;br /&gt;    &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;cur.loglike&amp;gt;max.loglike&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;      max.loglike=cur.loglike&lt;br /&gt;      max.decode=cur.decode&lt;br /&gt;    &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;    &lt;a href=&#34;http://inside-r.org/r-doc/base/cat&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;cat&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;i&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;cur.decode&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;&lt;span style=&#34;color: #000099; font-weight: bold;&#34;&gt;\n&lt;/span&gt;&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;    i=i+&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;The output of this example is below. You can see that it comes close but it doesn&#39;t quite find the correct mapping. I attribute this to the fact that the text I was trying to decode only had 203 characters. In the paper mentioned above, they decoded the whole play. They further say that their methods work just as well if you randomly sample a text snippet 2000 characters long. Obviously my example had well less than this. This is also a problem in trying to solve a cryptogram because those are even smaller than the Hamlet example I used. So unfortunately this simple method cannot be used for that. (Note that I ran the MCMC chain a several times, using different random starting points, until it came reasonably close to the solution. This is something that the authors also suggested doing.)&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-DABUm0zHOa4/UPmFEVqbsWI/AAAAAAAAHqc/UgIi3nx4VTk/s1600/Iters.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://lh3.ggpht.com/-DABUm0zHOa4/UPmFEVqbsWI/AAAAAAAAHqc/UgIi3nx4VTk/s1600/Iters.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;I want to also note that I originally used Alice and Wonderland as the reference text. It had more trouble decoding since this book is much smaller than War and Peace, and therefore the transition probabilities were not as good.&lt;br /&gt;&lt;br /&gt;The MCMC method is a greedy approach in that you are moving to any mapping that increases the likelihood. Greedy methods are not optimal in general because they can get stuck at local modes, especially in high dimensional problems. MCMC avoids this be moving to less likely mappings with some probability, which ensures that it will find the correct solution with enough time.&lt;/div&gt;
&lt;h2&gt;Comments&lt;/h2&gt;
&lt;div class=&#39;comments&#39;&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Vivek&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Andrew,&lt;br /&gt;&lt;br /&gt;This work is cool!&lt;br /&gt;&lt;br /&gt;I wrote my own substitution cipher decoder using the algorithm described in Stephen Connor&amp;#39;s dissertation as the basis, but I occasionally glanced at your work as well.&lt;br /&gt;&lt;br /&gt;My code doesn&amp;#39;t work as awesomely as yours, and it is also much slower (possibly because I use 76 versus the 27 characters, reachChar versus readLine), and I use different functions.&lt;br /&gt;&lt;br /&gt;But I cited your work and copied your idea for the melt matrix, which is ingenious.&lt;br /&gt;&lt;br /&gt;Thanks so much!&lt;br /&gt;&lt;br /&gt;Vivek&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Andrew Landgraf&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Thanks, Fernando. I knew I could speed it up by treating it as a vector of letters (or integers), but didn&amp;#39;t take the time to figure it out.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Fernando&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Nice work, but the code to get the transition matrix is VERY slow. I manage to make it faster doing the following:&lt;br /&gt;1- get the vector of words (using scan() for example).&lt;br /&gt;2- For each word, use strsplit(word, NULL)[[1]] and iterate&lt;br /&gt;over the characters to populate the matrix.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Andrew&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
I have had that issue working on different computers. I think older versions of reshape2 use X# and newer versions use Var#. Or maybe it&amp;#39;s a difference between using the package reshape and reshape2?&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Pablik&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Great work! Sometimes I use Persi&amp;#39;s example for teaching MCMC,&lt;br /&gt;there are some old matlab code from the original consultancy work,&lt;br /&gt;but I never tryed to replicate the example.&lt;br /&gt;&lt;br /&gt;I got an error at:&lt;br /&gt;ggplot(melt(trans.prob.mat),aes(Var2,Var1))+...&lt;br /&gt;&lt;br /&gt;the melt() function uses X1 and X2:&lt;br /&gt;&amp;gt; tmp &amp;lt;- melt(trans.prob.mat)&lt;br /&gt;&amp;gt; head(tmp)&lt;br /&gt;  X1 X2        value&lt;br /&gt;1  A  A 3.893588e-05&lt;br /&gt;2  B  A 9.252956e-02&lt;br /&gt;...&lt;br /&gt;Cheers,&lt;br /&gt;&lt;br /&gt;Pablo&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Restricted Boltzmann Machines in R</title>
      <link>/2013/01/14/restricted-boltzmann-machines-in-r/</link>
      <pubDate>Mon, 14 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/01/14/restricted-boltzmann-machines-in-r/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
&lt;a href=&#34;http://en.wikipedia.org/wiki/Boltzmann_machine#Restricted_Boltzmann_machine&#34;&gt;Restricted Boltzmann Machines&lt;/a&gt; (RBMs) are an unsupervised learning method (like principal components).  An RBM is a probabilistic and undirected graphical model. They are  becoming more popular in machine learning due to recent success in  training them with &lt;a href=&#34;http://deeplearning.net/tutorial/rbm.html#contrastive-divergence-cd-k&#34;&gt;contrastive divergence&lt;/a&gt;. They have been proven useful in collaborative filtering, being one of the most successful methods in the Netflix challenge (&lt;a href=&#34;http://www.machinelearning.org/proceedings/icml2007/papers/407.pdf&#34;&gt;paper&lt;/a&gt;). Furthermore, they have been tantamount to training &lt;a href=&#34;http://www.nytimes.com/2012/11/24/science/scientists-see-advances-in-deep-learning-a-part-of-artificial-intelligence.html&#34;&gt;deep learning&lt;/a&gt; models, which appear to be the best current models for image and digit recognition.&lt;br /&gt;&lt;br /&gt;I do not want to go into too much detail, but I would like to give a high level overview of RBMs. &lt;a href=&#34;http://blog.echen.me/2011/07/18/introduction-to-restricted-boltzmann-machines/&#34;&gt;Edwin Chen&lt;/a&gt; has an introduction that is much better. The usual version of an RBM is  a probabilistic model for binary vectors. An image can be represented  as a binary vector if each pixel that is dark enough is represented as a  1 and the non-dark pixels are 0&#39;s. In addition to the visible binary  vector, it is assumed that there is a hidden binary vector, and each  element of the hidden unit is connected to each unit of the visible unit  by symmetric weights. The weights are represented by the matrix &lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-1-Frame&#34; role=&#34;textbox&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-1&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 1.042em;&#34;&gt;&lt;span style=&#34;clip: rect(1.775em, 1000em, 2.897em, -0.574em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-2&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-3&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;W&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.104em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 1.013em; overflow: hidden; vertical-align: -0.11em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt;, where the &lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-2-Frame&#34; role=&#34;textbox&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-4&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 1.944em;&#34;&gt;&lt;span style=&#34;clip: rect(1.719em, 1000em, 3.218em, -0.604em); left: 0em; position: absolute; top: -2.806em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-5&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-6&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-7&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;msubsup&#34; id=&#34;MathJax-Span-8&#34; style=&#34;padding-left: 0.167em;&#34;&gt;&lt;span style=&#34;display: inline-block; height: 0px; position: relative; width: 1.186em;&#34;&gt;&lt;span style=&#34;clip: rect(1.797em, 1000em, 3.079em, -0.637em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-9&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;j&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;left: 0.417em; position: absolute; top: -2.569em;&#34;&gt;&lt;span class=&#34;texatom&#34; id=&#34;MathJax-Span-10&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-11&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-12&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-13&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;h&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.181em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.806em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 1.466em; overflow: hidden; vertical-align: -0.328em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt; component is the weight between hidden unit &lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-3-Frame&#34; role=&#34;textbox&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-14&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 0.347em;&#34;&gt;&lt;span style=&#34;clip: rect(1.797em, 1000em, 2.886em, -0.604em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-15&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-16&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 0.973em; overflow: hidden; vertical-align: -0.097em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt; and visible unit &lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-4-Frame&#34; role=&#34;textbox&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-17&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 0.417em;&#34;&gt;&lt;span style=&#34;clip: rect(1.797em, 1000em, 3.079em, -0.637em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-18&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-19&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;j&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 1.205em; overflow: hidden; vertical-align: -0.328em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt;.  It is important that there are no connections between hidden units or  between visible units. The probability that visible unit &lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-5-Frame&#34; role=&#34;textbox&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-20&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 0.417em;&#34;&gt;&lt;span style=&#34;clip: rect(1.797em, 1000em, 3.079em, -0.637em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-21&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-22&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;j&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 1.205em; overflow: hidden; vertical-align: -0.328em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt; is 1 is the inverse logistic function of the sum of the weights connected to visible unit &lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-6-Frame&#34; role=&#34;textbox&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-23&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 0.417em;&#34;&gt;&lt;span style=&#34;clip: rect(1.797em, 1000em, 3.079em, -0.637em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-24&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-25&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;j&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 1.205em; overflow: hidden; vertical-align: -0.328em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt;, in which the hidden units are 1. In math notation (where &lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-7-Frame&#34; role=&#34;textbox&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-26&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 0.556em;&#34;&gt;&lt;span style=&#34;clip: rect(2.027em, 1000em, 2.886em, -0.594em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-27&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-28&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;σ&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.001em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 0.697em; overflow: hidden; vertical-align: -0.097em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt; is the inverse logistic, or sigmoid, function):&lt;br /&gt;&lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;br /&gt;&lt;div class=&#34;MathJax_Display&#34; role=&#34;textbox&#34; style=&#34;text-align: center;&#34;&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-8-Frame&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-29&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 14.306em;&#34;&gt;&lt;span style=&#34;clip: rect(1.647em, 1000em, 4.206em, -0.592em); left: 0em; position: absolute; top: -2.806em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-30&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-31&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;P&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.109em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-32&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-33&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;msubsup&#34; id=&#34;MathJax-Span-34&#34;&gt;&lt;span style=&#34;display: inline-block; height: 0px; position: relative; width: 0.839em;&#34;&gt;&lt;span style=&#34;clip: rect(2.015em, 1000em, 2.886em, -0.604em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-35&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;left: 0.486em; position: absolute; top: -2.031em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-36&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;j&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.181em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-37&#34; style=&#34;font-family: MathJax_Main; padding-left: 0.278em;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mn&#34; id=&#34;MathJax-Span-38&#34; style=&#34;font-family: MathJax_Main; padding-left: 0.278em;&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;texatom&#34; id=&#34;MathJax-Span-39&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-40&#34;&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-41&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-42&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-43&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-44&#34; style=&#34;font-family: MathJax_Math; font-style: italic; padding-left: 0.167em;&#34;&gt;W&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.104em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-45&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-46&#34; style=&#34;font-family: MathJax_Main; padding-left: 0.278em;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-47&#34; style=&#34;font-family: MathJax_Math; font-style: italic; padding-left: 0.278em;&#34;&gt;σ&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.001em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-48&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;munderover&#34; id=&#34;MathJax-Span-49&#34;&gt;&lt;span style=&#34;display: inline-block; height: 0px; position: relative; width: 1.458em;&#34;&gt;&lt;span style=&#34;clip: rect(2.758em, 1000em, 4.575em, -0.57em); left: 0em; position: absolute; top: -3.917em;&#34;&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-50&#34; style=&#34;font-family: MathJax_Size2; vertical-align: 0em;&#34;&gt;∑&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 3.917em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;clip: rect(1.505em, 1000em, 2.497em, -0.61em); left: 0.59em; position: absolute; top: -1.096em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-51&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.181em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;msubsup&#34; id=&#34;MathJax-Span-52&#34; style=&#34;padding-left: 0.167em;&#34;&gt;&lt;span style=&#34;display: inline-block; height: 0px; position: relative; width: 0.908em;&#34;&gt;&lt;span style=&#34;clip: rect(1.764em, 1000em, 2.886em, -0.577em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-53&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;h&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;left: 0.556em; position: absolute; top: -2.031em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-54&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.181em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;msubsup&#34; id=&#34;MathJax-Span-55&#34;&gt;&lt;span style=&#34;display: inline-block; height: 0px; position: relative; width: 1.777em;&#34;&gt;&lt;span style=&#34;clip: rect(1.775em, 1000em, 2.897em, -0.574em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-56&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;W&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.104em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;left: 0.938em; position: absolute; top: -2.169em;&#34;&gt;&lt;span class=&#34;texatom&#34; id=&#34;MathJax-Span-57&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-58&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-59&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-60&#34; style=&#34;font-family: MathJax_Main; font-size: 70.7%;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-61&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;j&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.319em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-62&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-63&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.806em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 2.737em; overflow: hidden; vertical-align: -1.514em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;The weights are symmetric, so&lt;br /&gt;&lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;br /&gt;&lt;div class=&#34;MathJax_Display&#34; role=&#34;textbox&#34; style=&#34;text-align: center;&#34;&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-9-Frame&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-64&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 14.167em;&#34;&gt;&lt;span style=&#34;clip: rect(1.647em, 1000em, 4.342em, -0.592em); left: 0em; position: absolute; top: -2.806em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-65&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-66&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;P&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.109em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-67&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-68&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;msubsup&#34; id=&#34;MathJax-Span-69&#34;&gt;&lt;span style=&#34;display: inline-block; height: 0px; position: relative; width: 0.908em;&#34;&gt;&lt;span style=&#34;clip: rect(1.764em, 1000em, 2.886em, -0.577em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-70&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;h&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;left: 0.556em; position: absolute; top: -2.031em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-71&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.181em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-72&#34; style=&#34;font-family: MathJax_Main; padding-left: 0.278em;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mn&#34; id=&#34;MathJax-Span-73&#34; style=&#34;font-family: MathJax_Main; padding-left: 0.278em;&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;texatom&#34; id=&#34;MathJax-Span-74&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-75&#34;&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-76&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-77&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-78&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-79&#34; style=&#34;font-family: MathJax_Math; font-style: italic; padding-left: 0.167em;&#34;&gt;W&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.104em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-80&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-81&#34; style=&#34;font-family: MathJax_Main; padding-left: 0.278em;&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-82&#34; style=&#34;font-family: MathJax_Math; font-style: italic; padding-left: 0.278em;&#34;&gt;σ&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.001em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-83&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;munderover&#34; id=&#34;MathJax-Span-84&#34;&gt;&lt;span style=&#34;display: inline-block; height: 0px; position: relative; width: 1.458em;&#34;&gt;&lt;span style=&#34;clip: rect(2.758em, 1000em, 4.575em, -0.57em); left: 0em; position: absolute; top: -3.917em;&#34;&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-85&#34; style=&#34;font-family: MathJax_Size2; vertical-align: 0em;&#34;&gt;∑&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 3.917em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;clip: rect(1.505em, 1000em, 2.633em, -0.633em); left: 0.59em; position: absolute; top: -1.096em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-86&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;j&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.181em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;msubsup&#34; id=&#34;MathJax-Span-87&#34; style=&#34;padding-left: 0.167em;&#34;&gt;&lt;span style=&#34;display: inline-block; height: 0px; position: relative; width: 0.839em;&#34;&gt;&lt;span style=&#34;clip: rect(2.015em, 1000em, 2.886em, -0.604em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-88&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;left: 0.486em; position: absolute; top: -2.031em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-89&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;j&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.181em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;msubsup&#34; id=&#34;MathJax-Span-90&#34;&gt;&lt;span style=&#34;display: inline-block; height: 0px; position: relative; width: 1.777em;&#34;&gt;&lt;span style=&#34;clip: rect(1.775em, 1000em, 2.897em, -0.574em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-91&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;W&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.104em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;left: 0.938em; position: absolute; top: -2.169em;&#34;&gt;&lt;span class=&#34;texatom&#34; id=&#34;MathJax-Span-92&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-93&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-94&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-95&#34; style=&#34;font-family: MathJax_Main; font-size: 70.7%;&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-96&#34; style=&#34;font-family: MathJax_Math; font-size: 70.7%; font-style: italic;&#34;&gt;j&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.319em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-97&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-98&#34; style=&#34;font-family: MathJax_Main;&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.806em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 2.901em; overflow: hidden; vertical-align: -1.677em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt;&lt;/div&gt;As you can see, the model is defined by its conditional probabilities. The task is to find the weight matrix &lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-10-Frame&#34; role=&#34;textbox&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-99&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 1.042em;&#34;&gt;&lt;span style=&#34;clip: rect(1.775em, 1000em, 2.897em, -0.574em); left: 0em; position: absolute; top: -2.667em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-100&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-101&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;W&lt;span style=&#34;display: inline-block; height: 1px; overflow: hidden; width: 0.104em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.667em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 1.013em; overflow: hidden; vertical-align: -0.11em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt; that best explains the visible data for a given number of hidden units.&lt;br /&gt;&lt;br /&gt;I have been taking Geoff Hinton&#39;s &lt;a href=&#34;https://class.coursera.org/neuralnets-2012-001/&#34;&gt;coursera course&lt;/a&gt; on neural networks, which I would recommend to anyone interested. One  of the programming assignments was to fill in code to write an RBM in  Matlab/Octave. I have since tried to find a version for R, but have not  had any luck, so I decided to translate the code myself. Below is the  code to calculate the weight matrix. It is fairly simple and I only use  contrastive divergence 1. The input data is &lt;span class=&#34;MathJax_Preview&#34;&gt;&lt;/span&gt;&lt;span class=&#34;MathJax&#34; id=&#34;MathJax-Element-11-Frame&#34; role=&#34;textbox&#34;&gt;&lt;nobr&gt;&lt;span class=&#34;math&#34; id=&#34;MathJax-Span-102&#34;&gt;&lt;span style=&#34;display: inline-block; font-size: 120%; height: 0px; position: relative; width: 2.292em;&#34;&gt;&lt;span style=&#34;clip: rect(2.106em, 1000em, 3.208em, -0.664em); left: 0em; position: absolute; top: -2.806em;&#34;&gt;&lt;span class=&#34;mrow&#34; id=&#34;MathJax-Span-103&#34;&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-104&#34; style=&#34;font-family: MathJax_Math; font-style: italic;&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mo&#34; id=&#34;MathJax-Span-105&#34; style=&#34;font-family: MathJax_Main; padding-left: 0.222em;&#34;&gt;×&lt;/span&gt;&lt;span class=&#34;mi&#34; id=&#34;MathJax-Span-106&#34; style=&#34;font-family: MathJax_Math; font-style: italic; padding-left: 0.222em;&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display: inline-block; height: 2.806em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;border-left: 0em solid; display: inline-block; height: 0.989em; overflow: hidden; vertical-align: -0.316em; width: 0px;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt; instead of the usual transpose.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;# rbm_w is a matrix of size &amp;lt;number of hidden units&amp;gt; by &amp;lt;number of visible units&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;# visible_state is matrix of size &amp;lt;number of visible units&amp;gt; by &amp;lt;number of data cases&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;# hidden_state is a binary matrix of size &amp;lt;number of hidden units&amp;gt; by &amp;lt;number of data cases&amp;gt;&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;visible_state_to_hidden_probabilities &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;rbm_w&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; visible_state&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;/&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;+&lt;a href=&#34;http://inside-r.org/r-doc/base/exp&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;exp&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;-rbm_w %*% visible_state&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;hidden_state_to_visible_probabilities &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;rbm_w&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; hidden_state&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;/&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;+&lt;a href=&#34;http://inside-r.org/r-doc/base/exp&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;exp&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;-&lt;a href=&#34;http://inside-r.org/r-doc/base/t&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;t&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;rbm_w&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; %*% hidden_state&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;configuration_goodness &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;rbm_w&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; visible_state&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; hidden_state&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;  out=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;i &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;:&lt;a href=&#34;http://inside-r.org/r-doc/base/dim&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;dim&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;visible_state&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;    out=out+&lt;a href=&#34;http://inside-r.org/r-doc/base/t&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;t&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;hidden_state&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;i&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; %*% rbm_w %*% visible_state&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;i&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;  out/dim&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;visible_state&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;configuration_goodness_gradient &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;visible_state&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; hidden_state&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;  hidden_state %*% &lt;a href=&#34;http://inside-r.org/r-doc/base/t&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;t&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;visible_state&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;/dim&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;visible_state&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;sample_bernoulli &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;  dims=&lt;a href=&#34;http://inside-r.org/r-doc/base/dim&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;dim&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;a href=&#34;http://inside-r.org/r-doc/base/matrix&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;matrix&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/rbinom&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rbinom&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/prod&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;prod&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;dims&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/prob&#34;&gt;prob&lt;/a&gt;=&lt;a href=&#34;http://inside-r.org/r-doc/base/c&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;c&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;mat&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;dims&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;dims&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;cd1 &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;rbm_w&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; visible_data&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;  visible_data = sample_bernoulli&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;visible_data&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  H0=sample_bernoulli&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;visible_state_to_hidden_probabilities&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;rbm_w&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; visible_data&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  vh0=configuration_goodness_gradient&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;visible_data&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; H0&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  V1=sample_bernoulli&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;hidden_state_to_visible_probabilities&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;rbm_w&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; H0&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  H1=visible_state_to_hidden_probabilities&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;rbm_w&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; V1&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  vh1=configuration_goodness_gradient&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;V1&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; H1&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  vh0-vh1&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;rbm &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;num_hidden&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; training_data&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; learning_rate&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; n_iterations&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; mini_batch_size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; momentum=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0.9&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; quiet=&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;FALSE&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;#   This trains a model that&#39;s defined by a single matrix of weights.&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;#   &amp;lt;num_hidden&amp;gt; is the number of hidden units&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;#   cd1 is a function that takes parameters &amp;lt;model&amp;gt; and &amp;lt;data&amp;gt; and returns the gradient (or approximate gradient in the case of CD-1) of the function that we&#39;re maximizing. Note the contrast with the loss function that we saw in PA3, which we were minimizing. The returned gradient is an array of the same shape as the provided &amp;lt;model&amp;gt; parameter.&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;#   This uses mini-batches no weight decay and no early stopping.&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;#   This returns the matrix of weights of the trained model.&lt;/span&gt;&lt;br /&gt;  n=&lt;a href=&#34;http://inside-r.org/r-doc/base/dim&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;dim&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;training_data&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;br /&gt;  p=&lt;a href=&#34;http://inside-r.org/r-doc/base/dim&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;dim&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;training_data&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;n %% mini_batch_size != &lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;a href=&#34;http://inside-r.org/r-doc/base/stop&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;stop&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;the number of test cases must be divisable by the mini_batch_size&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;  model = &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/matrix&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;matrix&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/runif&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;runif&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;num_hidden*p&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;num_hidden&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;p&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; * &lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt; - &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; * &lt;span style=&#34;color: #cc66cc;&#34;&gt;0.1&lt;/span&gt;&lt;br /&gt;  momentum_speed = &lt;a href=&#34;http://inside-r.org/r-doc/base/matrix&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;matrix&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;num_hidden&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;p&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;  start_of_next_mini_batch = &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;iteration_number &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;:n_iterations&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;!quiet&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/cat&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;cat&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;Iter&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;iteration_number&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;&lt;span style=&#34;color: #000099; font-weight: bold;&#34;&gt;\n&lt;/span&gt;&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;    mini_batch = training_data&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; start_of_next_mini_batch:&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;start_of_next_mini_batch + mini_batch_size - &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;br /&gt;    start_of_next_mini_batch = &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;start_of_next_mini_batch + mini_batch_size&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; %% n&lt;br /&gt;    gradient = cd1&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;model&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; mini_batch&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;    momentum_speed = momentum * momentum_speed + gradient&lt;br /&gt;    model = model + momentum_speed * learning_rate&lt;br /&gt;  &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;a href=&#34;http://inside-r.org/r-doc/base/return&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;return&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;model&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;I loaded the hand written digit data that was given in the class. To train the RBM, use the syntax below.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/weights&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;weights&lt;/span&gt;&lt;/a&gt;=rbm&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;num_hidden=&lt;span style=&#34;color: #cc66cc;&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; training_data=train&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; learning_rate=&lt;span style=&#34;color: #cc66cc;&#34;&gt;.09&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; n_iterations=&lt;span style=&#34;color: #cc66cc;&#34;&gt;5000&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;br /&gt;            mini_batch_size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; momentum=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0.9&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;After training the weights, I can visualize them. Below is a plot of  strength of the weights going to each pixel. Each facet displays the  weights going to/coming from one of the hidden units. I trained 30 units  so that it would be easy to show them all on one plot. You can see that  most of the hidden units correspond strongly to one digit or another. I  think this means it is finding the joint structure of all of the pixels  and that pixels representing those numbers are darkened together often.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/library&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;library&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot2&#34;&gt;ggplot2&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/library&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;library&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;reshape2&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;mw=melt&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/weights&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;weights&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; mw$Var3=&lt;a href=&#34;http://inside-r.org/r-doc/base/floor&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;floor&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;mw$Var2-&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;/&lt;span style=&#34;color: #cc66cc;&#34;&gt;16&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; mw$Var2=&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;mw$Var2-&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;%%16 + &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; mw$Var3=&lt;span style=&#34;color: #cc66cc;&#34;&gt;17&lt;/span&gt;-mw$Var3&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot&#34;&gt;ggplot&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/utils/data&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data&lt;/span&gt;&lt;/a&gt;=mw&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_tile&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;Var2&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;Var3&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;fill=value&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+facet_wrap&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;~Var1&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/nrow&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;nrow&lt;/span&gt;&lt;/a&gt;=&lt;span style=&#34;color: #cc66cc;&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  scale_fill_continuous&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;low=&lt;span style=&#34;color: blue;&#34;&gt;&#39;white&#39;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;high=&lt;span style=&#34;color: blue;&#34;&gt;&#39;black&#39;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+coord_equal&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  labs&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;x=&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;y=&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/graphics/title&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;title&lt;/span&gt;&lt;/a&gt;=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Visualization of Weights&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  theme&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;legend.position=&lt;span style=&#34;color: blue;&#34;&gt;&#34;none&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-ZSuYvhPTiI4/UPAlFt8sYJI/AAAAAAAAHpo/DcATXHnKMPU/s1600/unnamed-chunk-4.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://4.bp.blogspot.com/-ZSuYvhPTiI4/UPAlFt8sYJI/AAAAAAAAHpo/DcATXHnKMPU/s1600/unnamed-chunk-4.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2&gt;Comments&lt;/h2&gt;
&lt;div class=&#39;comments&#39;&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Andrew Landgraf&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
There are no biases in this implementation. You could make v_1=1, but there still wouldn&amp;#39;t be biases in the hidden units.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;sidharth&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
where are the biases ? have you included them in the weights ?&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Andrew Landgraf&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
The weights are randomly initialized, so any 2 runs will give different results. However, if your figure looks similar to mine, in that it looks like the weights represent numbers, I would say it is working correctly.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Xiaolin Gui&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Thank you for sharing your code.I found the output figure had different with yours when I  do the experiment. I have load the MNIST image data successfully. And the data&amp;#39;s format is 784 ×60000.  The pixels have been binarization. &amp;gt;= 127——&amp;gt;1.&lt;br /&gt;I hope you give me some advice.&lt;br /&gt;email:guixiaolinde@gmail.com &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Anonymous&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
I have managed to import the training data (from the Coursera website) into R:&lt;br /&gt;&lt;br /&gt;library(R.matlab)&lt;br /&gt;dat = readMat(&amp;quot;data_set.mat&amp;quot;)&lt;br /&gt;......&lt;br /&gt;weights=rbm(num_hidden=30, training_data= dat$data[,,1]$training[[1]], learning_rate=.09, n_iterations=5000,&lt;br /&gt;            mini_batch_size=100, momentum=0.9)&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Kent Johnson&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
R code for assignment 4 was posted here:&lt;br /&gt;https://class.coursera.org/neuralnets-2012-001/forum/thread?thread_id=87&amp;amp;post_id=5105&lt;br /&gt;I used it as the basis for a work project.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Zachary Mayer&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
I believe there&amp;#39;s also a kaggle competition using that data right now: http://www.kaggle.com/c/digit-recognizer&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Andrew&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
I don&amp;#39;t want to post it here because of possible copyright violations, but you can download it in Octave format from the Coursera site (in programming assignment 4) or you can find it at this webpage: http://yann.lecun.com/exdb/mnist/&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Anonymous&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Do you have a sample of training data?&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Factor Analysis of Baseball&#39;s Hall of Fame Voters</title>
      <link>/2013/01/09/factor-analysis-of-baseballs-hall-of-fame-voters/</link>
      <pubDate>Wed, 09 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/01/09/factor-analysis-of-baseballs-hall-of-fame-voters/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
&lt;!-- saved from url=(0014)about:internet --&gt;&lt;html&gt;&lt;head&gt;  &lt;title&gt;Factor Analysis of Baseball&#39;s Hall of Fame Voters&lt;/title&gt; &lt;style type=&#34;text/css&#34;&gt;body, td {    font-family: sans-serif;    background-color: white;    font-size: 12px;    margin: 8px; }  tt, code, pre {    font-family: &#39;DejaVu Sans Mono&#39;, &#39;Droid Sans Mono&#39;, &#39;Lucida Console&#39;, Consolas, Monaco, monospace; }  h1 {     font-size:2.2em;  }  h2 {     font-size:1.8em;  }  h3 {     font-size:1.4em;  }  h4 {     font-size:1.0em;  }  h5 {     font-size:0.9em;  }  h6 {     font-size:0.8em;  }  a:visited {    color: rgb(50%, 0%, 50%); }  pre {     margin-top: 0;    max-width: 95%;    border: 1px solid #ccc;    white-space: pre-wrap; }  pre code {    display: block; padding: 0.5em; }  code.r, code.cpp {    background-color: #F8F8F8; }  table, td, th {   border: none; }  blockquote {    color:#666666;    margin:0;    padding-left: 1em;    border-left: 0.5em #EEE solid; }  hr {    height: 0px;    border-bottom: none;    border-top-width: thin;    border-top-style: dotted;    border-top-color: #999999; }  @media print {    * {        background: transparent !important;        color: black !important;        filter:none !important;        -ms-filter: none !important;     }     body {        font-size:12pt;        max-width:100%;     }            a, a:visited {        text-decoration: underline;     }     hr {        visibility: hidden;       page-break-before: always;    }     pre, blockquote {        padding-right: 1em;        page-break-inside: avoid;     }     tr, img {        page-break-inside: avoid;     }     img {        max-width: 100% !important;     }     @page :left {        margin: 15mm 20mm 15mm 10mm;     }          @page :right {        margin: 15mm 10mm 15mm 20mm;     }     p, h2, h3 {        orphans: 3; widows: 3;     }     h2, h3 {        page-break-after: avoid;     } }  &lt;/style&gt; &lt;style type=&#34;text/css&#34;&gt;   pre .operator,    pre .paren {      color: rgb(104, 118, 135)    }     pre .literal {      color: rgb(88, 72, 246)    }     pre .number {      color: rgb(0, 0, 205);    }     pre .comment {      color: rgb(76, 136, 107);    }     pre .keyword {      color: rgb(0, 0, 255);    }     pre .identifier {      color: rgb(0, 0, 0);    }     pre .string {      color: rgb(3, 106, 7);    } &lt;/style&gt; &lt;script type=&#34;text/javascript&#34;&gt;var hljs=new function(){function m(p){return p.replace(/&amp;/gm,&#34;&amp;amp;&#34;).replace(/&lt;/gm,&#34;&amp;lt;&#34;)}function f(r,q,p){return RegExp(q,&#34;m&#34;+(r.cI?&#34;i&#34;:&#34;&#34;)+(p?&#34;g&#34;:&#34;&#34;))}function b(r){for(var p=0;p&lt;r.childNodes.length;p++){var q=r.childNodes[p];if(q.nodeName==&#34;CODE&#34;){return q}if(!(q.nodeType==3&amp;&amp;q.nodeValue.match(/\s+/))){break}}}function h(t,s){var p=&#34;&#34;;for(var r=0;r&lt;t.childNodes.length;r++){if(t.childNodes[r].nodeType==3){var q=t.childNodes[r].nodeValue;if(s){q=q.replace(/\n/g,&#34;&#34;)}p+=q}else{if(t.childNodes[r].nodeName==&#34;BR&#34;){p+=&#34;\n&#34;}else{p+=h(t.childNodes[r])}}}if(/MSIE [678]/.test(navigator.userAgent)){p=p.replace(/\r/g,&#34;\n&#34;)}return p}function a(s){var r=s.className.split(/\s+/);r=r.concat(s.parentNode.className.split(/\s+/));for(var q=0;q&lt;r.length;q++){var p=r[q].replace(/^language-/,&#34;&#34;);if(e[p]){return p}}}function c(q){var p=[];(function(s,t){for(var r=0;r&lt;s.childNodes.length;r++){if(s.childNodes[r].nodeType==3){t+=s.childNodes[r].nodeValue.length}else{if(s.childNodes[r].nodeName==&#34;BR&#34;){t+=1}else{if(s.childNodes[r].nodeType==1){p.push({event:&#34;start&#34;,offset:t,node:s.childNodes[r]});t=arguments.callee(s.childNodes[r],t);p.push({event:&#34;stop&#34;,offset:t,node:s.childNodes[r]})}}}}return t})(q,0);return p}function k(y,w,x){var q=0;var z=&#34;&#34;;var s=[];function u(){if(y.length&amp;&amp;w.length){if(y[0].offset!=w[0].offset){return(y[0].offset&lt;w[0].offset)?y:w}else{return w[0].event==&#34;start&#34;?y:w}}else{return y.length?y:w}}function t(D){var A=&#34;&lt;&#34;+D.nodeName.toLowerCase();for(var B=0;B&lt;D.attributes.length;B++){var C=D.attributes[B];A+=&#34; &#34;+C.nodeName.toLowerCase();if(C.value!==undefined&amp;&amp;C.value!==false&amp;&amp;C.value!==null){A+=&#39;=&#34;&#39;+m(C.value)+&#39;&#34;&#39;}}return A+&#34;&gt;&#34;}while(y.length||w.length){var v=u().splice(0,1)[0];z+=m(x.substr(q,v.offset-q));q=v.offset;if(v.event==&#34;start&#34;){z+=t(v.node);s.push(v.node)}else{if(v.event==&#34;stop&#34;){var p,r=s.length;do{r--;p=s[r];z+=(&#34;&lt;/&#34;+p.nodeName.toLowerCase()+&#34;&gt;&#34;)}while(p!=v.node);s.splice(r,1);while(r&lt;s.length){z+=t(s[r]);r++}}}}return z+m(x.substr(q))}function j(){function q(x,y,v){if(x.compiled){return}var u;var s=[];if(x.k){x.lR=f(y,x.l||hljs.IR,true);for(var w in x.k){if(!x.k.hasOwnProperty(w)){continue}if(x.k[w] instanceof Object){u=x.k[w]}else{u=x.k;w=&#34;keyword&#34;}for(var r in u){if(!u.hasOwnProperty(r)){continue}x.k[r]=[w,u[r]];s.push(r)}}}if(!v){if(x.bWK){x.b=&#34;\\b(&#34;+s.join(&#34;|&#34;)+&#34;)\\s&#34;}x.bR=f(y,x.b?x.b:&#34;\\B|\\b&#34;);if(!x.e&amp;&amp;!x.eW){x.e=&#34;\\B|\\b&#34;}if(x.e){x.eR=f(y,x.e)}}if(x.i){x.iR=f(y,x.i)}if(x.r===undefined){x.r=1}if(!x.c){x.c=[]}x.compiled=true;for(var t=0;t&lt;x.c.length;t++){if(x.c[t]==&#34;self&#34;){x.c[t]=x}q(x.c[t],y,false)}if(x.starts){q(x.starts,y,false)}}for(var p in e){if(!e.hasOwnProperty(p)){continue}q(e[p].dM,e[p],true)}}function d(B,C){if(!j.called){j();j.called=true}function q(r,M){for(var L=0;L&lt;M.c.length;L++){if((M.c[L].bR.exec(r)||[null])[0]==r){return M.c[L]}}}function v(L,r){if(D[L].e&amp;&amp;D[L].eR.test(r)){return 1}if(D[L].eW){var M=v(L-1,r);return M?M+1:0}return 0}function w(r,L){return L.i&amp;&amp;L.iR.test(r)}function K(N,O){var M=[];for(var L=0;L&lt;N.c.length;L++){M.push(N.c[L].b)}var r=D.length-1;do{if(D[r].e){M.push(D[r].e)}r--}while(D[r+1].eW);if(N.i){M.push(N.i)}return f(O,M.join(&#34;|&#34;),true)}function p(M,L){var N=D[D.length-1];if(!N.t){N.t=K(N,E)}N.t.lastIndex=L;var r=N.t.exec(M);return r?[M.substr(L,r.index-L),r[0],false]:[M.substr(L),&#34;&#34;,true]}function z(N,r){var L=E.cI?r[0].toLowerCase():r[0];var M=N.k[L];if(M&amp;&amp;M instanceof Array){return M}return false}function F(L,P){L=m(L);if(!P.k){return L}var r=&#34;&#34;;var O=0;P.lR.lastIndex=0;var M=P.lR.exec(L);while(M){r+=L.substr(O,M.index-O);var N=z(P,M);if(N){x+=N[1];r+=&#39;&lt;span class=&#34;&#39;+N[0]+&#39;&#34;&gt;&#39;+M[0]+&#34;&lt;/span&gt;&#34;}else{r+=M[0]}O=P.lR.lastIndex;M=P.lR.exec(L)}return r+L.substr(O,L.length-O)}function J(L,M){if(M.sL&amp;&amp;e[M.sL]){var r=d(M.sL,L);x+=r.keyword_count;return r.value}else{return F(L,M)}}function I(M,r){var L=M.cN?&#39;&lt;span class=&#34;&#39;+M.cN+&#39;&#34;&gt;&#39;:&#34;&#34;;if(M.rB){y+=L;M.buffer=&#34;&#34;}else{if(M.eB){y+=m(r)+L;M.buffer=&#34;&#34;}else{y+=L;M.buffer=r}}D.push(M);A+=M.r}function G(N,M,Q){var R=D[D.length-1];if(Q){y+=J(R.buffer+N,R);return false}var P=q(M,R);if(P){y+=J(R.buffer+N,R);I(P,M);return P.rB}var L=v(D.length-1,M);if(L){var O=R.cN?&#34;&lt;/span&gt;&#34;:&#34;&#34;;if(R.rE){y+=J(R.buffer+N,R)+O}else{if(R.eE){y+=J(R.buffer+N,R)+O+m(M)}else{y+=J(R.buffer+N+M,R)+O}}while(L&gt;1){O=D[D.length-2].cN?&#34;&lt;/span&gt;&#34;:&#34;&#34;;y+=O;L--;D.length--}var r=D[D.length-1];D.length--;D[D.length-1].buffer=&#34;&#34;;if(r.starts){I(r.starts,&#34;&#34;)}return R.rE}if(w(M,R)){throw&#34;Illegal&#34;}}var E=e[B];var D=[E.dM];var A=0;var x=0;var y=&#34;&#34;;try{var s,u=0;E.dM.buffer=&#34;&#34;;do{s=p(C,u);var t=G(s[0],s[1],s[2]);u+=s[0].length;if(!t){u+=s[1].length}}while(!s[2]);if(D.length&gt;1){throw&#34;Illegal&#34;}return{r:A,keyword_count:x,value:y}}catch(H){if(H==&#34;Illegal&#34;){return{r:0,keyword_count:0,value:m(C)}}else{throw H}}}function g(t){var p={keyword_count:0,r:0,value:m(t)};var r=p;for(var q in e){if(!e.hasOwnProperty(q)){continue}var s=d(q,t);s.language=q;if(s.keyword_count+s.r&gt;r.keyword_count+r.r){r=s}if(s.keyword_count+s.r&gt;p.keyword_count+p.r){r=p;p=s}}if(r.language){p.second_best=r}return p}function i(r,q,p){if(q){r=r.replace(/^((&lt;[^&gt;]+&gt;|\t)+)/gm,function(t,w,v,u){return w.replace(/\t/g,q)})}if(p){r=r.replace(/\n/g,&#34;&lt;br&gt;&#34;)}return r}function n(t,w,r){var x=h(t,r);var v=a(t);var y,s;if(v){y=d(v,x)}else{return}var q=c(t);if(q.length){s=document.createElement(&#34;pre&#34;);s.innerHTML=y.value;y.value=k(q,c(s),x)}y.value=i(y.value,w,r);var u=t.className;if(!u.match(&#34;(\\s|^)(language-)?&#34;+v+&#34;(\\s|$)&#34;)){u=u?(u+&#34; &#34;+v):v}if(/MSIE [678]/.test(navigator.userAgent)&amp;&amp;t.tagName==&#34;CODE&#34;&amp;&amp;t.parentNode.tagName==&#34;PRE&#34;){s=t.parentNode;var p=document.createElement(&#34;div&#34;);p.innerHTML=&#34;&lt;pre&gt;&lt;code&gt;&#34;+y.value+&#34;&lt;/code&gt;&lt;/pre&gt;&#34;;t=p.firstChild.firstChild;p.firstChild.cN=s.cN;s.parentNode.replaceChild(p.firstChild,s)}else{t.innerHTML=y.value}t.className=u;t.result={language:v,kw:y.keyword_count,re:y.r};if(y.second_best){t.second_best={language:y.second_best.language,kw:y.second_best.keyword_count,re:y.second_best.r}}}function o(){if(o.called){return}o.called=true;var r=document.getElementsByTagName(&#34;pre&#34;);for(var p=0;p&lt;r.length;p++){var q=b(r[p]);if(q){n(q,hljs.tabReplace)}}}function l(){if(window.addEventListener){window.addEventListener(&#34;DOMContentLoaded&#34;,o,false);window.addEventListener(&#34;load&#34;,o,false)}else{if(window.attachEvent){window.attachEvent(&#34;onload&#34;,o)}else{window.onload=o}}}var e={};this.LANGUAGES=e;this.highlight=d;this.highlightAuto=g;this.fixMarkup=i;this.highlightBlock=n;this.initHighlighting=o;this.initHighlightingOnLoad=l;this.IR=&#34;[a-zA-Z][a-zA-Z0-9_]*&#34;;this.UIR=&#34;[a-zA-Z_][a-zA-Z0-9_]*&#34;;this.NR=&#34;\\b\\d+(\\.\\d+)?&#34;;this.CNR=&#34;\\b(0[xX][a-fA-F0-9]+|(\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)&#34;;this.BNR=&#34;\\b(0b[01]+)&#34;;this.RSR=&#34;!|!=|!==|%|%=|&amp;|&amp;&amp;|&amp;=|\\*|\\*=|\\+|\\+=|,|\\.|-|-=|/|/=|:|;|&lt;|&lt;&lt;|&lt;&lt;=|&lt;=|=|==|===|&gt;|&gt;=|&gt;&gt;|&gt;&gt;=|&gt;&gt;&gt;|&gt;&gt;&gt;=|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~&#34;;this.ER=&#34;(?![\\s\\S])&#34;;this.BE={b:&#34;\\\\.&#34;,r:0};this.ASM={cN:&#34;string&#34;,b:&#34;&#39;&#34;,e:&#34;&#39;&#34;,i:&#34;\\n&#34;,c:[this.BE],r:0};this.QSM={cN:&#34;string&#34;,b:&#39;&#34;&#39;,e:&#39;&#34;&#39;,i:&#34;\\n&#34;,c:[this.BE],r:0};this.CLCM={cN:&#34;comment&#34;,b:&#34;//&#34;,e:&#34;$&#34;};this.CBLCLM={cN:&#34;comment&#34;,b:&#34;/\\*&#34;,e:&#34;\\*/&#34;};this.HCM={cN:&#34;comment&#34;,b:&#34;#&#34;,e:&#34;$&#34;};this.NM={cN:&#34;number&#34;,b:this.NR,r:0};this.CNM={cN:&#34;number&#34;,b:this.CNR,r:0};this.BNM={cN:&#34;number&#34;,b:this.BNR,r:0};this.inherit=function(r,s){var p={};for(var q in r){p[q]=r[q]}if(s){for(var q in s){p[q]=s[q]}}return p}}();hljs.LANGUAGES.cpp=function(){var a={keyword:{&#34;false&#34;:1,&#34;int&#34;:1,&#34;float&#34;:1,&#34;while&#34;:1,&#34;private&#34;:1,&#34;char&#34;:1,&#34;catch&#34;:1,&#34;export&#34;:1,virtual:1,operator:2,sizeof:2,dynamic_cast:2,typedef:2,const_cast:2,&#34;const&#34;:1,struct:1,&#34;for&#34;:1,static_cast:2,union:1,namespace:1,unsigned:1,&#34;long&#34;:1,&#34;throw&#34;:1,&#34;volatile&#34;:2,&#34;static&#34;:1,&#34;protected&#34;:1,bool:1,template:1,mutable:1,&#34;if&#34;:1,&#34;public&#34;:1,friend:2,&#34;do&#34;:1,&#34;return&#34;:1,&#34;goto&#34;:1,auto:1,&#34;void&#34;:2,&#34;enum&#34;:1,&#34;else&#34;:1,&#34;break&#34;:1,&#34;new&#34;:1,extern:1,using:1,&#34;true&#34;:1,&#34;class&#34;:1,asm:1,&#34;case&#34;:1,typeid:1,&#34;short&#34;:1,reinterpret_cast:2,&#34;default&#34;:1,&#34;double&#34;:1,register:1,explicit:1,signed:1,typename:1,&#34;try&#34;:1,&#34;this&#34;:1,&#34;switch&#34;:1,&#34;continue&#34;:1,wchar_t:1,inline:1,&#34;delete&#34;:1,alignof:1,char16_t:1,char32_t:1,constexpr:1,decltype:1,noexcept:1,nullptr:1,static_assert:1,thread_local:1,restrict:1,_Bool:1,complex:1},built_in:{std:1,string:1,cin:1,cout:1,cerr:1,clog:1,stringstream:1,istringstream:1,ostringstream:1,auto_ptr:1,deque:1,list:1,queue:1,stack:1,vector:1,map:1,set:1,bitset:1,multiset:1,multimap:1,unordered_set:1,unordered_map:1,unordered_multiset:1,unordered_multimap:1,array:1,shared_ptr:1}};return{dM:{k:a,i:&#34;&lt;/&#34;,c:[hljs.CLCM,hljs.CBLCLM,hljs.QSM,{cN:&#34;string&#34;,b:&#34;&#39;\\\\?.&#34;,e:&#34;&#39;&#34;,i:&#34;.&#34;},{cN:&#34;number&#34;,b:&#34;\\b(\\d+(\\.\\d*)?|\\.\\d+)(u|U|l|L|ul|UL|f|F)&#34;},hljs.CNM,{cN:&#34;preprocessor&#34;,b:&#34;#&#34;,e:&#34;$&#34;},{cN:&#34;stl_container&#34;,b:&#34;\\b(deque|list|queue|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array)\\s*&lt;&#34;,e:&#34;&gt;&#34;,k:a,r:10,c:[&#34;self&#34;]}]}}}();hljs.LANGUAGES.r={dM:{c:[hljs.HCM,{cN:&#34;number&#34;,b:&#34;\\b0[xX][0-9a-fA-F]+[Li]?\\b&#34;,e:hljs.IMMEDIATE_RE,r:0},{cN:&#34;number&#34;,b:&#34;\\b\\d+(?:[eE][+\\-]?\\d*)?L\\b&#34;,e:hljs.IMMEDIATE_RE,r:0},{cN:&#34;number&#34;,b:&#34;\\b\\d+\\.(?!\\d)(?:i\\b)?&#34;,e:hljs.IMMEDIATE_RE,r:1},{cN:&#34;number&#34;,b:&#34;\\b\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d*)?i?\\b&#34;,e:hljs.IMMEDIATE_RE,r:0},{cN:&#34;number&#34;,b:&#34;\\.\\d+(?:[eE][+\\-]?\\d*)?i?\\b&#34;,e:hljs.IMMEDIATE_RE,r:1},{cN:&#34;keyword&#34;,b:&#34;(?:tryCatch|library|setGeneric|setGroupGeneric)\\b&#34;,e:hljs.IMMEDIATE_RE,r:10},{cN:&#34;keyword&#34;,b:&#34;\\.\\.\\.&#34;,e:hljs.IMMEDIATE_RE,r:10},{cN:&#34;keyword&#34;,b:&#34;\\.\\.\\d+(?![\\w.])&#34;,e:hljs.IMMEDIATE_RE,r:10},{cN:&#34;keyword&#34;,b:&#34;\\b(?:function)&#34;,e:hljs.IMMEDIATE_RE,r:2},{cN:&#34;keyword&#34;,b:&#34;(?:if|in|break|next|repeat|else|for|return|switch|while|try|stop|warning|require|attach|detach|source|setMethod|setClass)\\b&#34;,e:hljs.IMMEDIATE_RE,r:1},{cN:&#34;literal&#34;,b:&#34;(?:NA|NA_integer_|NA_real_|NA_character_|NA_complex_)\\b&#34;,e:hljs.IMMEDIATE_RE,r:10},{cN:&#34;literal&#34;,b:&#34;(?:NULL|TRUE|FALSE|T|F|Inf|NaN)\\b&#34;,e:hljs.IMMEDIATE_RE,r:1},{cN:&#34;identifier&#34;,b:&#34;[a-zA-Z.][a-zA-Z0-9._]*\\b&#34;,e:hljs.IMMEDIATE_RE,r:0},{cN:&#34;operator&#34;,b:&#34;&lt;\\-(?!\\s*\\d)&#34;,e:hljs.IMMEDIATE_RE,r:2},{cN:&#34;operator&#34;,b:&#34;\\-&gt;|&lt;\\-&#34;,e:hljs.IMMEDIATE_RE,r:1},{cN:&#34;operator&#34;,b:&#34;%%|~&#34;,e:hljs.IMMEDIATE_RE},{cN:&#34;operator&#34;,b:&#34;&gt;=|&lt;=|==|!=|\\|\\||&amp;&amp;|=|\\+|\\-|\\*|/|\\^|&gt;|&lt;|!|&amp;|\\||\\$|:&#34;,e:hljs.IMMEDIATE_RE,r:0},{cN:&#34;operator&#34;,b:&#34;%&#34;,e:&#34;%&#34;,i:&#34;\\n&#34;,r:1},{cN:&#34;identifier&#34;,b:&#34;`&#34;,e:&#34;`&#34;,r:0},{cN:&#34;string&#34;,b:&#39;&#34;&#39;,e:&#39;&#34;&#39;,c:[hljs.BE],r:0},{cN:&#34;string&#34;,b:&#34;&#39;&#34;,e:&#34;&#39;&#34;,c:[hljs.BE],r:0},{cN:&#34;paren&#34;,b:&#34;[[({\\])}]&#34;,e:hljs.IMMEDIATE_RE,r:0}]}}; hljs.initHighlightingOnLoad(); &lt;/script&gt;        &lt;br /&gt;Recently, Nate Silver wrote &lt;a href=&#34;http://fivethirtyeight.blogs.nytimes.com/2013/01/08/suspicion-of-steroid-use-could-keep-bagwell-and-piazza-out-of-hall/&#34;&gt;a post&lt;/a&gt; which analyzed how voters who voted for and against Barry Bonds for Baseball&#39;s Hall of Fame differed. Not surprisingly, those who voted for Bonds were more likely to vote for other suspected steroids users (like Roger Clemens). This got me thinking that this would make an interesting case study for factor analysis to see if there are latent factors that drive hall of fame voting.&lt;br /&gt;&lt;br /&gt;The Twitter user @leokitty has kept track of all the known ballots of the voters in a &lt;a href=&#34;https://docs.google.com/spreadsheet/ccc?key=0Aqc4QTMoPrdtdDQxaDYzd1lLOGpOdUdrcnNNNWNXa2c&amp;amp;authkey=CPyuwqIJ&amp;amp;authkey=CPyuwqIJ#gid=6&#34;&gt;spreadsheet&lt;/a&gt;. The spreadsheet is a matrix that has one row for each voter and one column for each player being voted upon. (Players need 75% of the vote to make it to the hall of fame.) I removed all players that had no votes and all voters that had given a partial ballot.&lt;br /&gt;&lt;br /&gt;(This matrix either has a 1 or a 0 in each entry, corresponding to whether a voter voted for the player or not. Note that this kind of matrix is similar to the data that is analyzed in information retrieval. I will be decomposing the (centered) matrix using singular value decomposition to run the factor analysis. This is the same technique used for latent semantic indexing in information retrieval.)&lt;br /&gt;&lt;br /&gt;Starting with the analysis, there is a drop off of the variance  after the first 2 factors, which means it might make sense to look only at the first 2 (which is good because I was only planning on doing so).&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;votes = read.csv(&#34;HOF votes.csv&#34;, row.names = 1, header = TRUE)&lt;br /&gt;pca = princomp(votes)&lt;br /&gt;screeplot(pca, type = &#34;l&#34;, main = &#34;Scree Plot&#34;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-hLkeU-zL-Ak/UO2Yd0B5z4I/AAAAAAAAHo4/dH27nksEiHM/s1600/unnamed-chunk-2.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://4.bp.blogspot.com/-hLkeU-zL-Ak/UO2Yd0B5z4I/AAAAAAAAHo4/dH27nksEiHM/s1600/unnamed-chunk-2.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Looking at the loadings, it appears that the first principal component corresponds strongly to steroid users, which Bonds and Clemens having large negative values and other suspected steroid users being on the negative end. The players on the positive end have no steroid suspicions.&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;dotchart(sort(pca$loadings[, 1]), main = &#34;First Principal Component&#34;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-K6MEN_9PcHs/UO2Yd69LeeI/AAAAAAAAHok/Lcb2apHZdC0/s1600/unnamed-chunk-3.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://1.bp.blogspot.com/-K6MEN_9PcHs/UO2Yd69LeeI/AAAAAAAAHok/Lcb2apHZdC0/s1600/unnamed-chunk-3.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;The second component isn&#39;t as easy to decipher. The players at the negative end seem to players that are preferred by analytically minded analysts (think Moneyball). Raines, Trammell, and Martinez have more support among this group of voters. Morris, however, has less support among these voters and he isn&#39;t that far separated from them.&lt;br /&gt;&lt;br /&gt;There also may be some secondary steroid association in the component as well separating players who have proof of steroid use versus those which have no proof but “look like” they took steroids. For example, there is no hard evidence that Bagwell or Piazza took steroids, but they were very muscular and hit a lot of home runs, so they are believed to have taken steroids. There is some sort of evidence the top five players of this component did take steroids.&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;dotchart(sort(pca$loadings[, 2]), main = &#34;Second Principal Component&#34;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-mKFEcj6ISQU/UO2Yd7ZFDQI/AAAAAAAAHoo/ZBwJgKbcLI4/s1600/unnamed-chunk-4.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://4.bp.blogspot.com/-mKFEcj6ISQU/UO2Yd7ZFDQI/AAAAAAAAHoo/ZBwJgKbcLI4/s1600/unnamed-chunk-4.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Projecting the votes onto two dimensions, we can look at how the voters for Bonds and Clemens split up. You can see there is a strong horizontal split between the voters for and against Bonds/Clemens. There are also 3 voters that voted for Bonds, but not Clemens.&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;ggplot(data.frame(cbind(pca$scores[, 1:2], votes))) + geom_point(aes(Comp.1, &lt;br /&gt;    Comp.2, colour = as.factor(Barry.Bonds), shape = as.factor(Roger.Clemens)), &lt;br /&gt;    size = 4) + coord_equal() + labs(colour = &#34;Bonds&#34;, shape = &#34;Clemens&#34;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-nQoFe3Gnk4c/UO2YeZBYwkI/AAAAAAAAHos/KftZv63_S6E/s1600/unnamed-chunk-5.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://1.bp.blogspot.com/-nQoFe3Gnk4c/UO2YeZBYwkI/AAAAAAAAHos/KftZv63_S6E/s1600/unnamed-chunk-5.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Similarly, I can look at how the voters split up on the issue of steroids by looking at both Bonds and Bagwell. The voters in the upper left do not care about steroid use, but believe that Bagwell wasn&#39;t good enough to make it to the hall of fame. The voters in the lower right do care about steroid use, but believe that Bagwell was innocent of any wrongdoing.&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;ggplot(data.frame(cbind(pca$scores[, 1:2], votes))) + geom_point(aes(Comp.1, &lt;br /&gt;    Comp.2, colour = as.factor(paste(Roger.Clemens, &#34;/&#34;, Jeff.Bagwell))), size = 4) + &lt;br /&gt;    geom_hline(aes(0), size = 0.2) + geom_vline(aes(0), size = 0.2) + coord_equal() + &lt;br /&gt;    labs(colour = &#34;Bonds / Bagwell&#34;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-k4AoH_kJlyc/UO2YfOqnS0I/AAAAAAAAHow/mETFQ33dXVI/s1600/unnamed-chunk-6.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://4.bp.blogspot.com/-k4AoH_kJlyc/UO2YfOqnS0I/AAAAAAAAHow/mETFQ33dXVI/s1600/unnamed-chunk-6.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;We can also look at a similar plot with Schilling instead of Bagwell. The separation here appears to be stronger.&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;ggplot(data.frame(cbind(pca$scores[, 1:2], votes))) + geom_point(aes(Comp.1, &lt;br /&gt;    Comp.2, colour = as.factor(paste(Barry.Bonds, &#34;/&#34;, Curt.Schilling))), size = 4) + &lt;br /&gt;    geom_hline(aes(0), size = 0.2) + geom_vline(aes(0), size = 0.2) + coord_equal() + &lt;br /&gt;    labs(colour = &#34;Bonds / Schilling&#34;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-aSA3fUNxSGY/UO2YftHu8HI/AAAAAAAAHo0/e2Itd9TkE60/s1600/unnamed-chunk-7.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://1.bp.blogspot.com/-aSA3fUNxSGY/UO2YftHu8HI/AAAAAAAAHo0/e2Itd9TkE60/s1600/unnamed-chunk-7.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Finally, we can look at a biplot (using code from &lt;a href=&#34;http://stackoverflow.com/questions/6578355/plotting-pca-biplot-with-ggplot2&#34;&gt;here&lt;/a&gt;).&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;r&#34;&gt;PCbiplot &amp;lt;- function(PC = fit, x = &#34;PC1&#34;, y = &#34;PC2&#34;) {&lt;br /&gt;    # PC being a prcomp object&lt;br /&gt;    library(grid)&lt;br /&gt;    data &amp;lt;- data.frame(obsnames = row.names(PC$x), PC$x)&lt;br /&gt;    plot &amp;lt;- ggplot(data, aes_string(x = x, y = y)) + geom_text(alpha = 0.4, &lt;br /&gt;        size = 3, aes(label = obsnames))&lt;br /&gt;    plot &amp;lt;- plot + geom_hline(aes(0), size = 0.2) + geom_vline(aes(0), size = 0.2)&lt;br /&gt;    datapc &amp;lt;- data.frame(varnames = rownames(PC$rotation), PC$rotation)&lt;br /&gt;    mult &amp;lt;- min((max(data[, y]) - min(data[, y])/(max(datapc[, y]) - min(datapc[, &lt;br /&gt;        y]))), (max(data[, x]) - min(data[, x])/(max(datapc[, x]) - min(datapc[, &lt;br /&gt;        x]))))&lt;br /&gt;    datapc &amp;lt;- transform(datapc, v1 = 0.7 * mult * (get(x)), v2 = 0.7 * mult * &lt;br /&gt;        (get(y)))&lt;br /&gt;    plot &amp;lt;- plot + coord_equal() + geom_text(data = datapc, aes(x = v1, y = v2, &lt;br /&gt;        label = varnames), size = 5, vjust = 1, color = &#34;red&#34;)&lt;br /&gt;    plot &amp;lt;- plot + geom_segment(data = datapc, aes(x = 0, y = 0, xend = v1, &lt;br /&gt;        yend = v2), arrow = arrow(length = unit(0.2, &#34;cm&#34;)), alpha = 0.75, color = &#34;red&#34;)&lt;br /&gt;    plot&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;fit &amp;lt;- prcomp(votes, scale = F)&lt;br /&gt;PCbiplot(fit)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-MPuCAW6v_zw/UO2YgMRas1I/AAAAAAAAHpA/pHzLYPdb0k4/s1600/unnamed-chunk-8.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://4.bp.blogspot.com/-MPuCAW6v_zw/UO2YgMRas1I/AAAAAAAAHpA/pHzLYPdb0k4/s1600/unnamed-chunk-8.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;I could have also attempted to rotate the factors to make them more interpretable, but they appeared to have easy interpretation as is. Since we were looking at 2-d plots, rotation would not have made a difference in interpreting the plots. It is also common to use a likelihood approach to estimate factors. I chose to use the principal component method because the data are definitely not normal (being 0&#39;s and 1&#39;s).&lt;/head&gt;&lt;/html&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Quick Post About Getting and Plotting Polls in R</title>
      <link>/2012/11/05/quick-post-about-getting-and-plotting-polls-in-r/</link>
      <pubDate>Mon, 05 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/11/05/quick-post-about-getting-and-plotting-polls-in-r/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
With the election nearly upon us, I wanted to share an easy way I just found to download polling data and graph a few with ggplot2. &lt;a href=&#34;https://github.com/dlinzer/pollstR/&#34;&gt;dlinzer &lt;/a&gt;at github created a function to download poll data from the &lt;a href=&#34;http://elections.huffingtonpost.com/pollster/api&#34;&gt;Huffington Post&#39;s Pollster API&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;The default is to download national tracking polls from the presidential election. After sourcing the function, I load the required packages, download the data, and make the plot.&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/library&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;library&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/XML&#34;&gt;XML&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/library&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;library&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/reshape&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;reshape&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/library&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;library&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot2&#34;&gt;ggplot2&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; theme_set&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;theme_bw&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;dat &amp;lt;- pollstR&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;pages=&lt;span style=&#34;color: #cc66cc;&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot&#34;&gt;ggplot&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;dat&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;end.date&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;Obama/&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;Obama+Romney&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_point&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;alpha=&lt;span style=&#34;color: #cc66cc;&#34;&gt;.5&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_smooth&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;weight=&lt;a href=&#34;http://inside-r.org/r-doc/base/sqrt&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sqrt&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;N&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_hline&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;yintercept=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0.5&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;lty=&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  labs&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/graphics/title&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;title&lt;/span&gt;&lt;/a&gt;=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Proportion of Vote for Obama&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;x=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Last Date of Poll&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;y=&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-KXjQJ7sJ0eI/UJhfahhVZCI/AAAAAAAAHW8/nRxJVgXK5Fs/s1600/PollsPlot1.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;512&#34; src=&#34;http://4.bp.blogspot.com/-KXjQJ7sJ0eI/UJhfahhVZCI/AAAAAAAAHW8/nRxJVgXK5Fs/s1600/PollsPlot1.jpeg&#34; style=&#34;cursor: move;&#34; width=&#34;640&#34; /&gt;&lt;/a&gt;&lt;/div&gt;I have used transparency so that you can see when there are many polls on top of each other. You can see that Obama&#39;s lead decreased substantially after the first debate but has crawled back up since then. Of course, I am treating all polls as equal (although I am weighting by sample size) when the truth is that some polls are better than others and some are biased.&lt;br /&gt;&lt;br /&gt;To have some more fun, I will show what some of the data from swing states look like. The code below loops through the swing states and downloads the polls. Then it plots the polls for each state in different facets.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-KXjQJ7sJ0eI/UJhfahhVZCI/AAAAAAAAHW8/nRxJVgXK5Fs/s1600/PollsPlot1.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-KXjQJ7sJ0eI/UJhfahhVZCI/AAAAAAAAHW8/nRxJVgXK5Fs/s1600/PollsPlot1.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;/a&gt;swing.states=&lt;a href=&#34;http://inside-r.org/r-doc/base/c&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;c&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;ohio&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;florida&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;virginia&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;colorado&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;nevada&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;north-carolina&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/mgcv/s&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;s&lt;/span&gt;&lt;/a&gt; &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;in&lt;/span&gt; swing.states&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;a href=&#34;http://inside-r.org/r-doc/base/print&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;print&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/mgcv/s&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;s&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  dat.state &amp;lt;- pollstR&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;chart=&lt;a href=&#34;http://inside-r.org/r-doc/base/paste&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;paste&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;2012-&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/mgcv/s&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;s&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;-president-romney-vs-obama&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;sep=&lt;span style=&#34;color: blue;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;pages=&lt;span style=&#34;color: blue;&#34;&gt;&#34;all&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  dat.state=&lt;a href=&#34;http://inside-r.org/r-doc/base/subset&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;subset&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;dat.state&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;select=&lt;a href=&#34;http://inside-r.org/r-doc/base/c&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;c&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;id&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;pollster&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;start.date&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;end.date&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;method&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;N&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;Obama&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;Romney&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  dat.state$State=&lt;a href=&#34;http://inside-r.org/r-doc/mgcv/s&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;s&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;  &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/mgcv/s&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;s&lt;/span&gt;&lt;/a&gt;==&lt;span style=&#34;color: blue;&#34;&gt;&#34;ohio&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;    dat=dat.state&lt;br /&gt;  &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;    dat=&lt;a href=&#34;http://inside-r.org/r-doc/base/rbind&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rbind&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;dat&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;dat.state&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/library&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;library&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;lubridate&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;dat$end.date=ymd&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/as.character&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;as.character&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;dat$end.date&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot&#34;&gt;ggplot&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;dat&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;end.date&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;Obama/&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;Obama+Romney&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_point&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;alpha=&lt;span style=&#34;color: #cc66cc;&#34;&gt;.5&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_smooth&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;weight=&lt;a href=&#34;http://inside-r.org/r-doc/base/sqrt&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sqrt&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;N&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_hline&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;yintercept=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0.5&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;lty=&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  labs&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/graphics/title&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;title&lt;/span&gt;&lt;/a&gt;=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Proportion of Vote for Obama&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;x=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Last Date of Poll&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;y=&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+facet_wrap&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;~State&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+xlim&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/c&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;c&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;mdy&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;8/1/2012&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;mdy&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;11/6/2012&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-FwY5UtHzB-4/UJhkl-qrDgI/AAAAAAAAHXM/LzcRBLshLRM/s1600/PollsPlot2.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;512&#34; src=&#34;http://2.bp.blogspot.com/-FwY5UtHzB-4/UJhkl-qrDgI/AAAAAAAAHXM/LzcRBLshLRM/s1600/PollsPlot2.jpeg&#34; width=&#34;640&#34; /&gt;&lt;/a&gt;&lt;/div&gt;Unfortunately the x-axis didn&#39;t show up very well, but it starts at August 1. There have been quite a few polls in Ohio and Florida, haven&#39;t there? The state polls did not have nearly the same shift that the national poll did in reaction to the first debate. The state with the largest bump is Colorado, where the debate was held.&lt;br /&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-KXjQJ7sJ0eI/UJhfahhVZCI/AAAAAAAAHW8/nRxJVgXK5Fs/s1600/PollsPlot1.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-KXjQJ7sJ0eI/UJhfahhVZCI/AAAAAAAAHW8/nRxJVgXK5Fs/s1600/PollsPlot1.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;/a&gt;&lt;br /&gt;By just looking at the tracking polls, I think you would make the same conclusions that &lt;a href=&#34;http://fivethirtyeight.blogs.nytimes.com/&#34;&gt;Nate Silver&lt;/a&gt; has with his fancy model. Ohio, Virginia, Nevada, and Colorado favor Obama. North Carolina favors Romney and Florida just barely tips toward Romney as well.&lt;br /&gt;&lt;br /&gt;Finally, here are just the smoothed running means, all on one plot. You can see that There was also a first debate effect in Ohio.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot&#34;&gt;ggplot&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;dat&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;end.date&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;Obama/&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;Obama+Romney&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_smooth&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;colour=State&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;weight=&lt;a href=&#34;http://inside-r.org/r-doc/base/sqrt&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sqrt&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;N&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;se=&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;FALSE&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+geom_hline&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;yintercept=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0.5&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;lty=&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;size=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+&lt;br /&gt;  labs&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/graphics/title&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;title&lt;/span&gt;&lt;/a&gt;=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Proportion of Vote for Obama&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;x=&lt;span style=&#34;color: blue;&#34;&gt;&#34;Last Date of Poll&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;y=&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;+xlim&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/c&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;c&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;mdy&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;8/1/2012&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;mdy&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;11/6/2012&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-nN9GHK_W6Zs/UJhpDsnKArI/AAAAAAAAHXc/RBVNGzoM7tQ/s1600/PollsPlot3.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://3.bp.blogspot.com/-nN9GHK_W6Zs/UJhpDsnKArI/AAAAAAAAHXc/RBVNGzoM7tQ/s1600/PollsPlot3.jpeg&#34; height=&#34;347&#34; width=&#34;640&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2&gt;Comments&lt;/h2&gt;
&lt;div class=&#39;comments&#39;&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Andrew Clark&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Interesting work. Thanks for the tip on the API/github. I have had a look at the GOP campaign - surely one of the strangest in history&lt;br /&gt;http://wp.me/p17axt-jK&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Andrew&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Thanks for the tip. To add more information to the national tracker plot, you can make the of the points relative to the number polled. Also facet it by the type of poll. Like this:&lt;br /&gt;&lt;br /&gt;ggplot(dat,aes(end.date,Obama/(Obama+Romney)))+&lt;br /&gt;  geom_point(aes(size=sqrt(N)),alpha=.5)+&lt;br /&gt;  geom_smooth(aes(weight=sqrt(N)))+&lt;br /&gt;  geom_hline(aes(yintercept=0.5),lty=2,size=1)+&lt;br /&gt;  labs(title=&amp;quot;Proportion of Vote for Obama&amp;quot;,x=&amp;quot;Last Date of Poll&amp;quot;,y=NULL)+&lt;br /&gt;  facet_wrap(~method)+&lt;br /&gt;  theme(axis.text.x=element_text(angle=-90))&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Tony Hirst&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
You can tidy up the x-axis labels by rotating them, eg using something like:&lt;br /&gt;+theme(axis.text.x=element_text(angle=-90))&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Tony Hirst&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
This comment has been removed by the author.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Finding the Best Subset of a GAM using Tabu Search and Visualizing It in R</title>
      <link>/2012/08/24/finding-the-best-subset-of-a-gam-using-tabu-search-and-visualizing-it-in-r/</link>
      <pubDate>Fri, 24 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/08/24/finding-the-best-subset-of-a-gam-using-tabu-search-and-visualizing-it-in-r/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
Finding the best subset of variables for a regression is a very common task in statistics and machine learning. There are statistical methods based on asymptotic normal theory that can help you decide whether to add or remove a variable at a time. The problem with this is that it is a greedy approach and you can easily get stuck in a local mode. Another approach is to look at all possible subsets of the variables and see which one maximizes an objective function (accuracy on a test set, for example).&lt;br /&gt;&lt;br /&gt;Heuristics are required if the number of variables, &lt;i&gt;p&lt;/i&gt;, gets large (&amp;gt;40) because the number of possible subsets is equal to 2^&lt;i&gt;p&lt;/i&gt;, excluding interactions. One method that works well is called &lt;a href=&#34;http://en.wikipedia.org/wiki/Tabu_search&#34;&gt;tabu search&lt;/a&gt; (TS). It is a more general optimization method, but in the case of finding the best subset, it is similar to stepwise methods. At any point, it will try to improve the objective function the most by adding or removing one variable. One difference is that TS will not add or remove variables that have been recently added or removed. This avoids the optimization from getting stuck at a local maximum. There are more details to the algorithm that you can read up on if you would like.&lt;br /&gt;&lt;br /&gt;There is a &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;tabuSearch&lt;span style=&#34;font-family: Arial,Helvetica,sans-serif;&#34;&gt; &lt;/span&gt;&lt;/span&gt;package in &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;R&lt;/span&gt; that implements this algorithm. I wanted to find a best subset regression using generalized additive models (GAMs) of the package &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;mgcv&lt;/span&gt;. An issue arose, because you need to specify which terms are smooth and which are not in a formula to use &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;mgcv&lt;/span&gt;. The general form of the formula looks like:&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;gam(y ~ s(x1) + s(x2) + x3, data=train)&lt;/span&gt;&lt;br /&gt;where &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;x1&lt;/span&gt; and &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;x2&lt;/span&gt; are smooth terms and &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;x3&lt;/span&gt; is treated like it is in a linear model.&lt;br /&gt;&lt;br /&gt;My data set has a combination of continuous variables, which I want to treat as smooth, and categorical variables, which I want to treat as factors. For each variable in the subset, I need to identify whether it is a factor or not, and then creating a string of the variable with or without &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;s()&lt;/span&gt;. &lt;br /&gt;&lt;br /&gt;For example, &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;th&lt;/span&gt; is a vector of 0&#39;s and 1&#39;s which indicate whether each variable (column) is in the regression. I used the housing data set from &lt;a href=&#34;http://archive.ics.uci.edu/ml/datasets/Housing&#34;&gt;UCI ML repository&lt;/a&gt;. With 13 explanatory variables, there are 8192 possible main effects models. I am predicting MEDV, so I start the formula string with &#34;MEDV ~&#34;. Then I loop through each element of &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;th&lt;/span&gt;. If it is 1 then I want to add it to the formula. I check if it is a factor and if so I just add the name of the variable plus a &#34;+&#34;. If it is continuous, I add the column name with &#34;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;s()&lt;/span&gt;&#34; around it. Finally I convert the string to a formula using &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;formula()&lt;/span&gt;. I can plug in this formula into the &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;gam&lt;/span&gt; function. &lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;num.cols=&lt;a href=&#34;http://inside-r.org/r-doc/base/sum&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sum&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;th&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;fo.str=&lt;span style=&#34;color: blue;&#34;&gt;&#34;MEDV ~&#34;&lt;/span&gt;&lt;br /&gt;cum.cols=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;i &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;:&lt;a href=&#34;http://inside-r.org/r-doc/base/length&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;length&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;th&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;th&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&amp;gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/is.factor&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;is.factor&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;train&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;i&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;      fo.str=&lt;a href=&#34;http://inside-r.org/r-doc/base/paste&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;paste&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;fo.str&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/colnames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;colnames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;train&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;sep=&lt;span style=&#34;color: blue;&#34;&gt;&#34; &#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;      fo.str=&lt;a href=&#34;http://inside-r.org/r-doc/base/paste&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;paste&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;fo.str&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34; s(&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/colnames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;colnames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;train&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;)&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;sep=&lt;span style=&#34;color: blue;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;    cum.cols=cum.cols+&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;br /&gt;    &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;cum.cols&amp;lt;num.cols&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;      fo.str=&lt;a href=&#34;http://inside-r.org/r-doc/base/paste&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;paste&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;fo.str&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;+&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;fo=&lt;a href=&#34;http://inside-r.org/r-doc/stats/as.formula&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;as.formula&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;fo.str&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;For evaluating the subsets, I split the data into training, validation, and testing. I trained the subset on the training data set and measured the R-squared on the prediction of the validation set. The full code can be found below.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/library&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;library&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/mgcv/mgcv&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;mgcv&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/library&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;library&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;tabuSearch&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;# http://archive.ics.uci.edu/ml/datasets/Housing&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/r-doc/MASS/housing&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;housing&lt;/span&gt;&lt;/a&gt;=&lt;a href=&#34;http://inside-r.org/r-doc/utils/read.table&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;read.table&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;http://archive.ics.uci.edu/ml/machine-learning-databases/housing/housing.data&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/colnames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;colnames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/MASS/housing&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;housing&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;=&lt;a href=&#34;http://inside-r.org/r-doc/base/c&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;c&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;CRIM&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: blue;&#34;&gt;&#34;ZN&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: blue;&#34;&gt;&#34;INDUS&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: blue;&#34;&gt;&#34;CHAS&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: blue;&#34;&gt;&#34;NOX&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: blue;&#34;&gt;&#34;RM&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: blue;&#34;&gt;&#34;AGE&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: blue;&#34;&gt;&#34;DIS&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: blue;&#34;&gt;&#34;RAD&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: blue;&#34;&gt;&#34;TAX&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: blue;&#34;&gt;&#34;PTRATIO&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: blue;&#34;&gt;&#34;B&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: blue;&#34;&gt;&#34;LSTAT&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: blue;&#34;&gt;&#34;MEDV&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/r-doc/MASS/housing&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;housing&lt;/span&gt;&lt;/a&gt;$CHAS=&lt;a href=&#34;http://inside-r.org/r-doc/base/as.factor&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;as.factor&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/MASS/housing&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;housing&lt;/span&gt;&lt;/a&gt;$CHAS&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/r-doc/MASS/housing&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;housing&lt;/span&gt;&lt;/a&gt;$RAD=&lt;a href=&#34;http://inside-r.org/r-doc/base/as.factor&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;as.factor&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/MASS/housing&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;housing&lt;/span&gt;&lt;/a&gt;$RAD&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;# Changed to factor bc only 9 unique values&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/summary&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;summary&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/MASS/housing&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;housing&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/set.seed&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;set.seed&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;20120823&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;cv=&lt;a href=&#34;http://inside-r.org/r-doc/base/sample&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sample&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/nrow&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;nrow&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/MASS/housing&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;housing&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;train=&lt;a href=&#34;http://inside-r.org/r-doc/MASS/housing&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;housing&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;cv&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color: #cc66cc;&#34;&gt;300&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;br /&gt;valid=&lt;a href=&#34;http://inside-r.org/r-doc/MASS/housing&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;housing&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;cv&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;301&lt;/span&gt;:&lt;span style=&#34;color: #cc66cc;&#34;&gt;400&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;br /&gt;test=&lt;a href=&#34;http://inside-r.org/r-doc/MASS/housing&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;housing&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;cv&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;401&lt;/span&gt;:&lt;a href=&#34;http://inside-r.org/r-doc/base/nrow&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;nrow&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/MASS/housing&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;housing&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;ssto=&lt;a href=&#34;http://inside-r.org/r-doc/base/sum&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sum&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;valid$MEDV-&lt;a href=&#34;http://inside-r.org/r-doc/base/mean&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;mean&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;valid$MEDV&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;^&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;evaluate &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/base/function&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;function&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;th&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt; &lt;br /&gt;  num.cols=&lt;a href=&#34;http://inside-r.org/r-doc/base/sum&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sum&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;th&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;num.cols == &lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;a href=&#34;http://inside-r.org/r-doc/base/return&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;return&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  fo.str=&lt;span style=&#34;color: blue;&#34;&gt;&#34;MEDV ~&#34;&lt;/span&gt;&lt;br /&gt;  cum.cols=&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;i &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;:&lt;a href=&#34;http://inside-r.org/r-doc/base/length&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;length&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;th&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;th&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&amp;gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;      &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/is.factor&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;is.factor&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;train&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;i&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;        fo.str=&lt;a href=&#34;http://inside-r.org/r-doc/base/paste&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;paste&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;fo.str&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/colnames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;colnames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;train&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;sep=&lt;span style=&#34;color: blue;&#34;&gt;&#34; &#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;      &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;        fo.str=&lt;a href=&#34;http://inside-r.org/r-doc/base/paste&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;paste&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;fo.str&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34; s(&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/colnames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;colnames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;train&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;)&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;sep=&lt;span style=&#34;color: blue;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;      &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;      cum.cols=cum.cols+&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;br /&gt;      &lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;cum.cols&amp;lt;num.cols&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;{&lt;/span&gt;&lt;br /&gt;        fo.str=&lt;a href=&#34;http://inside-r.org/r-doc/base/paste&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;paste&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;fo.str&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;+&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;      &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;#   colnames(train)[c(th,0)==1]&lt;/span&gt;&lt;br /&gt;  fo=&lt;a href=&#34;http://inside-r.org/r-doc/stats/as.formula&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;as.formula&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;fo.str&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  gam1 &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/mgcv/gam&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;gam&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;fo&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/utils/data&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data&lt;/span&gt;&lt;/a&gt;=train&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  pred1 &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/stats/predict&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;predict&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;gam1&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;valid&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;se=&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;FALSE&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  sse &amp;lt;- &lt;a href=&#34;http://inside-r.org/r-doc/base/sum&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;sum&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;pred1-valid$MEDV&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;^&lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;na.rm=&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;TRUE&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;a href=&#34;http://inside-r.org/r-doc/base/return&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;return&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;-sse/ssto&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;res &amp;lt;- tabuSearch&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;size = &lt;a href=&#34;http://inside-r.org/r-doc/base/ncol&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;ncol&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;train&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;-&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; iters = &lt;span style=&#34;color: #cc66cc;&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; objFunc = evaluate&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; listSize = &lt;span style=&#34;color: #cc66cc;&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;br /&gt;                  config = &lt;a href=&#34;http://inside-r.org/r-doc/stats/rbinom&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rbinom&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/ncol&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;ncol&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;train&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;-&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;.5&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; nRestarts = &lt;span style=&#34;color: #cc66cc;&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;verbose=&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;TRUE&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;br /&gt;It was able to find a subset with a 0.8678 R-squared on the validation set (and 0.8349 on the test set). The formula found was:&lt;br /&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;-webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: #e1e2e5; border-collapse: separate; color: black; font-family: &#39;Lucida Console&#39;; font-size: 13px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 15px; orphans: 2; text-align: -webkit-left; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: 2; word-spacing: 0px;&#34;&gt;&lt;/span&gt;&lt;br /&gt;&lt;pre class=&#34;GDXA2EVBEAB&#34; style=&#34;border-bottom-style: none; border-color: initial; border-left-style: none; border-right-style: none; border-top-style: none; border-width: initial; font-family: &#39;Lucida Console&#39;; font-size: 10pt !important; line-height: 1.2; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; outline-color: initial; outline-style: none; outline-width: initial; white-space: pre-wrap !important;&#34; tabindex=&#34;0&#34;&gt;MEDV ~ s(CRIM) + s(INDUS) + s(NOX) + s(RM) + s(DIS) + RAD + s(TAX) + s(PTRATIO) + s(LSTAT).&lt;/pre&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Visualizing the results&lt;/h3&gt;The tabu search gave me a subset which it thinks is best. But I would like to get a better handle on how it derived it, or if there were lots of models with similar quality, but different variables. Or if there were variables that were always in the top performing models. I created a heat plot that showed whether or not a variable was in the regression or not at each iteration.&lt;br /&gt;&lt;br /&gt;Below you can see which variables were included in each iteration. There are a few variables that seem to be more important because they are included in almost every iteration, like LSAT, PTRATIO,and RM. But this doesn&#39;t tell me which iterations were the best.&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-h7QkQGRQv7c/UDZm5Lfp40I/AAAAAAAAHKY/EDABwfjZ5R8/s1600/tabu1.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://1.bp.blogspot.com/-h7QkQGRQv7c/UDZm5Lfp40I/AAAAAAAAHKY/EDABwfjZ5R8/s1600/tabu1.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;In the chart below, I shaded each region by the ranking of model in that iteration. The higher ranking mean it did better. It is not easy, but we can glean a little more information from this chart. The models with RAD and DIS do significantly better than the models without them, even though they are not in every iteration. Further, the models with AGE seem a bit worse than those without it.&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-TJKQO3ItVkQ/UDZm5o2REyI/AAAAAAAAHKg/UqqyqZ6EELs/s1600/tabu2.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-TJKQO3ItVkQ/UDZm5o2REyI/AAAAAAAAHKg/UqqyqZ6EELs/s1600/tabu2.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;The R code to make these plots is below.&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;overflow: auto;&#34;&gt;&lt;div class=&#34;geshifilter&#34;&gt;&lt;pre class=&#34;r geshifilter-R&#34; style=&#34;font-family: monospace;&#34;&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/library&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;library&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/stats/reshape&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;reshape&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/library&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;library&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/packages/cran/ggplot2&#34;&gt;ggplot2&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; theme_set&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;theme_bw&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&lt;br /&gt;tabu.df=&lt;a href=&#34;http://inside-r.org/r-doc/base/data.frame&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;data.frame&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;res$configKeep&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/colnames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;colnames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;tabu.df&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;=&lt;a href=&#34;http://inside-r.org/r-doc/base/colnames&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;colnames&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;train&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;a href=&#34;http://inside-r.org/r-doc/base/ncol&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;ncol&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;train&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;-&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;]&lt;/span&gt;&lt;br /&gt;tabu.df$Iteration=&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;:&lt;a href=&#34;http://inside-r.org/r-doc/base/nrow&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;nrow&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;tabu.df&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;tabu.df$RSquared=res$eUtilityKeep&lt;br /&gt;tabu.df$Rank=&lt;a href=&#34;http://inside-r.org/r-doc/base/rank&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;rank&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;tabu.df$RSquared&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;tabu.melt=melt&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;tabu.df&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;id=&lt;a href=&#34;http://inside-r.org/r-doc/base/c&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;c&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;Iteration&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;RSquared&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: blue;&#34;&gt;&#34;Rank&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;tabu.melt$RSquared=&lt;a href=&#34;http://inside-r.org/r-doc/base/ifelse&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;ifelse&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;tabu.melt$value==&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;tabu.melt$RSquared&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;tabu.melt$Rank=&lt;a href=&#34;http://inside-r.org/r-doc/base/ifelse&#34;&gt;&lt;span style=&#34;color: #003399; font-weight: bold;&#34;&gt;ifelse&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;tabu.melt$value==&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;tabu.melt$Rank&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;pHeat01 &amp;lt;- &lt;a href=&#34;http://inside-r.org/packages/cran/ggplot&#34;&gt;ggplot&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;tabu.melt&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;Iteration&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;variable&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; + geom_tile&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;fill = value&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; +&lt;br /&gt;  scale_fill_gradient&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;low = &lt;span style=&#34;color: blue;&#34;&gt;&#34;white&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; high = &lt;span style=&#34;color: blue;&#34;&gt;&#34;steelblue&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;guide=&lt;span style=&#34;color: black; font-weight: bold;&#34;&gt;FALSE&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;pHeatRank &amp;lt;- &lt;a href=&#34;http://inside-r.org/packages/cran/ggplot&#34;&gt;ggplot&lt;/a&gt;&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;tabu.melt&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;Iteration&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;variable&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; + geom_tile&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;aes&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;fill = Rank&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt; +&lt;br /&gt;  scale_fill_gradient&lt;span style=&#34;color: #009900;&#34;&gt;(&lt;/span&gt;low = &lt;span style=&#34;color: blue;&#34;&gt;&#34;white&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; high = &lt;span style=&#34;color: blue;&#34;&gt;&#34;steelblue&#34;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#34;http://www.inside-r.org/pretty-r&#34; title=&#34;Created by Pretty R at inside-R.org&#34;&gt;Created by Pretty R at inside-R.org&lt;/a&gt;&lt;/div&gt;
&lt;h2&gt;Comments&lt;/h2&gt;
&lt;div class=&#39;comments&#39;&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;anonymous&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Good post!&lt;br /&gt;&lt;br /&gt;Nice approach with the heat map to go beyond just accepting the optimal solution. I agree that variables seem to be important because they are present in every iteration, but this could perhaps also mean that the tabu search was trapped in a subregion - perhaps the search move operator which only adds or deletes a single variable is not powerful enough to escape this region. Some possible remedies for exploring a larger part of the search landscape (if indeed this is a problem) might be:&lt;br /&gt;&lt;br /&gt;- Multiple tabu searches, each with a randomized set of initial variables in the model&lt;br /&gt;- Other move operators. How about finding correlation clusters among the variables, then let a move add or delete the entire cluster? Both move operators can be used in the search, using some metaheuristics to guide them.&lt;br /&gt;- Use metaheuristic techniques like &amp;quot;ruin and recreate&amp;quot; during the tabu search; occasionally, &amp;quot;ruin&amp;quot; the model by removing a random subset of the variables.&lt;br /&gt;&lt;br /&gt;One more thought. With the tabu search already in place for regression, it wouldn´t be too hard to explore some nonlinear models. You could create temp variables that are products of the original variables, then let the tabu search add or delete these as well. Do you think such an approach would have any merit in this case?&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Andrew&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
@Anonymous I would also like to see how this does compared to the more standard methods. It will take a little effort to implement in this example, though, because these variable selection techniques are not implemented for GAMs (as far as I know). http://www.statmethods.net/stats/regression.html has a nice summary of different methods available for linear models. You are right that the whole point of using a TS is that it will be better than the other methods, so it would be good to have validation. Maybe I could do a comparison for linear models...&lt;br /&gt;&lt;br /&gt;I described the meat of the TS algorithm in the post. If you want more info, I found this reference informative http://www.math.ntua.gr/~fouskakis/Publications/4.pdf &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Andrew&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
@anspiess That is probably a good idea. But one reason to use Tabu Search is that it will speed up the time to find the best model. Running it many times will defeat this purpose. Running time for the parameters used was long already because GAMs take longer to train than LMs (~ 9 mins). In terms of better understanding TS, your idea would be useful. For what its worth, I ran it again with a different CV split and the chosen model was the same except it added s(ZN) and removed s(PTRATIO).&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;anspiess&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Might it be feasible to sample training and test set a few hundred times to see how stable variable selection is?&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Anonymous&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
I wonder how this method is better than using F test, t test or information criterion? did you compare tabusearch to other methods (for linear models)? maybe it its faster than standard methods? I would be grateful for answers:)  if it its possible maybe you can describe this algorithm more closely.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>A Matrix Factorization Model for Hitter/Pitcher Matchups</title>
      <link>/2012/08/10/a-matrix-factorization-model-for-hitter/pitcher-matchups/</link>
      <pubDate>Fri, 10 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/08/10/a-matrix-factorization-model-for-hitter/pitcher-matchups/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
&lt;h3&gt;Introduction &lt;/h3&gt;Matrix factorization has been proven to be one of the best ways to do collaborative filtering. The most common example of collaborative filtering is to predict how much a viewer will like a movie. The power of matrix factorization was a key development of the Netflix Prize (see &lt;a href=&#34;http://www2.research.att.com/%7Evolinsky/papers/ieeecomputer.pdf&#34;&gt;http://www2.research.att.com/~volinsky/papers/ieeecomputer.pdf&lt;/a&gt;).&lt;br /&gt;&lt;br /&gt;Using the movie rating example, the idea is that there are some underlying features of the movie and underlying attributes of the user that interact to determine if the user will like the movie. So if the user typically likes comedies, and the movie is a comedy, these will interact and the user will like the movie. The best part is that in order to determine these features, we do not need to use any background information on the movie or the user. For example, we don&#39;t need someone to manually code whether each movie is a comedy or not. Matrix factorization just needs a set of historical ratings, which is usually easily available.&lt;br /&gt;&lt;br /&gt;Using only a few features, we could probably interpret what each of them mean (comedy, drama, foreign, blockbuster, ...). They found in the Netflix competition that increasing the number of underlying features that make up a user and a movie almost always improved accuracy (they used up to 1500 features). With that many features, they can no longer be interpreted as in the example.&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Baseball Data&lt;/h3&gt;I find this method interesting, and I wanted to apply it to some real data. One idea I had is predicting whether the result of a pitcher-batter match-up in baseball. Usually in baseball, the analysts cry &#34;small sample size&#34; if someone reports that a pitcher is particularly good/bad versus a batter. In order to get an accurate assessment that does not suffer from random variation, we need 100 or more at bats, which usually takes a few years at least.&lt;br /&gt;&lt;br /&gt;It seems that matrix factorization might be a natural fit, because we are not predicting the specific interaction of the batter/pitcher. Instead, we are estimating some underlying features of the batter and the pitcher. We can estimate these features from all of the match-ups that the batter and pitcher have been in -- not just the ones against each other.&lt;br /&gt;&lt;br /&gt;One example of a feature that I hoped to extract is batter and pitcher handedness. It is well known that batters fair poorly against pitchers of the same handedness and do better against pitchers of the opposite handedness. Other examples might relate to whether the pitcher can throw fast and how well the batter does against fast pitches; similarly with breaking balls, etc.&lt;br /&gt;&lt;br /&gt;In the Netflix competition, each user rates movies on a 1 to 5 star scale, and rates the movie only once. The outcome of a match-up is different as there is no obvious &#34;rating&#34; of the outcome. I used improvement in expected number of runs scored of the outcome of a plate appearance as the &#34;rating&#34; to be predicted (from &lt;a href=&#34;http://www.tangotiger.net/RE9902event.html&#34;&gt;here&lt;/a&gt;). So a single is worth 0.474 runs and an out is worth -0.299 runs. Also, in baseball, there will be many match-ups between the batter and pitcher. I could have averaged the outcomes, but I left the multiple records in the data as is.&lt;br /&gt;&lt;br /&gt;I used 2010 data and removed all pitchers that were hitting and batters that were pitching. According to my data, there were 65,128 unique batter-pitcher match-ups (with about 173,000 plate appearances). I used 5,000 match-ups as validation, 5,000 as testing, and the remaining as training.&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Model Fitting&lt;/h3&gt;The first model I used as a baseline just included &#34;biases&#34; for the batter and pitcher, as well as an overall league average bias. In the baseline, there are no factors or interactions. So the result of the match-up between a batter i and pitcher j would be estimated as the overall average bias plus the batter i bias plus the pitcher j bias. In math terms:&lt;br /&gt;&lt;br /&gt;&lt;a href=&#34;http://www.codecogs.com/eqnedit.php?latex=%5Cdpi%7B120%7D%20%5Cmu@plus;b_i@plus;p_j&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://latex.codecogs.com/png.latex?%5Cdpi%7B120%7D%20%5Cmu+b_i+p_j&#34; title=&#34;\dpi{120} \mu+b_i+p_j&#34; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Higher values for the batter bias mean the batter is better better than average and lower values for the pitcher bias means the pitcher is better than average.&lt;br /&gt;&lt;br /&gt;So as to not overfit the data, I used L2 regularization on the batter and pitcher biases. For this and future estimation, I used the validation data to determine the best penalty and I used a gradient descent method to solve for the parameters.&lt;br /&gt;&lt;br /&gt;Adding in the factor interaction, the result of the match-up between a batter i and pitcher j is&lt;br /&gt;&lt;br /&gt;&lt;a href=&#34;http://www.codecogs.com/eqnedit.php?latex=%5Cdpi%7B120%7D%20%5Cmu@plus;b_i@plus;p_j%20@plus;%20%5Cboldsymbol%7Bo%7D_i%5ET%20%5Cboldsymbol%7Bd%7D_j&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://latex.codecogs.com/png.latex?%5Cdpi%7B120%7D%20%5Cmu+b_i+p_j%20+%20%5Cboldsymbol%7Bo%7D_i%5ET%20%5Cboldsymbol%7Bd%7D_j&#34; title=&#34;\dpi{120} \mu+b_i+p_j + \boldsymbol{o}_i^T \boldsymbol{d}_j&#34; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;where &lt;a href=&#34;http://www.codecogs.com/eqnedit.php?latex=%5Cdpi%7B120%7D%20%5Cboldsymbol%7Bo%7D_i&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://latex.codecogs.com/png.latex?%5Cdpi%7B120%7D%20%5Cboldsymbol%7Bo%7D_i&#34; title=&#34;\dpi{120} \boldsymbol{o}_i&#34; /&gt;&lt;/a&gt; is a vector of offensive features for batter i and &lt;a href=&#34;http://www.codecogs.com/eqnedit.php?latex=%5Cdpi%7B120%7D%20%5Cboldsymbol%7Bd%7D_j&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://latex.codecogs.com/png.latex?%5Cdpi%7B120%7D%20%5Cboldsymbol%7Bd%7D_j&#34; title=&#34;\dpi{120} \boldsymbol{d}_j&#34; /&gt;&lt;/a&gt; is a set of defensive features for pitcher j. The two vectors must be of the same length which we can determine. Again, I used L2 regularization on the feature vectors.&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Results&lt;/h3&gt;I fit the matrix factorization model using 0, 1, 2, 5, and 10 features. The model with 0 features corresponds to the baseline model. As stated above, I was hoping to see that handedness would show up as one of the first features.&lt;br /&gt;&lt;br /&gt;I fit the models with the training set, tuned the regularization parameters with the validation set, and finally I am comparing the models with the test set. Unfortunately, the baseline model performed the best of all and the performance degraded as more features were added. A plot of the test mean squared errors is below. The difference between the models is small, but I believe that is because the regularization parameter is shrinking the factor vectors to 0.&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-8doS-OZmBzs/UCUmUQWdo_I/AAAAAAAAHKA/CmE1rs9YYOc/s1600/MatFactTestMSE.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://1.bp.blogspot.com/-8doS-OZmBzs/UCUmUQWdo_I/AAAAAAAAHKA/CmE1rs9YYOc/s1600/MatFactTestMSE.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;A further baseline model could have been used -- an overall mean with no biases. The MSE for all but the 10-factor  model were better than this average. So the biases help, but unfortunately the factorization did not.&lt;br /&gt;&lt;br /&gt;I compared the factor vectors of the pitchers by their handedness and I found no difference between righties and lefties.&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Summary&lt;/h3&gt;The outcome of this analysis was not what I hoped for, but I still learned something about matrix factorization and its implementation. I think the moral of the story is that it is hard to predict batter-pitcher match-ups, probably because there is a lot of variation in every at bat. Matrix factorization has been successfully applied in situations where the data is much more sparse than this application, so this difference may be a reason for its failure. I plan to try this again with the &lt;a href=&#34;http://www.libfm.org/&#34;&gt;libFM&lt;/a&gt; software to see if I get the same results.&lt;br /&gt;&lt;br /&gt;&lt;i&gt;&lt;b&gt;Update:&lt;/b&gt;&lt;/i&gt;&lt;br /&gt;I implemented this in libFM and basically got the same results, so I guess I was doing it correctly. If I work on this further, I wonder if adding attributes about the pitcher explicitly would help. I would include an indicator for righty/lefty or maybe home/away.&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>The Magical Sparse Matrix</title>
      <link>/2012/07/20/the-magical-sparse-matrix/</link>
      <pubDate>Fri, 20 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/07/20/the-magical-sparse-matrix/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
I have been toying around with Kaggle&#39;s &lt;a href=&#34;http://www.kaggle.com/c/msdchallenge/&#34;&gt;Million Song Dataset Challenge&lt;/a&gt; recently because I have some interest in &lt;a href=&#34;http://en.wikipedia.org/wiki/Collaborative_filtering&#34;&gt;collaborative filtering&lt;/a&gt; (using &lt;a href=&#34;http://www2.research.att.com/%7Evolinsky/papers/ieeecomputer.pdf&#34; target=&#34;_blank&#34;&gt;matrix factorization&lt;/a&gt;). I haven&#39;t made much progress with the competition (all 3 of my submissions are below the baseline), but I have learned a few things about dealing with large amounts of data.&lt;br /&gt;&lt;br /&gt;The goal of the competition is to predict the 500 most likely songs each of 110,000 users will listen to next. As the name implies, there are 1,000,000 songs in the full dataset. To simplify things, I decided to concentrate on the most popular songs. I created a 110,000 x 2,000 matrix of 0&#39;s and 1&#39;s. Row i, column j is 1 if user i had listened to song j (the jth most popular song) and 0 if user i had not. As you can imagine, there are a lot more 0&#39;s than 1&#39;s in this matrix. The first few rows and columns look like this:&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;&lt;span style=&#34;font-size: small;&#34;&gt;0 0 1 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 ...&lt;/span&gt;&lt;/div&gt;&lt;div style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;&lt;span style=&#34;font-size: small;&#34;&gt;0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...&lt;/span&gt;&lt;/div&gt;&lt;div style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;&lt;span style=&#34;font-size: small;&#34;&gt;1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...&lt;/span&gt;&lt;/div&gt;&lt;div style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;&lt;span style=&#34;font-size: small;&#34;&gt;...&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;This matrix was about 430 Mb and took a while to load into MATLAB. So I wisened up and created a &lt;a href=&#34;http://en.wikipedia.org/wiki/Sparse_matrix&#34;&gt;sparse matrix&lt;/a&gt;. A sparse matrix realizes that most of the values are 0&#39;s and does not record them. Instead, it lists the locations of the non-zero elements and what the value is. For example, this is what the first few rows of the sparse matrix looks like:&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;&lt;span style=&#34;font-size: small;&#34;&gt;1 3 1&lt;br /&gt;1 7 1&lt;br /&gt;1 10 1&lt;br /&gt;1 13 1&lt;br /&gt;1 82 1&lt;br /&gt;1 717 1&lt;br /&gt;2 1111 1&lt;br /&gt;2 2972 1&lt;br /&gt;2 3516 1&lt;/span&gt;&lt;/div&gt;&lt;div style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;&lt;span style=&#34;font-size: small;&#34;&gt;...&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;The first column is the row number, the second is the column number, and the third is the value at that location. In this application, all the values are 1. For this matrix, I used the 50,000 most popular songs (instead of just 2,000), and the size was much smaller -- just 17 Mb.&lt;br /&gt;&lt;br /&gt;It is easy to load the sparse matrix into MATLAB with the &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;spconvert&lt;/span&gt; command, and many of MATLAB&#39;s functions (like singular value decomposition) are optimized for sparse matrices.&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Random Forest Variable Importance</title>
      <link>/2012/07/19/random-forest-variable-importance/</link>
      <pubDate>Thu, 19 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/07/19/random-forest-variable-importance/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
&lt;a href=&#34;http://en.wikipedia.org/wiki/Random_forest&#34;&gt;Random&lt;/a&gt; &lt;a href=&#34;http://www.stat.berkeley.edu/%7Ebreiman/RandomForests/&#34;&gt;forests&lt;/a&gt; ™ are great. They are one of the best &#34;black-box&#34; supervised learning methods. If you have lots of data and lots of predictor variables, you can do worse than random forests. They can deal with messy, real data. If there are lots of extraneous predictors, it has no problem. It automatically does a good job of finding interactions as well. There are no assumptions that the response has a linear (or even smooth) relationship with the predictors.&lt;br /&gt;&lt;br /&gt;As cited in the Wikipedia article, they do lack some interpretability. But what they lack in interpretation, they more than make up for in prediction power, which I believe is much more important than interpretation in most cases. Even though you cannot easily tell how one variable affects the prediction, you can easily create a &lt;i&gt;partial dependence plot&lt;/i&gt; which shows how the response will change as you change the predictor. You can also do this for two variables at once to see the interaction of the two.&lt;br /&gt;&lt;br /&gt;Also helping in the interpretation is that they can output a list of predictor variables that they believe to be important in predicting the outcome. If nothing else, you can subset the data to only include the most &#34;important&#34; variables, and use that with another model. The randomForest package in R has two measures of importance. &lt;a href=&#34;http://rss.acs.unt.edu/Rdoc/library/randomForest/html/importance.html&#34;&gt;One &lt;/a&gt;is &#34;total decrease in node impurities from splitting on the variable, averaged over all trees.&#34; I do not know much about this one, and will not talk about it further. The other is based on a &lt;a href=&#34;http://en.wikipedia.org/wiki/Resampling_%28statistics%29#Permutation_tests&#34;&gt;permutation test&lt;/a&gt;. The idea is that if the variable is not important (the null hypothesis), then rearranging the values of that variable will not degrade prediction accuracy. Random forests use out-of-bag (OOB) samples to measure prediction accuracy.&lt;br /&gt;&lt;br /&gt;In my experience, it does a pretty good job of finding the most important predictors, but it has issues with correlated predictors. For example, I was working on a problem where I was predicting the price that electricity trades. One feature that I knew would be very important was the amount of electricity being used at that same time. But I thought there might also be a relationship between price and the electricity being used a few hours before and after. When I ran the random forest with these variables, the electricity used 1 hour after was found to be more important than the electricity used at the same time. When including the 1 hour after electricity use instead of the current hour electricity use, the cross validation (CV) error increased. Using both did not significantly change the CV error compared to using just current hour. Because the electricity used at the current hour and the hour after are very correlated, it had trouble telling which one was more important. In truth, given the electricity use at the current hour, the electricity use at the hour after did not improve the predictive accuracy.&lt;br /&gt;&lt;br /&gt;Why does the importance measure give more weight correlated predictors? &lt;a href=&#34;http://www.biomedcentral.com/1471-2105/9/307/&#34;&gt;Strobl et al.&lt;/a&gt; give some intuition behind what is happening and propose a solution. Basically, the permutation test is ill-posed. The permutation test is testing that the variable is independent of the response as well as all other predictors. Since the correlated predictors are obviously not independent, we get high importance scores. They propose a permutation test where you condition on the correlated predictors. This is a little tricky when the correlated predictors are continuous, but you can read the paper for more details.&lt;br /&gt;&lt;br /&gt;Another way to think of it is that, since each split only considers a subset of the possible variables, a variable that is correlated with an &#34;important&#34; variable may be considered without the &#34;important&#34; variable. This would cause the correlated variable to be selected for the split. The correlated value does hold some predictive value, but only because of the truly important variable, so it is understandable why this procedure would consider it important.&lt;br /&gt;&lt;br /&gt;I ran a simulation experiment (similar to the one in the paper) to demonstrate the issue. I simulated 5 predictor variables. Only the first one is related to the response, but the second one has a correlation of about 0.7 with the first one. Luckily, Strobl et al. included their version of importance in the package &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;party&lt;/span&gt; in &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;R&lt;/span&gt;. I compare variable importance from the &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;randomForest &lt;/span&gt;package and the importance with and without taking correlated predictors into account from the &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;party&lt;span style=&#34;font-family: inherit;&#34;&gt; &lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;font-family: inherit;&#34;&gt;pac&lt;/span&gt;kage.&lt;br /&gt;&lt;br /&gt;&lt;pre class=&#34;brush: r&#34;&gt;# simulate the data&lt;br /&gt;x1=rnorm(1000)&lt;br /&gt;x2=rnorm(1000,x1,1)&lt;br /&gt;y=2*x1+rnorm(1000,0,.5)&lt;br /&gt;df=data.frame(y,x1,x2,x3=rnorm(1000),x4=rnorm(1000),x5=rnorm(1000))&lt;br /&gt;&lt;br /&gt;# run the randomForest implementation&lt;br /&gt;library(randomForest)&lt;br /&gt;rf1 &amp;lt;- randomForest(y~., data=df, mtry=2, ntree=50, importance=TRUE)&lt;br /&gt;importance(rf1,type=1)&lt;br /&gt;&lt;br /&gt;# run the party implementation&lt;br /&gt;library(party)&lt;br /&gt;cf1 &amp;lt;- cforest(y~.,data=df,control=cforest_unbiased(mtry=2,ntree=50))&lt;br /&gt;varimp(cf1)&lt;br /&gt;varimp(cf1,conditional=TRUE)&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;For the &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;randomForest&lt;/span&gt;, the ratio of importance of the the first and second variable is 4.53. For &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;party&lt;/span&gt; without accounting for correlation it is 7.35. And accounting for correlation, it is 369.5. The higher ratios are better because it means that the importance of the first variable is more prominent. party&#39;s implementation is clearly doing the job.&lt;br /&gt;&lt;br /&gt;There is a downside. It takes much longer to calculate importance with correlated predictors than without. For the party package in this example, it took 0.39 seconds to run without and 204.34 seconds with. I could not even run the correlated importance on the electricity price example. There might be a research opportunity to get a quicker approximation.&lt;br /&gt;&lt;br /&gt;Possibly up next: confidence limits for random forest predictions.&lt;/div&gt;
&lt;h2&gt;Comments&lt;/h2&gt;
&lt;div class=&#39;comments&#39;&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Abhijeet Patil&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
hi,m new to random forest.. i ve some doubts..&lt;br /&gt;1)&amp;quot;we need to choose m number of variables randomly for each node..&amp;quot;-can u pleas explain it..&lt;br /&gt;OR&lt;br /&gt;2)&amp;quot;take 1 bootstrap sample,choose some variables and create a decision tree&amp;quot;-is it correct??&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Anonymous&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Could you tell me what the numbers mean when ctree and randonForest return variable importance numbers please? I can get the output but I don&amp;#39;t know how to interpret them.&lt;br /&gt;&lt;br /&gt;Than you very much.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Anonymous&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
HI Andrew, When i tried to calculate the variable importance, I get the error &lt;br /&gt;&amp;quot;Error in model.matrix.default(as.formula(f), data = blocks) : &lt;br /&gt;  allocMatrix: too many elements specified&amp;quot;&lt;br /&gt;&lt;br /&gt;I&amp;#39;m not sure how to deal with it because I have 2 factor levels which I&amp;#39;m predicting with 23 continuous variable predictors (about 2200 data points. I know it&amp;#39;s a lot to work with, but not sure how to get the correct VarImp values with this large data set.&lt;br /&gt;&lt;br /&gt;I tried increasing the threshold, but it didn&amp;#39;t help. fit.varimp=varimp(fit.cf,threshold=0.8,conditional=TRUE)&lt;br /&gt;&lt;br /&gt;Do you have any suggestions? Thanks.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Andrew Landgraf&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Unfortunately, I didn&amp;#39;t set the seed. #nexttime&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Anonymous&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
you should provide the seed to reproduce your example&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Andrew&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
It should be able to give you a solution. I have no idea what ramifications this would have on accuracy or variable importance.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Anonymous&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
I have microarray data on 30 entries and thought of using RF to identify important response genes. I understand that this is a N&amp;lt;&amp;lt;p type of problems, but will &amp;#39;party&amp;#39; be able to come up with a solution?&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Andrew&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
The simple answer is using the partialPlot function in the randomForest package for R (http://rgm2.lab.nig.ac.jp/RGM2/func.php?rd_id=randomForest:partialPlot). &lt;br /&gt;&lt;br /&gt;What it is doing isn&amp;#39;t all that complicated. Say you want a partial dependence plot for the variable X_1. For each value of X_1=x that you want to plot, you take the average of the prediction with X_1=x and the other explanatory variables equal to the n values that they are in the data set. You are trying to average out the other variables.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;nanounanue&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Great explanation!&lt;br /&gt;&lt;br /&gt;I have a question for you: In your text you said:&lt;br /&gt;&lt;br /&gt;&amp;quot;&amp;quot;&amp;quot;&lt;br /&gt; ... Even though you cannot easily tell how one variable affects the prediction, you can easily create a partial dependence plot which shows how the response will change as you change the predictor. You can also do this for two variables at once to see the interaction of the two.&lt;br /&gt;&amp;quot;&amp;quot;&amp;quot;&lt;br /&gt;&lt;br /&gt;Could you provide, please, an example of how build the partial dependence plot?&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Thank you for the post and thanks in advance&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Anonymous&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Great post!  Thank you.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Rounding in R</title>
      <link>/2012/06/15/rounding-in-r/</link>
      <pubDate>Fri, 15 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/06/15/rounding-in-r/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
Forgive me if you are already aware of this, but I found it quite alarming. I know that most code is interpreted by the computer in binary and we input in decimal, so problems can arise in conversion and with &lt;a href=&#34;http://en.wikipedia.org/wiki/Floating_point&#34;&gt;floating point&lt;/a&gt;. But the example I have below is so simple that it really surprised me.&lt;br /&gt;&lt;br /&gt;I was converting a function from R into MATLAB so that a colleague could use it. I tested it out on the same data and got slightly different results. Digging into the problem, the difference was due to the fact that R was rounding 4.5 to 4 and MATLAB was rounding it to 5. I thought the &#34;4.5&#34; must have really been &#34;4.49999...&#34;. But that was not so.&lt;br /&gt;&lt;br /&gt;For example, this is the result of the &lt;a href=&#34;http://stat.ethz.ch/R-manual/R-devel/library/base/html/Round.html&#34;&gt;round&lt;/a&gt; function for a few numbers.&lt;br /&gt;&lt;pre class=&#34;brush: r&#34;&gt;&amp;gt; round(0.5,0)&lt;br /&gt;[1] 0&lt;br /&gt;&amp;gt; round(1.5,0)&lt;br /&gt;[1] 2&lt;br /&gt;&amp;gt; round(2.5,0)&lt;br /&gt;[1] 2&lt;br /&gt;&amp;gt; round(3.5,0)&lt;br /&gt;[1] 4&lt;br /&gt;&amp;gt; round(4.5,0)&lt;br /&gt;[1] 4&lt;br /&gt;&amp;gt; round(5.5,0)&lt;br /&gt;[1] 6&lt;br /&gt;&amp;gt; round(6.5,0)&lt;br /&gt;[1] 6&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;Do you see a pattern?&lt;br /&gt;&lt;br /&gt;I tried this on versions 2.13.1 and 2.14.0. I ran the same with MATLAB and it gave the expected results. I am not any kind of expert on computer sciences, so I was not sure why this is happening. &lt;a href=&#34;http://www.mathsisfun.com/binary-decimal-hexadecimal-converter.html&#34;&gt;Converting &lt;/a&gt;any decimal number that ends in .5 into binary results in a finite length binary number. For example, 4.5 is 100.1 in binary. Because of this, I wouldn&#39;t think the error would be due to floating points, but I really don&#39;t know.&lt;br /&gt;&lt;br /&gt;Looking at the &lt;a href=&#34;http://stat.ethz.ch/R-manual/R-devel/library/base/html/Round.html&#34;&gt;documentation&lt;/a&gt; for round, I found the reason. It states in the notes, &#34;Note that for rounding off a 5, the &lt;a href=&#34;http://en.wikipedia.org/wiki/IEEE_754-2008#Rounding_rules&#34;&gt;IEC 60559 standard&lt;/a&gt; is expected to be used, ‘&lt;em&gt;go to the even digit&lt;/em&gt;’.&#34; It is a little comforting knowing that there is a logic behind it and that R is abiding to some standard. But why isn&#39;t MATLAB abiding by the same standard? Also, I think most people expect numbers ending in .5 to round up, not the nearest even digit.&lt;/div&gt;
&lt;h2&gt;Comments&lt;/h2&gt;
&lt;div class=&#39;comments&#39;&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Analytic Bastard&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
kudos Blaise&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Anonymous&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Andrew wrote &amp;quot;Also, I think most people expect numbers ending in .5 to round up (not the nearest even digit)&amp;quot;. This kind of rounding is in German called &amp;quot;kaufmännische Rundung&amp;quot; (rounding in commerce). For this purpose I use the following function:&lt;br /&gt;&lt;br /&gt;#Definition of a function for &amp;quot;rounding in commerce&amp;quot;&lt;br /&gt;cround = function(x,n){&lt;br /&gt;vorz = sign(x)&lt;br /&gt;z = abs(x)*10^n&lt;br /&gt;z = z + 0.5&lt;br /&gt;z = trunc(z)&lt;br /&gt;z = z/10^n&lt;br /&gt;z*vorz&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;# Example&lt;br /&gt;&amp;gt; round(seq(0.5,6.5,1),0)&lt;br /&gt;[1] 0 2 2 4 4 6 6&lt;br /&gt;&amp;gt; cround(seq(0.5,6.5,1),0)&lt;br /&gt;[1] 1 2 3 4 5 6 7&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;cellocgw&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
This &amp;quot;round to even&amp;quot; approach has been accepted by just about everyone (except matlab, and no surprise, except Msoft Excel).  &lt;br /&gt;Sadly, the flame wars over &amp;quot;round to even&amp;quot; vs. &amp;quot;round up&amp;quot; continue, rather the way people argue about &amp;quot;0.999... != 1&amp;quot;&lt;br /&gt;&lt;br /&gt;PS: @a Tom:  I&amp;#39;m highly skeptical of your &lt;br /&gt;claim about 2.46--&amp;gt;3.  Do you have a citation?&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;a Tom&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
I&amp;#39;m ever amazed that something so seemingly basic can have so many different approaches.&lt;br /&gt;&lt;br /&gt;I understand that in many middle east countries they start with the far right digit and round up or down, so 2.46 is rounded to 3!&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Blaise&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
This is discussed in Don Knuth&amp;#39;s 1973 classic Seminumerical Algorithms. He gives the following example of what can happen when 5s are always rounded upwards. Suppose u = 10000000 and v = 0.5555556. Then u + v = 1.5555556. If we subtract v from this  result we get u&amp;#39; = 1.0000001. Adding and then subtracting v from u&amp;#39; and we get 1.0000002 and if we do it again we get 1.0000003 and so on. He says &amp;quot;This phenomenon, called drift, will not occur when we use a stable rounding rule based on the parity of the least significant digit.&amp;quot;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Anonymous&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
I was the #2 anonymous poster. Echoing Ben, I think that for ease of teaching, the &amp;quot;round 5 up&amp;quot; method is taught to children (and adults?) below the university level, and only if you go on for advance work is the more complicated method taught.&lt;br /&gt;&lt;br /&gt;Can you imagine trying to teach a 10 or 12 year old the IEC 60559 standard? Unfortunately, this is the method most adults are used to...&lt;br /&gt;&lt;br /&gt;I agree, it is a little troubling that Matlab doesn&amp;#39;t abide by the standard. Yet another reason to stick with R!&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Ben Bolker&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Wikipedia ( http://en.wikipedia.org/wiki/Rounding#Round_half_to_even ) says of round-to-even:&lt;br /&gt;&lt;br /&gt;This method also treats positive and negative values symmetrically, and therefore is free of overall bias if the original numbers are positive or negative with equal probability. In addition, for most reasonable distributions of y values, the expected (average) value of the rounded numbers is essentially the same as that of the original numbers, even if the latter are all positive (or all negative). However, this rule will still introduce a positive bias for even numbers (including zero), and a negative bias for the odd ones.&lt;br /&gt;&lt;br /&gt;So round-to-even seems to have *slightly* better numerical properties than &amp;quot;round ties away from zero&amp;quot;, which is what is (I think) most often taught, because it&amp;#39;s easier to understand. http://www.mathworks.com/matlabcentral/fileexchange/6752 gives a MATLAB function for &amp;quot;round to even&amp;quot;.&lt;br /&gt;&lt;br /&gt;If I had to guess I would predict that in borderline cases (which this certainly is) MATLAB would favor &amp;quot;do what will lead to happier users&amp;quot; and R would favor &amp;quot;do what is thought to be the best numerical practice&amp;quot;.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Anonymous&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Hi,&lt;br /&gt;I&amp;#39;m not sure I understand what you mean by &amp;quot;expected results&amp;quot;?&lt;br /&gt;&lt;br /&gt;Regarding rounding, I was taught to round numbers ending in &amp;quot;1, 2, 3, and 4&amp;quot; *down*, and numbers that ended in &amp;quot;6, 7, 8, 9&amp;quot; *up*. Then, specifically regarding &amp;quot;5&amp;quot;, if the preceding digit is odd, round up and if the preceding digit is even, to round down. &lt;br /&gt;&lt;br /&gt;As you can see, this will then result in 50% of the numbers being rounded up, and 50% rounded down. If you round *down* on &amp;quot;1, 2, 3, 4&amp;quot; and round up on &amp;quot;5, 6, 7, 8, 9&amp;quot; you are rounding up 5/9th&amp;#39;s of the time, and so introducing a bias.&lt;br /&gt;&lt;br /&gt;It sounds like R is handling it the way I would. Is that what you were wondering about?&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Anonymous&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
To learn something about how computers handle numbers, especially as it relates to statistics and econometrics:&lt;br /&gt;&lt;br /&gt;B. D. McCullough and H. D. Vinod&lt;br /&gt;&amp;quot;The Numerical Reliability of Econometric Software,&amp;quot;&lt;br /&gt;Journal of Economic Literature 37(2), 633-665, 1999 &lt;br /&gt;&lt;br /&gt;A temporary link is available here:&lt;br /&gt;http://www.pages.drexel.edu/~bdm25/jel.pdf&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Space Time Swing Probability Plot for Ichiro</title>
      <link>/2012/05/30/space-time-swing-probability-plot-for-ichiro/</link>
      <pubDate>Wed, 30 May 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/05/30/space-time-swing-probability-plot-for-ichiro/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
I was having some fun with PITCHf/x data and generalize additive models. &lt;a href=&#34;http://en.wikipedia.org/wiki/PITCHf/x&#34;&gt;PITCHf/x&lt;/a&gt; keeps track of the trajectory, path, location of every pitch in the MLB. It is pretty accurate and opens up baseball to more analyses than ever before. &lt;a href=&#34;http://en.wikipedia.org/wiki/Generalized_additive_model&#34;&gt;Generalized additive models&lt;/a&gt; (GAMs) are statistical models that put minimal assumptions on the type of model you are fitting. Traditional statistical models are linear, in that they assume that the response variable you are modelling is a linear function of the explanatory variables. GAMs just assumes that the relationship is &#34;smooth.&#34; &lt;a href=&#34;http://www.stat.ubc.ca/%7Ematias/rgam/binomial.png&#34;&gt;Here &lt;/a&gt;is a good example of a relationship that may have traditionally been modeled as linear, but it is a much better assumption that the relationship is smooth.&lt;br /&gt;&lt;br /&gt;I fit a GAM to PITCHf/x data. The response is whether or not Ichiro swung. The explanatory variables are pitch location on the x, pitch location on the z, and the day of the year. Obviously, we expect the probability of swinging to change as the pitch is closer or further away from the center of the strike zone. Additionally, I was interested in seeing his swinging propensity changed as the year went on.&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;object class=&#34;BLOGGER-youtube-video&#34; classid=&#34;clsid:D27CDB6E-AE6D-11cf-96B8-444553540000&#34; codebase=&#34;http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0&#34; data-thumbnail-src=&#34;http://i.ytimg.com/vi/44X9VXXjYPI/0.jpg&#34; height=&#34;266&#34; width=&#34;320&#34;&gt;&lt;param name=&#34;movie&#34; value=&#34;http://www.youtube.com/v/44X9VXXjYPI?version=3&amp;f=user_uploads&amp;c=google-webdrive-0&amp;app=youtube_gdata&#34; /&gt;  &lt;param name=&#34;bgcolor&#34; value=&#34;#FFFFFF&#34; /&gt;  &lt;embed width=&#34;320&#34; height=&#34;266&#34;  src=&#34;http://www.youtube.com/v/44X9VXXjYPI?version=3&amp;f=user_uploads&amp;c=google-webdrive-0&amp;app=youtube_gdata&#34; type=&#34;application/x-shockwave-flash&#34;&gt;&lt;/embed&gt;&lt;/object&gt;&lt;/div&gt;&lt;br /&gt;You can see that the probability of swinging is smooth in both location and time. Also, you can see (ever so slightly) that the probability of swinging increased as the year went on. Looking at &lt;a href=&#34;http://www.baseball-reference.com/players/split.cgi?id=suzukic01&amp;amp;year=2010&amp;amp;t=b#half&#34;&gt;the splits&lt;/a&gt;, you can see that his walk percentage was 28/395 (7.1%) in the first half and 17/337 (5.0%) in the second half. This is in agreement with the swing probability increasing,&lt;br /&gt;&lt;br /&gt;I used the &lt;a href=&#34;http://people.bath.ac.uk/sw283/mgcv/tampere/mgcv.pdf&#34;&gt;mgcv &lt;/a&gt;package in R to run the GAM. I created an image for every day and stitched them together into a movie with &lt;a href=&#34;http://ffmpeg.org/&#34;&gt;ffmpeg&lt;/a&gt;. The R code is &lt;a href=&#34;https://docs.google.com/open?id=0B21DLJKq18K9ejNUX0RXQnlJam8&#34;&gt;here&lt;/a&gt;.&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Sending a Text in R</title>
      <link>/2012/05/25/sending-a-text-in-r/</link>
      <pubDate>Fri, 25 May 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/05/25/sending-a-text-in-r/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
Don&#39;t you hate it when you are running a long piece of code and you keep checking the results every 15 minutes, hoping it will finish? There is a better way.&lt;br /&gt;&lt;br /&gt;I got the idea from &lt;a href=&#34;http://jbdeaton.com/2012/send-yourself-an-sms-via-python/&#34;&gt;here&lt;/a&gt;. He uses a Python script and the text interface is not free. I thought someone must have already thought of this for R. There is an easy solution. You can send an email fairly easily in R. You can also send &lt;a href=&#34;http://allthingsmarked.com/2006/09/04/howto-send-free-text-messages-through-email/&#34;&gt;text messages as emails&lt;/a&gt;. &lt;a href=&#34;http://www.decisionstats.com/send-email-by-r/&#34;&gt;This page &lt;/a&gt;gives a few examples of how to send an email in R. Sending a text via email will depend on what carrier you have and I am sure standard text message fees apply.You can only send 20 emails a day with this package, but that probably won&#39;t be a big deal.&lt;br /&gt;&lt;br /&gt;It is basically a one-liner. Here is the code I used:&lt;br /&gt;&lt;pre class=&#34;brush: r&#34;&gt;install.packages(&#34;mail&#34;,repos=&#34;http://cran.case.edu/&#34;)&lt;br /&gt;library(mail)&lt;br /&gt;sendmail(&#34;5555555555@txt.att.net&#34;, &lt;br /&gt;         subject=&#34;Notification from R&#34;,message=&#34;MCMC Finished&#34;, password=&#34;rmail&#34;)&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;That&#39;s it!&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-DaUTmyXUfks/T7_mu1CRtII/AAAAAAAAG8Y/Ike9L7_C_yI/s1600/photo.PNG&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;320&#34; src=&#34;http://1.bp.blogspot.com/-DaUTmyXUfks/T7_mu1CRtII/AAAAAAAAG8Y/Ike9L7_C_yI/s320/photo.PNG&#34; width=&#34;212&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Cleveland Indians&#39; Attendance</title>
      <link>/2012/05/20/cleveland-indians-attendance/</link>
      <pubDate>Sun, 20 May 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/05/20/cleveland-indians-attendance/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
Recently, Chris Perez, the closer for the Indians, displayed &lt;a href=&#34;http://throwinheat.mlblogs.com/2012/05/20/chris-perez-expands-on-his-comments-mark-shapiro-responds/&#34;&gt;some frustration &lt;/a&gt;with the fans for not supporting the team. Currently, they have the &lt;a href=&#34;http://www.baseball-reference.com/leagues/current_attendance.shtml&#34;&gt;lowest attendance &lt;/a&gt;in the majors -- by a decent margin. The Indians are averaging about 15,000 fans per home game, while the next closest team, the Oakland A&#39;s, is averaging 19,000. It seemed like an odd time for Perez to bring this up because they &lt;a href=&#34;http://www.baseball-reference.com/teams/CLE/2012-schedule-scores.shtml&#34;&gt;have had &lt;/a&gt;attendance in the 29,000s each of the last two home games. So that intrigued me to look into the numbers of what causes attendance to vary.&lt;br /&gt;&lt;br /&gt;I looked at &lt;a href=&#34;http://www.baseball-reference.com/teams/CLE/2011-schedule-scores.shtml&#34;&gt;2011 attendance data &lt;/a&gt;for the Cleveland Indians only. I had a strong suspicion that a popular opponent would definitely and weekend games cause attendance to increase. Also, there is usually some press at the beginning of the season that claims no one wants to go to the games because it is too cold for baseball. (There is also more competing entertainment at the beginning of the season.)&lt;br /&gt;&lt;br /&gt;What I found to be significant (based on an exploratory approach) are summarized in the graph below. This plot explores the relationship of attendance with 5 other variables. I plotted attendance on the y-axis and the date on the x-axis. I don&#39;t expect date to have any effect, but it organizes other aspects well (and you can see opening day had the highest attendance of the year). Instead of plotting points, I plotted the name of the opponent. You can see there are some larger attendances when they are playing the New York Yankees and the Cincinnati Reds, for example. The color of the team name indicates whether they are playing on the weekend or not and the size indicates the &lt;a href=&#34;http://academic.udayton.edu/kissock/http/Weather/citylistUS.htm&#34;&gt;temperature&lt;/a&gt;. Probably the biggest effect, weekend games outdraw weekday games consistently. The colder temperatures are only in the beginning of the season, and seem to have a noticeable effect (at least for the coldest days).&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-c7JBG0k4OBQ/T7kvpyZYOmI/AAAAAAAAG20/tC71mpum_lA/s1600/IndainsAttendance2011.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;633&#34; src=&#34;https://lh3.ggpht.com/-c7JBG0k4OBQ/T7kvpyZYOmI/AAAAAAAAG20/tC71mpum_lA/s640/IndainsAttendance2011.jpeg&#34; width=&#34;640&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;I also looked into how many games above .500 the team was and how close they were in the division race. Neither of these showed any correlation, at least at the marginal level. This is interesting because the main reason Chris Perez is frustrated is that the team is winning, so the fans should be supporting them. This shows that wining did not make much of a difference within a single year. This should be more prevalent over multiple years.&lt;br /&gt;&lt;br /&gt;Some other information that might be useful is the quality of the opponent or whether the ace of the opposing pitching staff is starting. I only included temperature and not precipitation or any other weather information.&lt;br /&gt;&lt;br /&gt;Here is the basic R code I used: &lt;br /&gt;&lt;pre class=&#34;brush: r&#34;&gt;library(ggplot2)&lt;br /&gt;ggplot(data=home.attend,aes(x=Date,y=Attendance,colour=Weekend,label=Opp,size=Temp))+&lt;br /&gt;  geom_text()+scale_size(to = c(2, 5))+theme_bw()&amp;nbsp;&lt;/pre&gt;&lt;pre class=&#34;brush: r&#34;&gt;&amp;nbsp;&lt;/pre&gt;&lt;i&gt;&lt;b&gt;Update (9/21/2013)&lt;/b&gt;&lt;/i&gt;:&lt;br /&gt;Since attendance is still a hot topic, I created the same plot for the 2013 season so far.&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-MiH0WF4KyGU/Uj5E45dKMSI/AAAAAAAAH9A/3MoE4VGYjUA/s1600/IndainsAttendance2013.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;426&#34; src=&#34;https://lh3.ggpht.com/-MiH0WF4KyGU/Uj5E45dKMSI/AAAAAAAAH9A/3MoE4VGYjUA/s1600/IndainsAttendance2013.jpeg&#34; width=&#34;640&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-mT8HBGEKwak/Uj5EauQomGI/AAAAAAAAH84/qB4e0VE6n94/s1600/IndainsAttendance2013.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;br /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s Up with Albert Pujols?</title>
      <link>/2012/05/05/whats-up-with-albert-pujols/</link>
      <pubDate>Sat, 05 May 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/05/05/whats-up-with-albert-pujols/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
After signing a huge deal with the Angels, Pujols has been having a really bad year. He hasn&#39;t hit a home run this year, breaking a career long streak. So I thought it would be a good idea to use some statistics to tell how good or bad we think Pujols will actually be this year.&lt;br /&gt;&lt;br /&gt;Coming into the year, he had a career .328/.420/.617 career AVG/OBP/SLG. Through one month, he has a .194/.237/.269. So what do we expect out of Pujols for the rest of the year?&lt;br /&gt;&lt;br /&gt;In Bayesian statistical terms, we can quantify our prior beliefs about Pujols from his history before this year. Below are histograms and fitted distributions of Pujols&#39; yearly batting lines from 2001 to 2011. His numbers are well above normal and he has been the best player in baseball for a while.&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-eBkY_jm8kn0/T6WDvtfUlZI/AAAAAAAAGss/dNE4TkjFC6I/s1600/pujols.bmp&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://1.bp.blogspot.com/-eBkY_jm8kn0/T6WDvtfUlZI/AAAAAAAAGss/dNE4TkjFC6I/s1600/pujols.bmp&#34; /&gt;&lt;/a&gt;&lt;/div&gt;So coming into this year, we would expect him to have a batting average between .290 and .370, with .330 being the most likely, for example.&lt;br /&gt;&lt;br /&gt;Combining our prior expectations with the data we have observed from this year, we can get our posterior beliefs. When we do that, we get a posterior expectation that Pujols is a true .312/.379/.451 hitter. The league averages from 2001 to 2011 are .263/.331/.418, so he is still expected to be well above the average player, even with the poor start. If we use data from just this year, we do not have enough data to give us an accurate reflection of how good he is. If we combine the data with our prior beliefs, we get a better indication of what to expect. Below is a table that compares these numbers.&lt;br /&gt;&lt;br /&gt;&lt;style type=&#34;text/css&#34;&gt;.nobrtable br { display: none } &lt;/style&gt;&lt;br /&gt;&lt;div class=&#34;nobrtable&#34;&gt;&lt;table border=&#34;2&#34; bordercolor=&#34;#3366cc&#34; cellpadding=&#34;3&#34; cellspacing=&#34;3&#34; style=&#34;background-color: white;&#34;&gt;&lt;tbody&gt;&lt;tr style=&#34;background-color: #3366cc; color: white; padding-bottom: 4px; padding-top: 5px;&#34;&gt; &lt;th&gt;&lt;br /&gt;&lt;/th&gt;&lt;th&gt;AVG&lt;/th&gt;&lt;th&gt;OBP&lt;/th&gt;&lt;th&gt;SLG&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;League&lt;/td&gt;&lt;td&gt;.263&lt;/td&gt;&lt;td&gt;.331&lt;/td&gt;&lt;td&gt;.418&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Prior&lt;/td&gt;&lt;td&gt;.328&lt;/td&gt;&lt;td&gt;.420&lt;/td&gt;&lt;td&gt;.617&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;This Year&lt;/td&gt;&lt;td&gt;.194&lt;/td&gt;&lt;td&gt;.237&lt;/td&gt;&lt;td&gt;.269&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Posterior&lt;/td&gt;&lt;td&gt;.312&lt;/td&gt;&lt;td&gt;.379&lt;/td&gt;&lt;td&gt;.451&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;Finally, we can also get the whole posterior distribution (not just the expectation). I have plotted the prior and posterior distributions on the same graph. You can see that Pujols&#39; bad month has caused our beliefs about him to decrease quite a bit. Most notable is the slugging percentage, which is likely because of his career-long homerless streak.&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-ZmO18a8vj0w/T6WLW6LnjsI/AAAAAAAAGs4/ll2ab7sGJAg/s1600/pujols-prior+and+posterior.bmp&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://1.bp.blogspot.com/-ZmO18a8vj0w/T6WLW6LnjsI/AAAAAAAAGs4/ll2ab7sGJAg/s1600/pujols-prior+and+posterior.bmp&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;What Bayesian analysis does is shrinks (or regresses) the data from this year to the prior average. This is&amp;nbsp; the same idea of regressing to the overall mean that is talked about frequently in sabermetric blogs. The difference is that regressing to the mean usually regresses to the average player in the league. With Bayesian analysis, we can regress to our prior expectation about the specific player (Albert Pujols). I believe this approach will give us better results in most cases.&lt;br /&gt;&lt;br /&gt;The R code to do the analysis can be found &lt;a href=&#34;https://docs.google.com/open?id=0B21DLJKq18K9NkNJb0lQRHNqbHM&#34;&gt;here&lt;/a&gt;. I used data from &lt;a href=&#34;http://www.baseball-reference.com/players/p/pujolal01.shtml&#34;&gt;Baseball Reference&lt;/a&gt;.&lt;/div&gt;
&lt;h2&gt;Comments&lt;/h2&gt;
&lt;div class=&#39;comments&#39;&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Andrew Landgraf&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Just a follow up: From May 6 to the end of the season he had a .305/.365/.569 split. The posterior expectation of .312/.379/.451 matches the average and on base percentage well, but his actual slugging is quite a bit higher than the posterior distribution would have predicted.&lt;br /&gt;&lt;br /&gt;Not sure what to make of this except to say he had a really bad start with slugging, which may have been caused more by random chance than the other two. And obviously the distributional assumptions are an approximation to reality.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Visualizing the Correlations of a Matrix</title>
      <link>/2012/02/17/visualizing-the-correlations-of-a-matrix/</link>
      <pubDate>Fri, 17 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/02/17/visualizing-the-correlations-of-a-matrix/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
Correlation matrices are a common way to look at the dependence of a set of variables. When the variables have spatial relationships, the correlation matrix loses some information.&lt;br /&gt;&lt;br /&gt;Lets say you have repeated observations, each one being a matrix. For example, you could have yearly observations of health statistics for a spatial grid. Lets say the grid is n by p (n*p variables) and there are m observations of the grid. If we want to get the correlations of each element of the grid, the typical way to do that would be to convert the matrix of variables into a vector of length n*p, and then calculate the correlation matrix of the vector. When you do that, however, it will no longer be obvious which of the variables are on the same row/column or are close to each other. So the typical correlation matrix is not satisfactory.&lt;br /&gt;&lt;br /&gt;What I propose is a set of &lt;a href=&#34;http://en.wikipedia.org/wiki/Small_multiple&#34;&gt;small multiples &lt;/a&gt;of correlation matrices. Instead of having an n*p by n*p correlation matrix, we will have an n by p grid of correlation matrices, each correlation matrix representing the correlation with the variable in that position of the matrix. Below is an example.&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-uKlTWBzaYhQ/Tz7SB8nALQI/AAAAAAAAF7c/ioCipoIuVgg/s1600/matrix+cor+plot.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-uKlTWBzaYhQ/Tz7SB8nALQI/AAAAAAAAF7c/ioCipoIuVgg/s1600/matrix+cor+plot.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-lv9XCCr-k0E/Tz7PVojdkfI/AAAAAAAAF7U/tFH2H8im_3Q/s1600/matrix+cor+plot.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;br /&gt;&lt;/a&gt;&lt;/div&gt;The above example is just random data, so all correlations are spurious. Blue is positive, red is negative, and white is no correlation. You can see in the row 1, column 1 matrix that the 1st row and 1st column is dark blue. This is because this is the correlation with itself. Similarly in all other rows and columns.&lt;br /&gt;&lt;br /&gt;Using a real example might display the usefulness more clearly. I am on a project estimating elements of a matrix with only the row totals and column totals. I simulated data many times and kept track of the errors. I was interested in how the errors in the different cells are correlated with each other. Below, you can see that the errors in the same row or column are positively correlated with each other, while the errors in other rows and columns are negatively correlated. This pops out at you with the below plot, but would have been difficult to figure out with a typical correlation matrix.&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-wSVkWLxaxH8/Tz7NN6lNobI/AAAAAAAAF7M/wQ7T-B-3Kx0/s1600/Correlation+of+Errors+Matrix1.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;400&#34; src=&#34;http://1.bp.blogspot.com/-wSVkWLxaxH8/Tz7NN6lNobI/AAAAAAAAF7M/wQ7T-B-3Kx0/s400/Correlation+of+Errors+Matrix1.jpg&#34; width=&#34;400&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Code:&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace; font-size: small;&#34;&gt;# Generate random data for the example&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace; font-size: small;&#34;&gt;reps=10&lt;br /&gt;mat.data=array(0,c(4,5,reps))&lt;br /&gt;for (i in 1:reps) {&lt;br /&gt;&amp;nbsp; mat.data[,,i]=matrix(rmultinom(1,20,rep(1,4*5)/(4*5)),4,5)&lt;br /&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace; font-size: small;&#34;&gt;matrix.cor.plot(mat.data)&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace; font-size: small;&#34;&gt;&lt;br /&gt;# the function&lt;br /&gt;matrix.cor.plot &amp;lt;- function(mat.data) {&lt;br /&gt;&amp;nbsp; #mat.data should be a nrow by ncol by nrep array&lt;br /&gt;&amp;nbsp; &lt;br /&gt;&amp;nbsp; nrow=dim(mat.data)[1]&lt;br /&gt;&amp;nbsp; ncol=dim(mat.data)[2]&lt;br /&gt;#&amp;nbsp;&amp;nbsp; nrep=dim(mat.data)[3]&lt;br /&gt;&amp;nbsp; &lt;br /&gt;&amp;nbsp; par(mfrow=c(nrow,ncol),cex=.75,bty=&#34;o&#34;,mar=c(1, 1, 1, 1) + 0.1)&lt;br /&gt;&amp;nbsp; &lt;br /&gt;&amp;nbsp; # red is -1, white is 0, blue is +1&lt;br /&gt;&amp;nbsp; rgb.palette &amp;lt;- colorRampPalette(c(&#34;red&#34;,&#34;white&#34;,&#34;blue&#34;), space = &#34;rgb&#34;)&lt;br /&gt;&amp;nbsp; &lt;br /&gt;&amp;nbsp; for (r in 1:nrow) {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; for (c in 1:ncol) {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; cor.mat=matrix(0,nrow,ncol)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; for (r2 in 1:nrow) { for (c2 in 1:ncol) {cor.mat[r2,c2]=cor(mat.data[r,c,],mat.data[r2,c2,]) } }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; cor.mat=t(cor.mat)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; cor.mat=cor.mat[,ncol(cor.mat):1]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; image(cor.mat,zlim=c(-1,1),col=rgb.palette(120),axes = FALSE,main=paste(&#34;Row:&#34;,r,&#34;Col:&#34;,c))&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; box()&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;}&lt;/span&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Unsupervised Image Segmentation with Spectral Clustering with R</title>
      <link>/2012/02/12/unsupervised-image-segmentation-with-spectral-clustering-with-r/</link>
      <pubDate>Sun, 12 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/02/12/unsupervised-image-segmentation-with-spectral-clustering-with-r/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
That title is quite a mouthful. This quarter, I have been reading papers on &lt;a href=&#34;http://en.wikipedia.org/wiki/Spectral_clustering&#34;&gt;Spectral Clustering&lt;/a&gt; for a reading group. The basic goal of clustering is to find groups of data points that are similar to each other. Also, data points in one group should be dissimilar to data in other clusters. This way you can summarize your data by saying there are a few groups to consider instead of all the points. Clustering is an unsupervised learning method in that there are no &#34;true&#34; groups that you are comparing the clusters to.&lt;br /&gt;&lt;br /&gt;There are many ways to do this, two of the most popular are k-means and hierarchical clustering. Spectral clustering is nice because it gives you as much flexibility as you want to define how pairs of data points are similar or dissimilar. K-means only works well for data that are grouped in elliptically shaped, whereas spectral clustering can theoretically work well for any group. For example, the data in &lt;a href=&#34;http://www.ml.uni-saarland.de/code/pSpectralClustering/images/clusters_11b_notitle2.png&#34; target=&#34;_blank&#34;&gt;this image&lt;/a&gt; is easily clustered by spectral, but would not be by k-means. The flexibility of spectral clustering can also be a burden in that there are an infinite ways to group points.&lt;br /&gt;&lt;br /&gt;The basic idea (and all the flexibility) behind spectral clustering is that you define the similarity between any two data points however you want, and put them in a matrix. So if you have 100 data points, you will end up with a 100x100 matrix, where the rth row and cth column is the similarity between the rth data point and the cth data point. You can define &#34;similarity&#34; any way you want. Popular methods are Euclidean distance, a kernel function of the Euclidean distance, or a k nearest neighbors approach.&lt;br /&gt;&lt;br /&gt;Once you have the similarity matrix, you need to create a normalized/unnormalized &lt;a href=&#34;http://en.wikipedia.org/wiki/Laplacian_matrix&#34;&gt;Laplacian&lt;/a&gt; matrix, then calculate the eigenvectors and eigenvalues of the the Laplacian. Finally, use the k-means algorithm on the eigenvalues corresponding to the k smallest eigenvectors. This will give you k clusters (something else you need to specify).&lt;br /&gt;&lt;br /&gt;The other day, someone in my office was working a project of &lt;a href=&#34;http://en.wikipedia.org/wiki/Image_segmentation&#34;&gt;Image Segmentation&lt;/a&gt; (a topic I know nothing about) for a machine learning class. I thought this would be a perfect application for spectral clustering because you can define similarity of pixels in terms of both the contrast of the pixel as well as the proximity to nearby pixels. I downloaded a few pictures from the&lt;span id=&#34;goog_358016683&#34;&gt;&lt;/span&gt;&lt;span id=&#34;goog_358016684&#34;&gt;&lt;/span&gt; &lt;a href=&#34;http://www.eecs.berkeley.edu/Research/Projects/CS/vision/bsds/&#34;&gt;Berkeley Segmentation Dataset Benchmark&lt;/a&gt; website.&lt;br /&gt;&lt;br /&gt;One thing I quickly found was that even these moderately sized pictures were too big to create a similarity matrix for in R. A typical image is 481x321=154401 pixels. So a similarity matrix between all the pixels would be 154401x154401=23 billion elements. R only allows 2^31-1=2.1 billion elements in a matrix. Even if I could create the matrix, it would take forever to calculate the eigenvectors and eigenvalues. [Note: Some people from my department actually tackled &lt;a href=&#34;http://www.stat.osu.edu/~taoshi/research/papers/2011_Schuetter_Shi_JCGS.pdf&#34; target=&#34;_blank&#34;&gt;this exact problem&lt;/a&gt; using sampling methods.]&lt;br /&gt;&lt;br /&gt;So I had to reduce the size of the image. For this I just created an image of a factor of the original dimension (about 10 to 20 times smaller), and averaged the contrast of all the points that were collapsed. I also experimented with smoothing the image first and then doing the averaging In some cases it helped in some it hurt, I think.&lt;br /&gt;&lt;br /&gt;For example here is an original picture.&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://www.eecs.berkeley.edu/Research/Projects/CS/vision/bsds/BSDS300/html/images/plain/normal/gray/86016.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://www.eecs.berkeley.edu/Research/Projects/CS/vision/bsds/BSDS300/html/images/plain/normal/gray/86016.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Then I smoothed using the image.smooth function of the fields package.&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-Rd4S9Z1Y5IE/Tzf9PWxlGII/AAAAAAAAF6M/xBUzV_EMDrE/s1600/smooth.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://lh3.ggpht.com/-Rd4S9Z1Y5IE/Tzf9PWxlGII/AAAAAAAAF6M/xBUzV_EMDrE/s1600/smooth.jpeg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;Then I reduced the dimension by a factor of 10 and averaged the original pixels. The resulting image is below. You can see there is a decent loss of information in the averaging.&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-tzIV9TQYHVI/Tzf9cKaR9YI/AAAAAAAAF6U/2sne_VgLUJQ/s1600/averaged.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://lh3.ggpht.com/-tzIV9TQYHVI/Tzf9cKaR9YI/AAAAAAAAF6U/2sne_VgLUJQ/s1600/averaged.jpeg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Finally, for the similarity, I only considered pixels that were within 3 horizontally or vertically to be similar (otherwise 0). Also, for those within 3, I used a Gaussian kernel of the difference in contrast with variance equal to 0.01. I chose this number because the variance in the data was about 0.01. Varying both of these parameters wildly affected quality of the results. I also tried using a k nearest neighbors similarity and I did not get any good results. Hence, you can see both the positive and negative of the flexibility.&lt;br /&gt;&lt;br /&gt;Anyway, here are the two clusters (white and black) using the unnormalized Laplacian.&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-dtUccbD9WeM/TzgAJH51ZAI/AAAAAAAAF6c/eUL8YFLOETE/s1600/clusters.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://lh3.ggpht.com/-dtUccbD9WeM/TzgAJH51ZAI/AAAAAAAAF6c/eUL8YFLOETE/s1600/clusters.jpeg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;It looks very good and encouraging for future problems. As stated before, however, I am not sure how to determine the parameters for a generic problem.&lt;br /&gt;&lt;br /&gt;Overlaying the cluster on the original image, you can see the two segments of the image clearly. You can also see the loss in fidelity due to reducing the size of the image.&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-FqY4mvTF2Yo/TzgKwX9ZlBI/AAAAAAAAF68/_WpfIetZVmc/s1600/overlay1b.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://lh3.ggpht.com/-FqY4mvTF2Yo/TzgKwX9ZlBI/AAAAAAAAF68/_WpfIetZVmc/s1600/overlay1b.jpeg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-LDWLf0qEKCo/TzgAJciHcaI/AAAAAAAAF6k/c4veitNzH4A/s1600/overlay.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;br /&gt;&lt;/a&gt;&lt;/div&gt;Here are a couple of other examples that worked well. With the airplane one, in particular, you can see that the clustering was able to identify an unusual shape. I was not able to get it to work well with more than two clusters, although I only tried one image that was not that easy.&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-k-7m1FTg_fI/TzgKx9lj0XI/AAAAAAAAF7E/LDjpO3w1JBg/s1600/overlay3b.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://lh3.ggpht.com/-k-7m1FTg_fI/TzgKx9lj0XI/AAAAAAAAF7E/LDjpO3w1JBg/s1600/overlay3b.jpeg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-EVSnrPb3CaA/TzgD21GoJoI/AAAAAAAAF60/y6NlonQ8Nw0/s1600/overlay3.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-36TaE1FBMGg/TzgD2VmAOFI/AAAAAAAAF6s/W0SsqyG-J_M/s1600/overlay2.jpeg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://lh3.ggpht.com/-36TaE1FBMGg/TzgD2VmAOFI/AAAAAAAAF6s/W0SsqyG-J_M/s1600/overlay2.jpeg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;For posterity, here is the code I used.&lt;br /&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;############&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;# Import the image &lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;############&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;library(jpeg)&lt;br /&gt;# http://www.eecs.berkeley.edu/Research/Projects/CS/vision/bsds/BSDS300/html/images/plain/normal/gray/86016.jpg&lt;br /&gt;rawimg=readJPEG(&#34;segment.jpeg&#34;)&lt;br /&gt;rawimg=t(rawimg)&lt;br /&gt;rawimg=rawimg[,ncol(rawimg):1]&lt;br /&gt;image(rawimg,col = grey((0:12)/12))&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;############&lt;/span&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;# Smooth the image&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;############&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;library(fields)&lt;br /&gt;smoothimg=image.smooth(rawimg,theta=2)&lt;br /&gt;image(smoothimg,col = grey((0:12)/12))&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;############&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;# Reduce Size of Image&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;############&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;olddim=dim(rawimg)&lt;br /&gt;newdim=c(round(olddim/10))&lt;br /&gt;prod(newdim)&amp;gt;2^31&lt;br /&gt;img=matrix(NA,newdim[1],newdim[2])&lt;br /&gt;for (r in 1:newdim[1]) {&lt;br /&gt;&amp;nbsp; centerx=(r-1)/newdim[1]*olddim[1]+1&lt;br /&gt;&amp;nbsp; lowerx=max(1,round(centerx-olddim[1]/newdim[1]/2,0))&lt;br /&gt;&amp;nbsp; upperx=min(olddim[1],round(centerx+olddim[1]/newdim[1]/2,0))&lt;br /&gt;&amp;nbsp; for (c in 1:newdim[2]) {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; centery=(c-1)/newdim[2]*olddim[2]+1&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; lowery=max(1,round(centery-olddim[2]/newdim[2]/2,0))&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; uppery=min(olddim[2],round(centery+olddim[2]/newdim[2]/2,0))&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; img[r,c]=mean(smoothimg$z[lowerx:upperx,lowery:uppery])&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;}&lt;br /&gt;image(img,col = grey((0:12)/12))&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;############&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;# Convert matrix to vector&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;############&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;imgvec=matrix(NA,prod(dim(img)),3)&lt;br /&gt;counter=1&lt;br /&gt;for (r in 1:nrow(img)) {&lt;br /&gt;&amp;nbsp; for (c in 1:ncol(img)) {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; imgvec[counter,1]=r&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; imgvec[counter,2]=c&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; imgvec[counter,3]=img[r,c]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; counter=counter+1&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;############&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;# Similarity Matrix&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;############&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;pixdiff=2&lt;br /&gt;sigma2=.01 #&lt;/span&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;var(imgvec[,3])&lt;/span&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;&lt;br /&gt;simmatrix=matrix(0,nrow(imgvec),nrow(imgvec))&lt;br /&gt;for(r in 1:nrow(imgvec)) {&lt;br /&gt;&amp;nbsp; cat(r,&#34;out of&#34;,nrow(imgvec),&#34;\n&#34;)&lt;br /&gt;&amp;nbsp; simmatrix[r,]=ifelse(abs(imgvec[r,1]-imgvec[,1])&amp;lt;=pixdiff &amp;amp; abs(imgvec[r,2]-imgvec[,2])&amp;lt;=pixdiff,exp(-(imgvec[r,3]-imgvec[,3])^2/sigma2),0)&lt;br /&gt;}&lt;br /&gt;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;############&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;# Weighted and Unweighted Laplacian&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;############&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;D=diag(rowSums(simmatrix))&lt;br /&gt;Dinv=diag(1/rowSums(simmatrix))&lt;br /&gt;L=diag(rep(1,nrow(simmatrix)))-Dinv %*% simmatrix&lt;br /&gt;U=D-simmatrix&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;############&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;# Eigen and k-means&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;############&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;evL=eigen(L,symmetric=TRUE)&lt;br /&gt;evU=eigen(U,symmetric=TRUE)&lt;br /&gt;&lt;br /&gt;kmL=kmeans(evL$vectors[,(ncol(simmatrix)-1):(ncol(simmatrix)-0)],centers=2,nstart=5)&lt;br /&gt;segmatL=matrix(kmL$cluster-1,newdim[1],newdim[2],byrow=T)&lt;br /&gt;if(max(segmatL) &amp;amp; sum(segmatL==1)&amp;lt;sum(segmatL==0)) {segmatL=abs(segmatL-1)}&lt;br /&gt;&lt;br /&gt;kmU=kmeans(evU$vectors[,(ncol(simmatrix)-1):(ncol(simmatrix)-0)],centers=2,nstart=5)&lt;br /&gt;segmatU=matrix(kmU$cluster-1,newdim[1],newdim[2],byrow=T)&lt;br /&gt;if(max(segmatU) &amp;amp;sum(segmatU==1)&amp;lt;sum(segmatU==0)) {segmatU=abs(segmatU-1)}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;############&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;# Plotting the clusters&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;############&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;image(segmatL, col=grey((0:15)/15))&lt;br /&gt;image(segmatU, col=grey((0:12)/12))&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;############&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;# Overlaying the original and the clusters&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;############&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;image(seq(0,1,length.out=olddim[1]),seq(0,1,length.out=olddim[2]),rawimg,col = grey((0:12)/12),xlim=c(-.1,1.1),ylim=c(-.1,1.1),xlab=&#34;&#34;,ylab=&#34;&#34;)&lt;br /&gt;&lt;br /&gt;segmat=segmatU&lt;br /&gt;linecol=2&lt;br /&gt;linew=3&lt;br /&gt;for(r in 2:newdim[1]) {&lt;br /&gt;&amp;nbsp; for (c in 2:newdim[2]) {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if(abs(segmat[r-1,c]-segmat[r,c])&amp;gt;0) {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; xloc=(r-1)/(newdim[1])&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ymin=(c-1)/(newdim[2])&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ymax=(c-0)/(newdim[2])&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; segments(xloc,ymin,xloc,ymax,col=linecol,lwd=linew)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if(abs(segmat[r,c-1]-segmat[r,c])&amp;gt;0) {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; yloc=(c-1)/(newdim[2])&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; xmin=(r-1)/(newdim[1])&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; xmax=(r-0)/(newdim[1])&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; segments(xmin,yloc,xmax,yloc,col=linecol,lwd=linew)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;}&lt;/span&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Using JMP to Create a Map</title>
      <link>/2011/03/10/using-jmp-to-create-a-map/</link>
      <pubDate>Thu, 10 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>/2011/03/10/using-jmp-to-create-a-map/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
I am a big fan of SAS&#39;s JMP software. It is the first statistical program I learned and I really like how the emphasize visualization. In their most recent update, JMP 9 now has the ability to create maps. I have been itching to test this out for a little while and I came across a &lt;a href=&#34;http://blog.cgpgrey.com/how-many-americans-have-a-passport-the-percentages-state-by-state/&#34;&gt;map on the internet &lt;/a&gt;that I thought would be a good test. It is the percentage of the population of each state that has a passport.&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://andrewsullivan.theatlantic.com/.a/6a00d83451c45669e2014e868f74e0970d-550wi&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;353&#34; src=&#34;http://andrewsullivan.theatlantic.com/.a/6a00d83451c45669e2014e868f74e0970d-550wi&#34; width=&#34;400&#34; /&gt;&amp;nbsp;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;Luckily, the website has the source data so I &#34;jumped&#34; right in. It was really easy.&lt;br /&gt;&lt;ol&gt;&lt;li&gt;Copy and paste the data into JMP.&amp;nbsp;&lt;/li&gt;&lt;li&gt;Open the Graph Builder under the Graph menu.&amp;nbsp;&lt;/li&gt;&lt;li&gt;Drag the State field into the shape area on the lower left corner.&lt;/li&gt;&lt;/ol&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;https://lh4.googleusercontent.com/-lfAtOpUGw0w/TXltfam1YpI/AAAAAAAAFrc/9Prld6kfodc/s1600/JMPMAP1.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;404&#34; src=&#34;https://lh4.googleusercontent.com/-lfAtOpUGw0w/TXltfam1YpI/AAAAAAAAFrc/9Prld6kfodc/s640/JMPMAP1.png&#34; width=&#34;640&#34; /&gt;&lt;/a&gt;&lt;/div&gt;You can see the outline of the USA in the map. JMP recognizes that the state field is filled with US state names, so it knows to open the shapefile of the US states.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 4. Drag the Population with Passport field onto the main map. You can also drag it into the Color area.&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;https://lh6.googleusercontent.com/-DPzzTB6dRYc/TXlvrZUn45I/AAAAAAAAFrg/8JoGc11lp5Y/s1600/JMPMAP2.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;377&#34; src=&#34;https://lh6.googleusercontent.com/-DPzzTB6dRYc/TXlvrZUn45I/AAAAAAAAFrg/8JoGc11lp5Y/s640/JMPMAP2.png&#34; width=&#34;640&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 5. Right click on the color and select &#34;Gradient...&#34; to customize the colors as you like. I changed it to &#34;White to Blue&#34; and checked the &#34;Reverse Colors&#34; check box to match the original map.&lt;br /&gt;&lt;br /&gt;Below is the final result. Very quick and easy with a pretty result.&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;https://lh3.googleusercontent.com/-uahR9PsA2D4/TXlvrybSM0I/AAAAAAAAFrk/FB-iMviw_oA/s1600/JMPMAP3.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://lh3.googleusercontent.com/-uahR9PsA2D4/TXlvrybSM0I/AAAAAAAAFrk/FB-iMviw_oA/s1600/JMPMAP3.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2&gt;Comments&lt;/h2&gt;
&lt;div class=&#39;comments&#39;&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Xan Gregg&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Nice work. You might try the reverse the labels instead of the colors -- I usually like the bigger numbers to be at the top of the legend list. (I also like bigger numbers to be associated with darker colors, but I realize you&amp;#39;re trying to duplicate that feature of the original.)&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Empirical Bayes Estimation of On Base Percentage</title>
      <link>/2010/12/31/empirical-bayes-estimation-of-on-base-percentage/</link>
      <pubDate>Fri, 31 Dec 2010 00:00:00 +0000</pubDate>
      
      <guid>/2010/12/31/empirical-bayes-estimation-of-on-base-percentage/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
I guess you could call this On Bayes Percentage. *cough*&lt;br /&gt;&lt;br /&gt;Fresh off learning Bayesian techniques in one of my classes last quarter, I thought it would be fun to try to apply the method. I was able to find some examples of &lt;a href=&#34;http://en.wikipedia.org/wiki/Hierarchical_Bayes_model&#34;&gt;Hierarchical Bayes &lt;/a&gt;being used to analyze baseball data at &lt;a href=&#34;http://www-stat.wharton.upenn.edu/%7Estjensen/&#34;&gt;Wharton&lt;/a&gt;. &lt;br /&gt;&lt;br /&gt;&lt;b&gt;Setting up the problem&lt;/b&gt;&lt;br /&gt;On base percentage (OBP) is probably the most important basic offensive statistic in baseball. Getting a reliable estimate of a players true ability to get on base is therefore important. The basic problem is that the sample size we get from one season rarely has enough observations so that we are certain of a player&#39;s ability. Even though there are 162 games in a season, there is a possibility that the actual OBP is the result of luck rather than skill. Bayesian analysis will &#34;regress&#34; the actual observed OBP to the mean, in that if a player has a small number of plate appearances (PA) it doesn&#39;t give them very much weight and the result will be something closer to the overall (MLB) average. On the other hand, if a player has quite a few PAs then it believes that the results are not the result of luck and it gives the observations a lot of weight.&lt;br /&gt;We are trying to estimate the &#34;true&#34; OBP of each batter. Bayesian analysis assumes that the true OBP is random. &lt;a href=&#34;http://en.wikipedia.org/wiki/Empirical_Bayes_method&#34;&gt;Empirical Bayes&lt;/a&gt; is a method of figuring out the distribution of &#34;true&#34; OBP using the data. OBP is times on base divided by PA. Times on base (X) for each batter is distributed &lt;a href=&#34;http://en.wikipedia.org/wiki/Binomial_distribution&#34;&gt;binomial&lt;/a&gt; with n=PA and p=true OBP. We further assume that p is distributed &lt;a href=&#34;http://en.wikipedia.org/wiki/Beta_distribution&#34;&gt;Beta&lt;/a&gt; with parameters a and b. It follows from this that the marginal distribution of X is distributed according to the distribution:&lt;br /&gt;gamma(a+b)*gamma(a+x)*gamma(n-x+b)*(n choose x)/(gamma(a)*gamma(b)*gamma(a+b+n))&lt;br /&gt;where gamma is the &lt;a href=&#34;http://en.wikipedia.org/wiki/Gamma_function&#34;&gt;gamma function&lt;/a&gt;.&lt;br /&gt;We will estimate the parameters a and b based on the data (X), using its marginal distribution (the &#34;empirical&#34; part of Bayes). To do this I found that likelihood of the marginal distribution of all the batters. Then I maximized this likelihood by adjusting the parameters a and b. This is called the ML-II.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;The Analysis&lt;/b&gt;&lt;br /&gt;I used data for all non-pitchers in 2010. I assume that each player is independent. In doing that, I just have to multiply all the marginals for each player together to get the likelihood. When I do this and maximize it with respect to a and b, I get estimates that a = 83.48291 and b = 174.9038. I think this can be interpreted that prior mean (what we would assume that average OBP of a batter is before seeing him bat) is a/(a+b) = 0.323. This is pretty close to what the overall OBP of the league was (0.330). I think it makes sense that the prior is lower than the league average because batters who do well will get more opportunities and players that do poorly will get fewer. So the league average is biased high. &lt;br /&gt;Below is a graph of the prior distribution and the updated posteriors of every batter. You can (sort of) see that the posteriors have tighter distributions than the prior does. (The posterior distribution of each batter in this case is the distribution of OBP after we have observed PA and the actual OBP.)&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/_qD9db1gpElc/TR1lbFd8yfI/AAAAAAAAFhQ/IkoRr-9FrZw/s1600/dist.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://4.bp.blogspot.com/_qD9db1gpElc/TR1lbFd8yfI/AAAAAAAAFhQ/IkoRr-9FrZw/s1600/dist.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;One way to see why this Bayesian analysis is useful is to compare the posterior means with the observed OBP. If someone has only a few PAs, their OBP could be very high or very low and this may mislead you into thinking that this batter is very good or bad. However, the posterior mean takes into account the number of PAs. Below is a graph comparing the two. You can see that the range of values for posterior mean is pretty small, especially compare to actual OBP.&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/_qD9db1gpElc/TR1mzX6IK2I/AAAAAAAAFhU/hlrgx0oDK38/s1600/OBPvsPostMean.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://4.bp.blogspot.com/_qD9db1gpElc/TR1mzX6IK2I/AAAAAAAAFhU/hlrgx0oDK38/s1600/OBPvsPostMean.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Here is a list of the highest posterior mean OBP:&lt;br /&gt;&lt;br /&gt;&lt;table border=&#34;0&#34; cellpadding=&#34;0&#34; cellspacing=&#34;0&#34; style=&#34;width: 252px;&#34;&gt;&lt;colgroup&gt;&lt;col style=&#34;width: 87pt;&#34; width=&#34;116&#34;&gt;&lt;/col&gt;  &lt;col style=&#34;width: 54pt;&#34; width=&#34;72&#34;&gt;&lt;/col&gt;  &lt;col style=&#34;width: 48pt;&#34; width=&#34;64&#34;&gt;&lt;/col&gt;  &lt;/colgroup&gt;&lt;tbody&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl65&#34; height=&#34;20&#34; style=&#34;height: 15pt; width: 87pt;&#34; width=&#34;116&#34;&gt;&lt;b&gt;Batter&lt;/b&gt;&lt;/td&gt;   &lt;td class=&#34;xl65&#34; style=&#34;border-left: medium none; width: 54pt;&#34; width=&#34;72&#34;&gt;&lt;b&gt;Posterior Mean&lt;/b&gt;&lt;/td&gt;   &lt;td class=&#34;xl65&#34; style=&#34;border-left: medium none; width: 48pt;&#34; width=&#34;64&#34;&gt;&lt;b&gt;Actual OBP&lt;/b&gt;&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl65&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Joey Votto&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.396&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.424&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl65&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Miguel Cabrera&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.392&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.420&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl65&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Albert Pujols&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.390&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.414&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl65&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Justin Morneau&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.388&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.437&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl65&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Josh Hamilton&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.383&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.411&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl65&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Prince Fielder&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.380&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.401&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl65&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Shin-Soo Choo&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.379&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.401&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl65&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Kevin Youkilis&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.379&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.412&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl65&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Joe Mauer&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.378&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.402&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl65&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Adrian   Gonzalez&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.374&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.393&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl65&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Daric Barton&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.374&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.393&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl65&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Jim Thome&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.373&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.412&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl65&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Paul Konerko&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.373&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.393&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl65&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Jason Heyward&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.373&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.393&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl65&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Matt Holliday&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.371&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.390&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl65&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Carlos Ruiz&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.371&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.400&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl65&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Manny Ramirez&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.371&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.409&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl65&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Billy Butler&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.370&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.388&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl65&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Jayson Werth&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.370&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.388&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl65&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Ryan Zimmerman&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.369&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl66&#34; style=&#34;border-left: medium none; border-top: medium none;&#34;&gt;0.388&lt;/td&gt;  &lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;And here is a list of the lowest posterior mean OBP:&lt;br /&gt;&lt;br /&gt;&lt;table border=&#34;0&#34; cellpadding=&#34;0&#34; cellspacing=&#34;0&#34; style=&#34;width: 245px;&#34;&gt;&lt;colgroup&gt;&lt;col style=&#34;width: 98pt;&#34; width=&#34;131&#34;&gt;&lt;/col&gt;  &lt;col style=&#34;width: 29pt;&#34; width=&#34;39&#34;&gt;&lt;/col&gt;  &lt;col style=&#34;width: 56pt;&#34; width=&#34;75&#34;&gt;&lt;/col&gt;  &lt;/colgroup&gt;&lt;tbody&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl66&#34; height=&#34;20&#34; style=&#34;height: 15pt; width: 98pt;&#34; width=&#34;131&#34;&gt;&lt;b&gt;Batter&lt;/b&gt;&lt;/td&gt;   &lt;td class=&#34;xl66&#34; style=&#34;border-left: medium none; width: 29pt;&#34; width=&#34;39&#34;&gt;&lt;b&gt;Posterior Mean&lt;/b&gt;&lt;/td&gt;   &lt;td class=&#34;xl66&#34; style=&#34;border-left: medium none; width: 56pt;&#34; width=&#34;75&#34;&gt;&lt;b&gt;Actual OBP&lt;/b&gt;&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl66&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Brandon Wood&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl65&#34;&gt;0.252&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl67&#34; style=&#34;border-top: medium none;&#34;&gt;0.175&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl66&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Pedro Feliz&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl65&#34;&gt;0.271&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl67&#34; style=&#34;border-top: medium none;&#34;&gt;0.240&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl66&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Jeff Mathis&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl65&#34;&gt;0.276&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl67&#34; style=&#34;border-top: medium none;&#34;&gt;0.219&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl66&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Garret   Anderson&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl65&#34;&gt;0.277&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl67&#34; style=&#34;border-top: medium none;&#34;&gt;0.204&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl66&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Adam Moore&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl65&#34;&gt;0.281&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl67&#34; style=&#34;border-top: medium none;&#34;&gt;0.230&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl66&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Josh Bell&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl65&#34;&gt;0.285&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl67&#34; style=&#34;border-top: medium none;&#34;&gt;0.224&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl66&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Jose Lopez&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl65&#34;&gt;0.286&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl67&#34; style=&#34;border-top: medium none;&#34;&gt;0.270&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl66&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Peter Bourjos&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl65&#34;&gt;0.287&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl67&#34; style=&#34;border-top: medium none;&#34;&gt;0.237&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl66&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Aaron Hill&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl65&#34;&gt;0.287&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl67&#34; style=&#34;border-top: medium none;&#34;&gt;0.271&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl66&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Tony Abreu&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl65&#34;&gt;0.288&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl67&#34; style=&#34;border-top: medium none;&#34;&gt;0.244&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl66&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Koyie Hill&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl65&#34;&gt;0.291&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl67&#34; style=&#34;border-top: medium none;&#34;&gt;0.254&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl66&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Gerald Laird&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl65&#34;&gt;0.291&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl67&#34; style=&#34;border-top: medium none;&#34;&gt;0.263&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl66&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Drew Butera&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl65&#34;&gt;0.291&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl67&#34; style=&#34;border-top: medium none;&#34;&gt;0.237&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl66&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Jeff Clement&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl65&#34;&gt;0.291&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl67&#34; style=&#34;border-top: medium none;&#34;&gt;0.237&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl66&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Matt Carson&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl65&#34;&gt;0.291&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl67&#34; style=&#34;border-top: medium none;&#34;&gt;0.193&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl66&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Humberto   Quintero&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl65&#34;&gt;0.292&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl67&#34; style=&#34;border-top: medium none;&#34;&gt;0.262&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl66&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Wil Nieves&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl65&#34;&gt;0.292&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl67&#34; style=&#34;border-top: medium none;&#34;&gt;0.244&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl66&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Matt   Tuiasosopo&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl65&#34;&gt;0.292&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl67&#34; style=&#34;border-top: medium none;&#34;&gt;0.234&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl66&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Luis Montanez&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl65&#34;&gt;0.292&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl67&#34; style=&#34;border-top: medium none;&#34;&gt;0.155&lt;/td&gt;  &lt;/tr&gt;&lt;tr height=&#34;20&#34; style=&#34;height: 15pt;&#34;&gt;   &lt;td class=&#34;xl66&#34; height=&#34;20&#34; style=&#34;border-top: medium none; height: 15pt;&#34;&gt;Cesar Izturis&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl65&#34;&gt;0.292&lt;/td&gt;   &lt;td align=&#34;right&#34; class=&#34;xl67&#34; style=&#34;border-top: medium none;&#34;&gt;0.277&lt;/td&gt;  &lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;You can see that all of the posterior means are pulled closer to the overall mean (the good players look worse and the bad players look better). The order changes a little bit but not too much. &lt;br /&gt;&lt;br /&gt;You can see the effect of sample size (PAs) by comparing Justin Morneau with Joey Votto. Morneau had a higher OBP, but Votto ended up with a higher posterior mean because he had more PAs (Votto had 648 while Morneau had 348). Here are their posterior distributions:&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/_qD9db1gpElc/TR1tYF814sI/AAAAAAAAFhY/4-gKxwH1JgY/s1600/distcompare.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://1.bp.blogspot.com/_qD9db1gpElc/TR1tYF814sI/AAAAAAAAFhY/4-gKxwH1JgY/s1600/distcompare.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;Because of the additional PAs, you can see that the distribution of Votto is a little tighter than Morneau. We are more sure that Votto is excellent than we are sure that Morneau is excellent.&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Week 3 NFL Survival Odds</title>
      <link>/2010/09/21/week-3-nfl-survival-odds/</link>
      <pubDate>Tue, 21 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>/2010/09/21/week-3-nfl-survival-odds/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
Continuing my series of trying to figure out which team is best to pick for survival football and then ignoring it, I present my week 3 analysis. I used the same method as the &lt;a href=&#34;http://alandgraf.blogspot.com/2010/09/nfl-survival-odds.html&#34;&gt;past 2&lt;/a&gt; &lt;a href=&#34;http://alandgraf.blogspot.com/2010/09/week-2-nfl-survival-odds.html&#34;&gt;weeks&lt;/a&gt;, and didn&#39;t make any updates to it since last week. &lt;br /&gt;Here we go:&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/_qD9db1gpElc/TJlSf0OSRNI/AAAAAAAAFfk/NXfI3JzlHKg/s1600/NFLsurvOddsWk3.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;640&#34; src=&#34;http://1.bp.blogspot.com/_qD9db1gpElc/TJlSf0OSRNI/AAAAAAAAFfk/NXfI3JzlHKg/s640/NFLsurvOddsWk3.jpg&#34; width=&#34;146&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt; &lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;br /&gt;&lt;/div&gt;NE (53%), BAL (20%), WAS (8%), and MIN (7%) are the most common teams picked in the Yahoo! leagues. They are also the top four teams according to my metric in a different order.&lt;br /&gt;This week has NE favored by the most that they will be favored by for the rest of the season and by quite a bit so it makes sense that they are ranked at the top. Maybe the biggest difference between this analysis and the Yahoo! distribution is that Baltimore has 20% of Yahoo! but is just fourth best here. I would have to say that my numbers make more sense because Baltimore has three more games with a spread of 10 or higher and couple more with a spread higher than 6. I am surprised that Washington is up on both lists because they are only favored by 4 and playing an away game. Although they only have one more playable game and that is a 6 point favorite.&lt;br /&gt;I would definitely pick New England this week if perfection is your goal.&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Week 2 NFL Survival Odds</title>
      <link>/2010/09/20/week-2-nfl-survival-odds/</link>
      <pubDate>Mon, 20 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>/2010/09/20/week-2-nfl-survival-odds/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
So this is late, but I already did the analysis and I wanted to share my results for posterity. I used the same method as &lt;a href=&#34;http://alandgraf.blogspot.com/2010/09/nfl-survival-odds.html&#34;&gt;last time &lt;/a&gt;to try to evaluate who should be picked in a survival football pick &#39;em. This method basically only tries to figure out which teams, or combinations of teams, give you the best chance of getting all of your picks correct for the entire year. Obviously you want to pick a team this week that has the best chance of winning. But you do not want to pick a team that also has a lot of future value, where they will be favored by quite a bit in their remaining games. To reiterate, the way I did this is that I randomly picked a teams for the remainder of the season. I then used the Las Vegas point spreads of all the games to give determine the probability of winning each game and the rest of the games. Finally, I compared the average probability of winning every game when picking team X next week to the average probability of winning every game when picking a random team next week. I express this as a ratio - the higher, the better.&lt;br /&gt;&lt;br /&gt;There are a couple of differences to how I did this last week.&lt;br /&gt;&lt;ul&gt;&lt;li&gt;I modified the sampling of teams so that it does not choose teams on a bye week. This saved a lot of wasted simulations, and helps to make the results more stable. Therefore, I only simulated 100,000 seasons worth of picks compared to 1,000,000 last week.&lt;/li&gt;&lt;li&gt;I omitted the team I picked last week from consideration of being picked for the rest of the season. Last week I picked Chicago, so they are not included.&amp;nbsp;&lt;/li&gt;&lt;li&gt;The bar charts on the graphic start at zero. I committed a cardinal sin of graphing last week because of Excel&#39;s defaults.&lt;/li&gt;&lt;/ul&gt;Here is what I came up with for Week 2:&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/_qD9db1gpElc/TJgAZzaW1MI/AAAAAAAAFfc/G6J06nJzRpE/s1600/NFLsurvOddsWk2.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;640&#34; src=&#34;http://4.bp.blogspot.com/_qD9db1gpElc/TJgAZzaW1MI/AAAAAAAAFfc/G6J06nJzRpE/s640/NFLsurvOddsWk2.jpg&#34; width=&#34;152&#34; /&gt;&lt;/a&gt;&lt;/div&gt;What this is saying is that you are about 48% more likely to go 16 - 0 for the rest of the year if you choose Green Bay than if you pick a random team. &lt;br /&gt;One aspect this method does not address is that your goal is not always to have a perfect season. If the league is small enough, you just want to outlast your opponents. My league only had about 10 people to start. If you looked at Yahoo!&#39;s dashboard, you&#39;d see that 56% of people chose GB this week. If they go down and you didn&#39;t pick them, your chances of winning increase dramatically. That is why I didn&#39;t choose GB and why I lost.&lt;br /&gt;I chose DAL, because the spread was high, the percent taking them was low, and they had less future value. It was almost entirely on the recommendation of Vegas Watch. Maybe I should have looked at my ranking and picked Oakland, Atlanta or Cleveland since there was even a lower percentage picking those teams and a higher ranking than Dallas. With hindsight, we now know that Green Bay, Oakland, and Atlanta won and Cleveland and Dallas lost. But there was a strategy to it because 4 of the 9 teams that picked took Green Bay. If they lost and my team won, I would have had a much better chance of winning.&lt;br /&gt;I will brainstorm about a way to factor the pick distribution into the rankings, but I do not think it is possible the way it is currently set up.&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>NFL Survival Odds</title>
      <link>/2010/09/08/nfl-survival-odds/</link>
      <pubDate>Wed, 08 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>/2010/09/08/nfl-survival-odds/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
The NFL season is starting tomorrow night and I am in a survival league this year. If you are not familiar, in a survival league, each week you pick one team to win their game. Once you pick a team, you can no longer pick them for the rest of the season. So you have to balance pick who you think has the best odds of winning this week and what the rest of the team&#39;s schedule looks like.&lt;br /&gt;&lt;br /&gt;There are some sites online that are very helpful for deciding which team to pick this week. One of them is &lt;a href=&#34;http://www.survivorgrid.com/&#34;&gt;http://www.survivorgrid.com/&lt;/a&gt;. I was wondering if there was a way to use this information to automatically decide which team to pick. This is an optimization problem with a lot of moving pieces, so simulation seemed like a natural choice.&lt;br /&gt;&lt;br /&gt;I downloaded the spreads for each game from that website (using some expert Excel skills). From the lines, I was able to discern the probability of winning the game from &lt;a href=&#34;http://www.stanford.edu/class/stats50/handouts/stern.pdf&#34;&gt;this paper&lt;/a&gt;. (I found out about this method from the book &lt;i&gt;Mathletics&lt;/i&gt;.) Basically, I just assume that margin of victory for the game is normally distributed with a mean equal to the spread (meaning the bookies are on average right) and a standard deviation equal to 13.86 points (as found in that paper). I finally calculate the probability that the margin of victory (&amp;gt;0) is in the team&#39;s favor. There are obviously a lot of assumptions here (I doubt the spread is normal plus we are dealing with discrete amounts), but at least this gives us a ballpark.&lt;br /&gt;&lt;br /&gt;So now I have the probability of each team winning each of their remaining games. Next, I simulated. If I wanted to spend more time, I would have used a genetic algorithm or some other AI to try to find the best combination of picks. But I decided to go brute force because I didn&#39;t want to spend a lot of time. Here was my process:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;I told R to randomly sample which teams to pick each week (SD for week 1, IND for week 2, etc.)&lt;/li&gt;&lt;li&gt;Using the probabilities I created from the spreads, I calculated the probability that this combination of picks goes undefeated the whole season. The probability of going undefeated is the product of winning all of the individual games.&lt;/li&gt;&lt;ul&gt;&lt;li&gt;I wish there was an easy way, but I had to waste a lot of trials here. Whenever a team had bye and the random sample picked that team on that week, they obviously have a 0% chance of advancing. I wanted to prevent the random sample from selecting teams on a bye but it became a little hairy so I gave up.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;Do this 1,000,000 times &lt;/li&gt;&lt;li&gt;Analyze the picks with the highest probability of going undefeated.&lt;/li&gt;&lt;/ul&gt;&amp;nbsp;Here are the 20 best simulations I came up with. You can see that the even the best have pretty low odds of going the distance.&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/_qD9db1gpElc/TIhOFzVTMLI/AAAAAAAAFZs/pr1n1IM7KHk/s1600/NFLsurvOdds.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;355&#34; src=&#34;http://1.bp.blogspot.com/_qD9db1gpElc/TIhOFzVTMLI/AAAAAAAAFZs/pr1n1IM7KHk/s640/NFLsurvOdds.jpg&#34; width=&#34;640&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Finally, I took the average probability of winning it all when each team was selected for the first game. I then compared that to the average overall probability of winning it all. This should give you a good idea of what team to select this week.&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/_qD9db1gpElc/TIhRd2RD6PI/AAAAAAAAFZ0/us7E1Nz7A6A/s1600/NFLsurvOdds2.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;640&#34; src=&#34;http://1.bp.blogspot.com/_qD9db1gpElc/TIhRd2RD6PI/AAAAAAAAFZ0/us7E1Nz7A6A/s640/NFLsurvOdds2.jpg&#34; width=&#34;147&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;This is probably the best way to use this data rather than looking at the best combination of picks since the lines for the rest of the year will see a significant change as they get closer. This also agrees with &lt;a href=&#34;http://vegaswatch.net/2010/09/2010-nfl-survivor-week-1.html&#34;&gt;Vegas Watch&#39;s analysis&lt;/a&gt;, which I like to see.&lt;/div&gt;
&lt;h2&gt;Comments&lt;/h2&gt;
&lt;div class=&#39;comments&#39;&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Andrew&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
I was thinking the same thing. I cannot think of an easy application to the way I have set up the problem though. I am currently trying to find the best probability of getting them all correct, so I really don&amp;#39;t care who other people are selecting.&lt;br /&gt;I would need to formulate the problem differently to account for that. I think I would also need to have an idea of what teams people have picked in the past and what strategy they will use in the future. Then I could run a simulation and see which team gives the highest probability of finishing in the top x%.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#39;comment&#39;&gt;
&lt;div class=&#39;author&#39;&gt;Vegas Watch&lt;/div&gt;
&lt;div class=&#39;content&#39;&gt;
Interesting approach.  It seems to me like this system would do a great job of taking into account probability of advancing to next week while saving as much future value as possible, but it doesn&amp;#39;t factor in what % of people are picking each team, does it?  I&amp;#39;ve found -- in much less complex analysis, generally just comparing two options -- that taking a less popular side can make up for a good deal of win probability.  Doubt it will make a difference this week, but eventually there will be a team that&amp;#39;s extremely obvious, so your sim says to take them, but half your pool is taking them as well, which presents a problem.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Why We Blog</title>
      <link>/2010/08/29/why-we-blog/</link>
      <pubDate>Sun, 29 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>/2010/08/29/why-we-blog/</guid>
      <description>
&lt;div class=&#39;post&#39;&gt;
If the past is a predictor of future performance, then there is about a 99.3% chance that I will stop updating this in 2 weeks. But you have to start somewhere. That being said, there are two reasons I want to start a blog:&lt;br /&gt;&lt;ol&gt;&lt;li&gt;I think it would be really awesome if I was able to work as a statistician for a major league baseball team. To get a job like that, I will need to give some sort of reference to baseball statistic-ry that I have done. This gives me such an outlet.&lt;/li&gt;&lt;li&gt;I am pursuing a PhD in statistics. In order to get a PhD, I will have to write a thesis. On the recommendation of &lt;a href=&#34;http://matt.might.net/articles/successful-phd-students/&#34;&gt;this website&lt;/a&gt;, a blog is a good way to improve my writing. Quote:&lt;/li&gt;&lt;/ol&gt;&lt;blockquote&gt;&lt;blockquote&gt;That&#39;s why I recommend that new students start a blog.  Even if no one else reads it, start one.  You don&#39;t even have to write about your research.  Practicing the act of writing is all that matters.&amp;nbsp; &lt;/blockquote&gt;&lt;/blockquote&gt;I found the link above because there was another post on the same website that helped put school in perspective for me that is worth sharing &lt;a href=&#34;http://matt.might.net/articles/phd-school-in-pictures/&#34;&gt;http://matt.might.net/articles/phd-school-in-pictures/&lt;/a&gt;.&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>My Projects</title>
      <link>/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/</guid>
      <description>

&lt;h2 id=&#34;machine-learning-competitions&#34;&gt;Machine Learning Competitions&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Won Kaggle&amp;rsquo;s 2017 March Machine Learning Mania Competition &amp;ndash; &lt;a href=&#34;http://blog.kaggle.com/2017/05/19/march-machine-learning-mania-1st-place-winners-interview-andrew-landgraf/&#34; target=&#34;_blank&#34;&gt;Blog post&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Second place in 2017 Global Energy Forecasting Competition Qualifying Match &amp;ndash; &lt;a href=&#34;https://doi.org/10.1016/j.ijforecast.2019.02.003&#34; target=&#34;_blank&#34;&gt;Paper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Led the team that won the &lt;a href=&#34;http://artsandsciences.osu.edu/news/statistics-graduate-students-win-national-data-analyticsmodeling-competition&#34; target=&#34;_blank&#34;&gt;2013 Capital One Student Modeling Competition&lt;/a&gt;. The task was to build a recommender system to offer the most relevant coupons to customers. Our solution extended the matrix factorization techniques that were used in the &lt;a href=&#34;http://en.wikipedia.org/wiki/Netflix_Prize&#34; target=&#34;_blank&#34;&gt;Netflix Prize&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;logistic-pca-and-generalized-pca&#34;&gt;Logistic PCA and Generalized PCA&lt;/h2&gt;

&lt;p&gt;My &lt;a href=&#34;https://etd.ohiolink.edu/ap/10?0::NO:10:P10_ACCESSION_NUM:osu1437610558&#34; target=&#34;_blank&#34;&gt;dissertation&lt;/a&gt; research with &lt;a href=&#34;http://www.stat.osu.edu/~yklee/&#34; target=&#34;_blank&#34;&gt;Prof. Yoonkyung Lee&lt;/a&gt; deals with dimensionality reduction of binary and count data. We propose a generalization of principal component analysis to non-Gaussian data. Our method minimizes the deviance by solving for a projection matrix which projects the natural parameters of the saturated model onto a lower dimensional space. Two articles are available &lt;a href=&#34;http://www.stat.osu.edu/~yklee/paper.html&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;. An R package implementing this research for binary data is available on &lt;a href=&#34;https://cran.r-project.org/web/packages/logisticPCA/index.html&#34; target=&#34;_blank&#34;&gt;CRAN&lt;/a&gt;. A complementary R package for all types of data is available on &lt;a href=&#34;https://github.com/andland/generalizedPCA&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt;. For this research, I won the department&amp;rsquo;s &lt;a href=&#34;https://stat.osu.edu/about/department-awards&#34; target=&#34;_blank&#34;&gt;Whitney Award for Outstanding Thesis Researcher&lt;/a&gt;.&lt;/p&gt;

&lt;!--- 
## Origin-Destination Estimation on Bus Routes
Given passenger boarding and alighting counts which are automatically generated by buses, we have been developing methods to improve [origin-destination (OD) flow estimation](http://transitlab.osu.edu/research/origin-destination-flows). Our method uses variational Bayes to estimate the posterior of the OD flows. When multiple patterns may be occurring during a period, we can determine the number of patterns and cluster bus trips, which leads to increased accuracy. Two papers are in preparation and an R package is in early development. For my work at the transit lab, I was awarded the [Whitney Award for best Research Associate](http://www.stat.osu.edu/node/1503).

## Predicting Student Enrollment
During my summer at [Data Science for Social Good](http://dssg.uchicago.edu), our team worked with Chicago Public Schools to more accurately predict the number of students enrolling at each of the system&#39;s 600 schools. A blog post describing the problem is [here](http://dssg.io/2014/07/23/cps-enrollment-prediction.html) and the Github repository of some of our solutions is [here](https://github.com/dssg/predicting_student_enrollment_public).


## Public Transportation and GHG
We broadly assessed the impact that public transportation has on reducing greenhouse gas (GHG) emissions in US cities. Two papers have been published based on this research. [The first](http://www.sciencedirect.com/science/article/pii/S0967070X14001450) describes the data collection process and initial results. [The second](http://www.sciencedirect.com/science/article/pii/S1361920914001114) details the model we built which accounts for potential biases.
---&gt;

&lt;h2 id=&#34;r-packages&#34;&gt;R Packages&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;logisticPCA &amp;ndash; Dimensionality reduction for binary data &amp;ndash; &lt;a href=&#34;https://cran.r-project.org/web/packages/logisticPCA/index.html&#34; target=&#34;_blank&#34;&gt;CRAN&lt;/a&gt;, &lt;a href=&#34;https://github.com/andland/logisticPCA&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;generalizedPCA &amp;ndash; Dimensionality reduction for binary, count, and multinomial data &amp;ndash; &lt;a href=&#34;https://github.com/andland/generalizedPCA&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;libFMexe &amp;ndash; A wrapper to Rendle&amp;rsquo;s &lt;a href=&#34;http://www.libfm.org/&#34; target=&#34;_blank&#34;&gt;libFM&lt;/a&gt; software for factorization machines &amp;ndash; &lt;a href=&#34;https://github.com/andland/libFMexe&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;nameage &amp;ndash; Infer a person&amp;rsquo;s age, based on their first name (assuming they were born in the USA) &amp;ndash; &lt;a href=&#34;https://github.com/andland/nameage&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;a-few-shiny-apps&#34;&gt;A Few Shiny Apps&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://andland.shinyapps.io/CD1025Playlist2&#34; target=&#34;_blank&#34;&gt;Most popular songs on CD102.5 over the past year&lt;/a&gt; &amp;ndash; &lt;a href=&#34;/2013/12/27/top-songs-by-artist-on-cd102.5-in-2013/&#34;&gt;Blog post&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://andland.shinyapps.io/ProbabilityOlderByName&#34; target=&#34;_blank&#34;&gt;Probability that one person is older than another, based only on their names&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://andland.shinyapps.io/PenalizedRegression/&#34; target=&#34;_blank&#34;&gt;Interactive visualization of penalized regression&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
